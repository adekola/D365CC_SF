/*! For license information please see SFExampleCTIDriver.js.LICENSE.txt */
(()=>{"use strict";var e={201:(e,t)=>{const r={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},n=[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE],o=[...n,r.EMAIL_SCOPE],i="Content-Type",s="Retry-After",a="X-AnchorMailbox",c="x-ms-request-id",l="x-ms-httpver",h="active-account-filters",d="common",u="organizations",g="consumers",p="access_token",m={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},f={PLAIN:"plain",S256:"S256"},y={QUERY:"query",FRAGMENT:"fragment"},C="Generic",v="-",w={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},I="appmetadata",T="1",A="authority-metadata",k="config",S="cache",b="network",E="hardcoded_values",R={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},_={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},P="throttling",M={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},O="unexpected_error",N="post_request_failed";var q=Object.freeze({__proto__:null,postRequestFailed:N,unexpectedError:O});const L={[O]:"Unexpected error in authentication.",[N]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."},U={unexpectedError:{code:O,desc:L[O]},postRequestFailed:{code:N,desc:L[N]}};class x extends Error{constructor(e,t,n){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,x.prototype),this.errorCode=e||r.EMPTY_STRING,this.errorMessage=t||r.EMPTY_STRING,this.subError=n||r.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function H(e,t){return new x(e,t?`${L[e]} ${t}`:L[e])}const D="client_info_decoding_error",B="client_info_empty_error",F="token_parsing_error",z="null_or_empty_token",K="endpoints_resolution_error",G="network_error",$="openid_config_error",Q="hash_not_deserialized",j="invalid_state",W="state_mismatch",V="state_not_found",J="nonce_mismatch",Y="auth_time_not_found",X="max_age_transpired",Z="multiple_matching_tokens",ee="multiple_matching_accounts",te="multiple_matching_appMetadata",re="request_cannot_be_made",ne="cannot_remove_empty_scope",oe="cannot_append_scopeset",ie="empty_input_scopeset",se="device_code_polling_cancelled",ae="device_code_expired",ce="device_code_unknown_error",le="no_account_in_silent_request",he="invalid_cache_record",de="invalid_cache_environment",ue="no_account_found",ge="no_crypto_object",pe="unexpected_credential_type",me="invalid_assertion",fe="invalid_client_credential",ye="token_refresh_required",Ce="user_timeout_reached",ve="token_claims_cnf_required_for_signedjwt",we="authorization_code_missing_from_server_response",Ie="binding_key_not_removed",Te="end_session_endpoint_not_supported",Ae="key_id_missing",ke="no_network_connectivity",Se="user_canceled",be="missing_tenant_id_error",Ee="method_not_implemented",Re="nested_app_auth_bridge_disabled";var _e=Object.freeze({__proto__:null,authTimeNotFound:Y,authorizationCodeMissingFromServerResponse:we,bindingKeyNotRemoved:Ie,cannotAppendScopeSet:oe,cannotRemoveEmptyScope:ne,clientInfoDecodingError:D,clientInfoEmptyError:B,deviceCodeExpired:ae,deviceCodePollingCancelled:se,deviceCodeUnknownError:ce,emptyInputScopeSet:ie,endSessionEndpointNotSupported:Te,endpointResolutionError:K,hashNotDeserialized:Q,invalidAssertion:me,invalidCacheEnvironment:de,invalidCacheRecord:he,invalidClientCredential:fe,invalidState:j,keyIdMissing:Ae,maxAgeTranspired:X,methodNotImplemented:Ee,missingTenantIdError:be,multipleMatchingAccounts:ee,multipleMatchingAppMetadata:te,multipleMatchingTokens:Z,nestedAppAuthBridgeDisabled:Re,networkError:G,noAccountFound:ue,noAccountInSilentRequest:le,noCryptoObject:ge,noNetworkConnectivity:ke,nonceMismatch:J,nullOrEmptyToken:z,openIdConfigError:$,requestCannotBeMade:re,stateMismatch:W,stateNotFound:V,tokenClaimsCnfRequiredForSignedJwt:ve,tokenParsingError:F,tokenRefreshRequired:ye,unexpectedCredentialType:pe,userCanceled:Se,userTimeoutReached:Ce});const Pe={[D]:"The client info could not be parsed/decoded correctly",[B]:"The client info was empty",[F]:"Token cannot be parsed",[z]:"The token is null or empty",[K]:"Endpoints cannot be resolved",[G]:"Network request failed",[$]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[Q]:"The hash parameters could not be deserialized",[j]:"State was not the expected format",[W]:"State mismatch error",[V]:"State not found",[J]:"Nonce mismatch error",[Y]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[X]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[Z]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[ee]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[te]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[re]:"Token request cannot be made without authorization code or refresh token.",[ne]:"Cannot remove null or empty scope from ScopeSet",[oe]:"Cannot append ScopeSet",[ie]:"Empty input ScopeSet cannot be processed",[se]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ae]:"Device code is expired.",[ce]:"Device code stopped polling for unknown reasons.",[le]:"Please pass an account object, silent flow is not supported without account information",[he]:"Cache record object was null or undefined.",[de]:"Invalid environment when attempting to create cache entry",[ue]:"No account found in cache for given key.",[ge]:"No crypto object detected.",[pe]:"Unexpected credential type.",[me]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[fe]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[ye]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Ce]:"User defined timeout for device code polling reached",[ve]:"Cannot generate a POP jwt if the token_claims are not populated",[we]:"Server response does not contain an authorization code to proceed",[Ie]:"Could not remove the credential's binding key from storage.",[Te]:"The provided authority does not support logout",[Ae]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[ke]:"No network connectivity. Check your internet connection.",[Se]:"User cancelled the flow.",[be]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[Ee]:"This method has not been implemented",[Re]:"The nested app auth bridge is disabled"},Me={clientInfoDecodingError:{code:D,desc:Pe[D]},clientInfoEmptyError:{code:B,desc:Pe[B]},tokenParsingError:{code:F,desc:Pe[F]},nullOrEmptyToken:{code:z,desc:Pe[z]},endpointResolutionError:{code:K,desc:Pe[K]},networkError:{code:G,desc:Pe[G]},unableToGetOpenidConfigError:{code:$,desc:Pe[$]},hashNotDeserialized:{code:Q,desc:Pe[Q]},invalidStateError:{code:j,desc:Pe[j]},stateMismatchError:{code:W,desc:Pe[W]},stateNotFoundError:{code:V,desc:Pe[V]},nonceMismatchError:{code:J,desc:Pe[J]},authTimeNotFoundError:{code:Y,desc:Pe[Y]},maxAgeTranspired:{code:X,desc:Pe[X]},multipleMatchingTokens:{code:Z,desc:Pe[Z]},multipleMatchingAccounts:{code:ee,desc:Pe[ee]},multipleMatchingAppMetadata:{code:te,desc:Pe[te]},tokenRequestCannotBeMade:{code:re,desc:Pe[re]},removeEmptyScopeError:{code:ne,desc:Pe[ne]},appendScopeSetError:{code:oe,desc:Pe[oe]},emptyInputScopeSetError:{code:ie,desc:Pe[ie]},DeviceCodePollingCancelled:{code:se,desc:Pe[se]},DeviceCodeExpired:{code:ae,desc:Pe[ae]},DeviceCodeUnknownError:{code:ce,desc:Pe[ce]},NoAccountInSilentRequest:{code:le,desc:Pe[le]},invalidCacheRecord:{code:he,desc:Pe[he]},invalidCacheEnvironment:{code:de,desc:Pe[de]},noAccountFound:{code:ue,desc:Pe[ue]},noCryptoObj:{code:ge,desc:Pe[ge]},unexpectedCredentialType:{code:pe,desc:Pe[pe]},invalidAssertion:{code:me,desc:Pe[me]},invalidClientCredential:{code:fe,desc:Pe[fe]},tokenRefreshRequired:{code:ye,desc:Pe[ye]},userTimeoutReached:{code:Ce,desc:Pe[Ce]},tokenClaimsRequired:{code:ve,desc:Pe[ve]},noAuthorizationCodeFromServer:{code:we,desc:Pe[we]},bindingKeyNotRemovedError:{code:Ie,desc:Pe[Ie]},logoutNotSupported:{code:Te,desc:Pe[Te]},keyIdMissing:{code:Ae,desc:Pe[Ae]},noNetworkConnectivity:{code:ke,desc:Pe[ke]},userCanceledError:{code:Se,desc:Pe[Se]},missingTenantIdError:{code:be,desc:Pe[be]},nestedAppAuthBridgeDisabled:{code:Re,desc:Pe[Re]}};class Oe extends x{constructor(e,t){super(e,t?`${Pe[e]}: ${t}`:Pe[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,Oe.prototype)}}function Ne(e,t){return new Oe(e,t)}const qe={createNewGuid:()=>{throw Ne(Ee)},base64Decode:()=>{throw Ne(Ee)},base64Encode:()=>{throw Ne(Ee)},base64UrlEncode:()=>{throw Ne(Ee)},encodeKid:()=>{throw Ne(Ee)},async getPublicKeyThumbprint(){throw Ne(Ee)},async removeTokenBindingKey(){throw Ne(Ee)},async clearKeystore(){throw Ne(Ee)},async signJwt(){throw Ne(Ee)},async hashString(){throw Ne(Ee)}};var Le;t.LogLevel=void 0,(Le=t.LogLevel||(t.LogLevel={}))[Le.Error=0]="Error",Le[Le.Warning=1]="Warning",Le[Le.Info=2]="Info",Le[Le.Verbose=3]="Verbose",Le[Le.Trace=4]="Trace";class Ue{constructor(e,n,o){this.level=t.LogLevel.Info;const i=e||Ue.createDefaultLoggerOptions();this.localCallback=i.loggerCallback||(()=>{}),this.piiLoggingEnabled=i.piiLoggingEnabled||!1,this.level="number"==typeof i.logLevel?i.logLevel:t.LogLevel.Info,this.correlationId=i.correlationId||r.EMPTY_STRING,this.packageName=n||r.EMPTY_STRING,this.packageVersion=o||r.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:t.LogLevel.Info}}clone(e,t,r){return new Ue({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,r){if(r.logLevel>this.level||!this.piiLoggingEnabled&&r.containsPii)return;const n=`[${(new Date).toUTCString()}] : [${r.correlationId||this.correlationId||""}] : ${this.packageName}@${this.packageVersion} : ${t.LogLevel[r.logLevel]} - ${e}`;this.executeCallback(r.logLevel,n,r.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,n){this.logMessage(e,{logLevel:t.LogLevel.Error,containsPii:!1,correlationId:n||r.EMPTY_STRING})}errorPii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Error,containsPii:!0,correlationId:n||r.EMPTY_STRING})}warning(e,n){this.logMessage(e,{logLevel:t.LogLevel.Warning,containsPii:!1,correlationId:n||r.EMPTY_STRING})}warningPii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Warning,containsPii:!0,correlationId:n||r.EMPTY_STRING})}info(e,n){this.logMessage(e,{logLevel:t.LogLevel.Info,containsPii:!1,correlationId:n||r.EMPTY_STRING})}infoPii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Info,containsPii:!0,correlationId:n||r.EMPTY_STRING})}verbose(e,n){this.logMessage(e,{logLevel:t.LogLevel.Verbose,containsPii:!1,correlationId:n||r.EMPTY_STRING})}verbosePii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Verbose,containsPii:!0,correlationId:n||r.EMPTY_STRING})}trace(e,n){this.logMessage(e,{logLevel:t.LogLevel.Trace,containsPii:!1,correlationId:n||r.EMPTY_STRING})}tracePii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Trace,containsPii:!0,correlationId:n||r.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}const xe="@azure/msal-common",He="15.8.0",De={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"};function Be(e,t){const r=function(e){if(!e)throw Ne(z);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw Ne(F);return t[2]}(e);try{const e=t(r);return JSON.parse(e)}catch(e){throw Ne(F)}}function Fe(e,t){if(0===t||Date.now()-3e5>e+t)throw Ne(X)}function ze(){return Math.round((new Date).getTime()/1e3)}function Ke(e){return e.getTime()/1e3}function Ge(e){return e?new Date(1e3*Number(e)):new Date}function $e(e,t){const r=Number(e)||0;return ze()+t>r}function Qe(e){return Number(e)>ze()}function je(e){return[Xe(e),Ze(e),et(e),tt(e),rt(e)].join(v).toLowerCase()}function We(e,t,r,n,o){return{credentialType:w.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o}}function Ve(e,t,r,n,o,i,s,a,c,l,h,d,u,g,p){const m={homeAccountId:e,credentialType:w.ACCESS_TOKEN,secret:r,cachedAt:ze().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:h||_.BEARER};if(d&&(m.userAssertionHash=d),l&&(m.refreshOn=l.toString()),g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==_.BEARER.toLowerCase())switch(m.credentialType=w.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case _.POP:const e=Be(r,c);if(!e?.cnf?.kid)throw Ne(ve);m.keyId=e.cnf.kid;break;case _.SSH:m.keyId=u}return m}function Je(e,t,r,n,o,i,s){const a={credentialType:w.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return i&&(a.userAssertionHash=i),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function Ye(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function Xe(e){return[e.homeAccountId,e.environment].join(v).toLowerCase()}function Ze(e){const t=e.credentialType===w.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(v).toLowerCase()}function et(e){return(e.target||"").toLowerCase()}function tt(e){return(e.requestedClaimsHash||"").toLowerCase()}function rt(e){return e.tokenType&&e.tokenType.toLowerCase()!==_.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function nt(){return ze()+86400}function ot(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function it(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function st(e){return e.expiresAt<=ze()}const at="redirect_uri_empty",ct="claims_request_parsing_error",lt="authority_uri_insecure",ht="url_parse_error",dt="empty_url_error",ut="empty_input_scopes_error",gt="invalid_prompt_value",pt="invalid_claims",mt="token_request_empty",ft="logout_request_empty",yt="invalid_code_challenge_method",Ct="pkce_params_missing",vt="invalid_cloud_discovery_metadata",wt="invalid_authority_metadata",It="untrusted_authority",Tt="missing_ssh_jwk",At="missing_ssh_kid",kt="missing_nonce_authentication_header",St="invalid_authentication_header",bt="cannot_set_OIDCOptions",Et="cannot_allow_platform_broker",Rt="authority_mismatch";var _t=Object.freeze({__proto__:null,authorityMismatch:Rt,authorityUriInsecure:lt,cannotAllowPlatformBroker:Et,cannotSetOIDCOptions:bt,claimsRequestParsingError:ct,emptyInputScopesError:ut,invalidAuthenticationHeader:St,invalidAuthorityMetadata:wt,invalidClaims:pt,invalidCloudDiscoveryMetadata:vt,invalidCodeChallengeMethod:yt,invalidPromptValue:gt,logoutRequestEmpty:ft,missingNonceAuthenticationHeader:kt,missingSshJwk:Tt,missingSshKid:At,pkceParamsMissing:Ct,redirectUriEmpty:at,tokenRequestEmpty:mt,untrustedAuthority:It,urlEmptyError:dt,urlParseError:ht});const Pt={[at]:"A redirect URI is required for all calls, and none has been set.",[ct]:"Could not parse the given claims request object.",[lt]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[ht]:"URL could not be parsed into appropriate segments.",[dt]:"URL was empty or null.",[ut]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[gt]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[pt]:"Given claims parameter must be a stringified JSON object.",[mt]:"Token request was empty and not found in cache.",[ft]:"The logout request was null or undefined.",[yt]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[Ct]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[vt]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[wt]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[It]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Tt]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[At]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[kt]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[St]:"Invalid authentication header provided",[bt]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Et]:"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.",[Rt]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."},Mt={redirectUriNotSet:{code:at,desc:Pt[at]},claimsRequestParsingError:{code:ct,desc:Pt[ct]},authorityUriInsecure:{code:lt,desc:Pt[lt]},urlParseError:{code:ht,desc:Pt[ht]},urlEmptyError:{code:dt,desc:Pt[dt]},emptyScopesError:{code:ut,desc:Pt[ut]},invalidPrompt:{code:gt,desc:Pt[gt]},invalidClaimsRequest:{code:pt,desc:Pt[pt]},tokenRequestEmptyError:{code:mt,desc:Pt[mt]},logoutRequestEmptyError:{code:ft,desc:Pt[ft]},invalidCodeChallengeMethod:{code:yt,desc:Pt[yt]},invalidCodeChallengeParams:{code:Ct,desc:Pt[Ct]},invalidCloudDiscoveryMetadata:{code:vt,desc:Pt[vt]},invalidAuthorityMetadata:{code:wt,desc:Pt[wt]},untrustedAuthority:{code:It,desc:Pt[It]},missingSshJwk:{code:Tt,desc:Pt[Tt]},missingSshKid:{code:At,desc:Pt[At]},missingNonceAuthenticationHeader:{code:kt,desc:Pt[kt]},invalidAuthenticationHeader:{code:St,desc:Pt[St]},cannotSetOIDCOptions:{code:bt,desc:Pt[bt]},cannotAllowPlatformBroker:{code:Et,desc:Pt[Et]},authorityMismatch:{code:Rt,desc:Pt[Rt]}};class Ot extends x{constructor(e){super(e,Pt[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Ot.prototype)}}function Nt(e){return new Ot(e)}class qt{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach(e=>{if(e.trim()){const[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}}),t}static trimArrayEntries(e){return e.map(e=>e.trim())}static removeEmptyStringsFromArray(e){return e.filter(e=>!!e)}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class Lt{constructor(e){const t=e?qt.trimArrayEntries([...e]):[],r=t?qt.removeEmptyStringsFromArray(t):[];if(!r||!r.length)throw Nt(ut);this.scopes=new Set,r.forEach(e=>this.scopes.add(e))}static fromString(e){const t=(e||r.EMPTY_STRING).split(" ");return new Lt(t)}static createSearchScopes(e){const t=new Lt(e);return t.containsOnlyOIDCScopes()?t.removeScope(r.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}containsScope(e){const t=this.printScopesLowerCase().split(" "),r=new Lt(t);return!!e&&r.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every(e=>this.containsScope(e))}containsOnlyOIDCScopes(){let e=0;return o.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(e=>this.appendScope(e))}catch(e){throw Ne(oe)}}removeScope(e){if(!e)throw Ne(ne);this.scopes.delete(e.trim())}removeOIDCScopes(){o.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw Ne(ie);const t=new Set;return e.scopes.forEach(e=>t.add(e.toLowerCase())),this.scopes.forEach(e=>t.add(e.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw Ne(ie);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):r.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function Ut(e,t){if(!e)throw Ne(B);try{const r=t(e);return JSON.parse(r)}catch(e){throw Ne(D)}}function xt(e){if(!e)throw Ne(D);const t=e.split(".",2);return{uid:t[0],utid:t.length<2?r.EMPTY_STRING:t[1]}}function Ht(e,t){return!!e&&!!t&&e===t.split(".")[1]}function Dt(e,t,r,n){if(n){const{oid:t,sub:r,tid:o,name:i,tfp:s,acr:a}=n,c=o||s||a||"";return{tenantId:c,localAccountId:t||r||"",name:i,isHomeTenant:Ht(c,e)}}return{tenantId:r,localAccountId:t,isHomeTenant:Ht(r,e)}}function Bt(e,t,r,n){let o=e;if(t){const{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){const{isHomeTenant:t,...i}=Dt(e.homeAccountId,e.localAccountId,e.tenantId,r);return o={...o,...i,idTokenClaims:r,idToken:n},o}return o}function Ft(e){return e&&(e.tid||e.tfp||e.acr)||null}const zt={AAD:"AAD",OIDC:"OIDC",EAR:"EAR"};class Kt{generateAccountId(){return[this.homeAccountId,this.environment].join(v).toLowerCase()}generateAccountKey(){return Kt.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(v).toLowerCase()}static createAccount(e,t,r){const n=new Kt;let o;1===t.authorityType?n.authorityType="ADFS":t.protocolMode===zt.OIDC?n.authorityType=C:n.authorityType="MSSTS",e.clientInfo&&r&&(o=Ut(e.clientInfo,r)),n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw Ne(de);n.environment=i,n.realm=o?.utid||Ft(e.idTokenClaims)||"",n.localAccountId=o?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const s=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,a=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(n.username=s||a||"",n.name=e.idTokenClaims?.name||"",n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,e.tenantProfiles)n.tenantProfiles=e.tenantProfiles;else{const t=Dt(e.homeAccountId,n.localAccountId,n.realm,e.idTokenClaims);n.tenantProfiles=[t]}return n}static createFromAccountInfo(e,t,r){const n=new Kt;return n.authorityType=e.authorityType||C,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,o){if(1!==t&&2!==t){if(e)try{const t=Ut(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return o?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){const r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}function Gt(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function $t(e){if(!e||e.indexOf("=")<0)return null;try{const t=Gt(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.ear_jwe||r.error||r.error_description||r.state)return r}catch(e){throw Ne(Q)}return null}function Qt(e,t=!0,r){const n=new Array;return e.forEach((e,o)=>{!t&&r&&o in r?n.push(`${o}=${e}`):n.push(`${o}=${encodeURIComponent(e)}`)}),n.join("&")}class jt{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Nt(dt);e.includes("#")||(this._urlString=jt.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return qt.endsWith(t,"?")?t=t.slice(0,-1):qt.endsWith(t,"?/")&&(t=t.slice(0,-2)),qt.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw Nt(ht)}if(!e.HostNameAndPort||!e.PathSegments)throw Nt(ht);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Nt(lt)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return jt.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),r=t.PathSegments;return!e||0===r.length||r[0]!==d&&r[0]!==u||(r[0]=e),jt.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Nt(ht);const r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let n=r.AbsolutePath.split("/");return n=n.filter(e=>e&&e.length>0),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw Nt(ht);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===r.FORWARD_SLASH){const r=new jt(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new jt(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!$t(e)}}const Wt={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},Vt={metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},Jt=new Set;function Yt(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){const o=Xt(t,e);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function Xt(e,t){for(let r=0;r<e.length;r++){const n=e[r];if(n.aliases.includes(t))return n}return null}Vt.metadata.forEach(e=>{e.aliases.forEach(e=>{Jt.add(e)})});const Zt="cache_quota_exceeded",er="cache_error_unknown",tr={[Zt]:"Exceeded cache storage capacity.",[er]:"Unexpected error occurred when using cache storage."};class rr extends x{constructor(e,t){const r=t||(tr[e]?tr[e]:tr[er]);super(`${e}: ${r}`),Object.setPrototypeOf(this,rr.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}function nr(e){return e instanceof Error?"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?new rr(Zt):new rr(e.name,e.message):new rr(er)}class or{constructor(e,t,r,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(xe,He),this.staticAuthorityOptions=o,this.performanceClient=n}getAllAccounts(e,t){return this.buildTenantProfiles(this.getAccountsFilteredBy(e,t),t,e)}getAccountInfoFilteredBy(e,t){const r=this.getAllAccounts(e,t);return r.length>1?r.sort(e=>e.idTokenClaims?-1:1)[0]:1===r.length?r[0]:null}getBaseAccountInfo(e,t){const r=this.getAccountsFilteredBy(e,t);return r.length>0?r[0].getAccountInfo():null}buildTenantProfiles(e,t,r){return e.flatMap(e=>this.getTenantProfilesFromAccountEntity(e,t,r?.tenantId,r))}getTenantedAccountInfoByFilter(e,t,r,n,o){let i,s=null;if(o&&!this.tenantProfileMatchesFilter(r,o))return null;const a=this.getIdToken(e,n,t,r.tenantId);return a&&(i=Be(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,o))?null:(s=Bt(e,r,i,a?.secret),s)}getTenantProfilesFromAccountEntity(e,t,r,n){const o=e.getAccountInfo();let i=o.tenantProfiles||new Map;const s=this.getTokenKeys();if(r){const e=i.get(r);if(!e)return[];i=new Map([[r,e]])}const a=[];return i.forEach(e=>{const r=this.getTenantedAccountInfoByFilter(o,s,e,t,n);r&&a.push(r)}),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||void 0!==t.isHomeTenant&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,r){if(!e)throw Ne(he);try{e.account&&await this.setAccount(e.account,t),e.idToken&&!1!==r?.idToken&&await this.setIdTokenCredential(e.idToken,t),e.accessToken&&!1!==r?.accessToken&&await this.saveAccessToken(e.accessToken,t),e.refreshToken&&!1!==r?.refreshToken&&await this.setRefreshTokenCredential(e.refreshToken,t),e.appMetadata&&this.setAppMetadata(e.appMetadata,t)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof x?e:nr(e)}}async saveAccessToken(e,t){const r={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=Lt.fromString(e.target);n.accessToken.forEach(e=>{if(!this.accessTokenKeyMatchesFilter(e,r,!1))return;const n=this.getAccessTokenCredential(e,t);n&&this.credentialMatchesFilter(n,r)&&Lt.fromString(n.target).intersectingScopeSets(o)&&this.removeAccessToken(e,t)}),await this.setAccessTokenCredential(e,t)}getAccountsFilteredBy(e,t){const r=this.getAccountKeys(),n=[];return r.forEach(r=>{if(!this.isAccountKey(r,e.homeAccountId))return;const o=this.getAccount(r,t);if(!o)return;if(e.homeAccountId&&!this.matchHomeAccountId(o,e.homeAccountId))return;if(e.username&&!this.matchUsername(o.username,e.username))return;if(e.environment&&!this.matchEnvironment(o,e.environment))return;if(e.realm&&!this.matchRealm(o,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(o,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(o,e.authorityType))return;const i={localAccountId:e?.localAccountId,name:e?.name},s=o.tenantProfiles?.filter(e=>this.tenantProfileMatchesFilter(e,i));s&&0===s.length||n.push(o)}),n}isAccountKey(e,t,r){return!(e.split(v).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||r&&!e.toLowerCase().includes(r.toLowerCase()))}isCredentialKey(e){if(e.split(v).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(w.ID_TOKEN.toLowerCase())&&-1===t.indexOf(w.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(w.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(w.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(w.REFRESH_TOKEN.toLowerCase())>-1){const e=`${w.REFRESH_TOKEN}${v}${this.clientId}${v}`,r=`${w.REFRESH_TOKEN}${v}${T}${v}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===w.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===_.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),r={};return t.forEach(t=>{if(!this.isAppMetadata(t))return;const n=this.getAppMetadata(t);n&&(e.environment&&!this.matchEnvironment(n,e.environment)||e.clientId&&!this.matchClientId(n,e.clientId)||(r[t]=n))}),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let r=null;return t.forEach(t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)}),r}removeAllAccounts(e){this.getAccountKeys().forEach(t=>{this.removeAccount(t,e)})}removeAccount(e,t){const r=this.getAccount(e,t);r&&(this.removeAccountContext(r,t),this.removeItem(e,t))}removeAccountContext(e,t){const r=this.getTokenKeys(),n=e.generateAccountId();r.idToken.forEach(e=>{0===e.indexOf(n)&&this.removeIdToken(e,t)}),r.accessToken.forEach(e=>{0===e.indexOf(n)&&this.removeAccessToken(e,t)}),r.refreshToken.forEach(e=>{0===e.indexOf(n)&&this.removeRefreshToken(e,t)})}removeAccessToken(e,t){const r=this.getAccessTokenCredential(e,t);if(this.removeItem(e,t),this.performanceClient.incrementFields({accessTokensRemoved:1},t),!r||r.credentialType.toLowerCase()!==w.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()||r.tokenType!==_.POP)return;const n=r.keyId;n&&this.cryptoImpl.removeTokenBindingKey(n).catch(()=>{this.commonLogger.error(`Failed to remove token binding key ${n}`,t),this.performanceClient?.incrementFields({removeTokenBindingKeyFailure:1},t)})}removeAppMetadata(e){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t,e)}),!0}readAccountFromCache(e,t){const r=Kt.generateAccountCacheKey(e);return this.getAccount(r,t)}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:w.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(i,t,r),a=s.size;if(a<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(a>1){let r=s;if(!n){const t=new Map;s.forEach((r,n)=>{r.realm===e.tenantId&&t.set(n,r)});const n=t.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),t.values().next().value;r=t}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),r.forEach((e,r)=>{this.removeIdToken(r,t)}),o&&t&&o.addFields({multiMatchedID:s.size},t),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t,r){const n=r&&r.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const n=this.getIdTokenCredential(r,t);n&&this.credentialMatchesFilter(n,e)&&o.set(r,n)}),o}idTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return!(t.clientId&&-1===r.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e,t){this.removeItem(e,t)}removeRefreshToken(e,t){this.removeItem(e,t)}getAccessToken(e,t,r,n){const o=t.correlationId;this.commonLogger.trace("CacheManager - getAccessToken called",o);const i=Lt.createSearchScopes(t.scopes),s=t.authenticationScheme||_.BEARER,a=s&&s.toLowerCase()!==_.BEARER.toLowerCase()?w.ACCESS_TOKEN_WITH_AUTH_SCHEME:w.ACCESS_TOKEN,c={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:a,clientId:this.clientId,realm:n||e.tenantId,target:i,tokenType:s,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},l=r&&r.accessToken||this.getTokenKeys().accessToken,h=[];l.forEach(e=>{if(this.accessTokenKeyMatchesFilter(e,c,!0)){const t=this.getAccessTokenCredential(e,o);t&&this.credentialMatchesFilter(t,c)&&h.push(t)}});const d=h.length;return d<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found",o),null):d>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them",o),h.forEach(e=>{this.removeAccessToken(je(e),o)}),this.performanceClient.addFields({multiMatchedAT:h.length},o),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token",o),h[0])}accessTokenKeyMatchesFilter(e,t,r){const n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===n.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e,t){const r=this.getTokenKeys(),n=[];return r.accessToken.forEach(r=>{if(!this.accessTokenKeyMatchesFilter(r,e,!0))return;const o=this.getAccessTokenCredential(r,t);o&&this.credentialMatchesFilter(o,e)&&n.push(o)}),n}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?T:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:w.REFRESH_TOKEN,clientId:this.clientId,familyId:i},a=n&&n.refreshToken||this.getTokenKeys().refreshToken,c=[];a.forEach(e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e,r);t&&this.credentialMatchesFilter(t,s)&&c.push(t)}});const l=c.length;return l<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(l>1&&o&&r&&o.addFields({multiMatchedRT:l},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),c[0])}refreshTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return!(t.familyId&&-1===r.indexOf(t.familyId.toLowerCase())||!t.familyId&&t.clientId&&-1===r.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map(e=>r[e]),o=n.length;if(o<1)return null;if(o>1)throw Ne(te);return n[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==T)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=function(e,t){let r;const n=e.canonicalAuthority;if(n){const o=new jt(n).getUrlComponents().HostNameAndPort;r=Yt(o,e.cloudDiscoveryMetadata?.metadata,k,t)||Yt(o,Vt.metadata,E,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){return!(e.credentialType!==w.ACCESS_TOKEN&&e.credentialType!==w.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)&&Lt.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(I)}isAuthorityMetadata(e){return-1!==e.indexOf(A)}generateAuthorityMetadataCacheKey(e){return`${A}-${this.clientId}-${e}`}static toObject(e,t){for(const r in t)e[r]=t[r];return e}}class ir extends or{async setAccount(){throw Ne(Ee)}getAccount(){throw Ne(Ee)}async setIdTokenCredential(){throw Ne(Ee)}getIdTokenCredential(){throw Ne(Ee)}async setAccessTokenCredential(){throw Ne(Ee)}getAccessTokenCredential(){throw Ne(Ee)}async setRefreshTokenCredential(){throw Ne(Ee)}getRefreshTokenCredential(){throw Ne(Ee)}setAppMetadata(){throw Ne(Ee)}getAppMetadata(){throw Ne(Ee)}setServerTelemetry(){throw Ne(Ee)}getServerTelemetry(){throw Ne(Ee)}setAuthorityMetadata(){throw Ne(Ee)}getAuthorityMetadata(){throw Ne(Ee)}getAuthorityMetadataKeys(){throw Ne(Ee)}setThrottlingCache(){throw Ne(Ee)}getThrottlingCache(){throw Ne(Ee)}removeItem(){throw Ne(Ee)}getKeys(){throw Ne(Ee)}getAccountKeys(){throw Ne(Ee)}getTokenKeys(){throw Ne(Ee)}}const sr={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",NetworkClientSendPostRequestAsync:"networkClientSendPostRequestAsync",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",InitializeCache:"initializeCache",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",GetAuthCodeUrl:"getAuthCodeUrl",GetStandardParams:"getStandardParams",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",HandleResponseEar:"handleResponseEar",HandleResponsePlatformBroker:"handleResponsePlatformBroker",HandleResponseCode:"handleResponseCode",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",ImportExistingCache:"importExistingCache",SetUserData:"setUserData",LocalStorageUpdated:"localStorageUpdated",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues",GenerateHKDF:"generateHKDF",GenerateBaseKey:"generateBaseKey",Base64Decode:"base64Decode",UrlEncodeArr:"urlEncodeArr",Encrypt:"encrypt",Decrypt:"decrypt",GenerateEarKey:"generateEarKey",DecryptEarResponse:"decryptEarResponse"},ar=new Map([[sr.AcquireTokenByCode,"ATByCode"],[sr.AcquireTokenByRefreshToken,"ATByRT"],[sr.AcquireTokenSilent,"ATS"],[sr.AcquireTokenSilentAsync,"ATSAsync"],[sr.AcquireTokenPopup,"ATPopup"],[sr.AcquireTokenRedirect,"ATRedirect"],[sr.CryptoOptsGetPublicKeyThumbprint,"CryptoGetPKThumb"],[sr.CryptoOptsSignJwt,"CryptoSignJwt"],[sr.SilentCacheClientAcquireToken,"SltCacheClientAT"],[sr.SilentIframeClientAcquireToken,"SltIframeClientAT"],[sr.SilentRefreshClientAcquireToken,"SltRClientAT"],[sr.SsoSilent,"SsoSlt"],[sr.StandardInteractionClientGetDiscoveredAuthority,"StdIntClientGetDiscAuth"],[sr.FetchAccountIdWithNativeBroker,"FetchAccIdWithNtvBroker"],[sr.NativeInteractionClientAcquireToken,"NtvIntClientAT"],[sr.BaseClientCreateTokenRequestHeaders,"BaseClientCreateTReqHead"],[sr.NetworkClientSendPostRequestAsync,"NetClientSendPost"],[sr.RefreshTokenClientExecutePostToTokenEndpoint,"RTClientExecPost"],[sr.AuthorizationCodeClientExecutePostToTokenEndpoint,"AuthCodeClientExecPost"],[sr.BrokerHandhshake,"BrokerHandshake"],[sr.AcquireTokenByRefreshTokenInBroker,"ATByRTInBroker"],[sr.AcquireTokenByBroker,"ATByBroker"],[sr.RefreshTokenClientExecuteTokenRequest,"RTClientExecTReq"],[sr.RefreshTokenClientAcquireToken,"RTClientAT"],[sr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,"RTClientATWithCachedRT"],[sr.RefreshTokenClientAcquireTokenByRefreshToken,"RTClientATByRT"],[sr.RefreshTokenClientCreateTokenRequestBody,"RTClientCreateTReqBody"],[sr.AcquireTokenFromCache,"ATFromCache"],[sr.SilentFlowClientAcquireCachedToken,"SltFlowClientATCached"],[sr.SilentFlowClientGenerateResultFromCacheRecord,"SltFlowClientGenResFromCache"],[sr.AcquireTokenBySilentIframe,"ATBySltIframe"],[sr.InitializeBaseRequest,"InitBaseReq"],[sr.InitializeSilentRequest,"InitSltReq"],[sr.InitializeClientApplication,"InitClientApplication"],[sr.InitializeCache,"InitCache"],[sr.ImportExistingCache,"importCache"],[sr.SetUserData,"setUserData"],[sr.LocalStorageUpdated,"localStorageUpdated"],[sr.SilentIframeClientTokenHelper,"SIClientTHelper"],[sr.SilentHandlerInitiateAuthRequest,"SHandlerInitAuthReq"],[sr.SilentHandlerMonitorIframeForHash,"SltHandlerMonitorIframeForHash"],[sr.SilentHandlerLoadFrame,"SHandlerLoadFrame"],[sr.SilentHandlerLoadFrameSync,"SHandlerLoadFrameSync"],[sr.StandardInteractionClientCreateAuthCodeClient,"StdIntClientCreateAuthCodeClient"],[sr.StandardInteractionClientGetClientConfiguration,"StdIntClientGetClientConf"],[sr.StandardInteractionClientInitializeAuthorizationRequest,"StdIntClientInitAuthReq"],[sr.GetAuthCodeUrl,"GetAuthCodeUrl"],[sr.HandleCodeResponseFromServer,"HandleCodeResFromServer"],[sr.HandleCodeResponse,"HandleCodeResp"],[sr.HandleResponseEar,"HandleRespEar"],[sr.HandleResponseCode,"HandleRespCode"],[sr.HandleResponsePlatformBroker,"HandleRespPlatBroker"],[sr.UpdateTokenEndpointAuthority,"UpdTEndpointAuth"],[sr.AuthClientAcquireToken,"AuthClientAT"],[sr.AuthClientExecuteTokenRequest,"AuthClientExecTReq"],[sr.AuthClientCreateTokenRequestBody,"AuthClientCreateTReqBody"],[sr.PopTokenGenerateCnf,"PopTGenCnf"],[sr.PopTokenGenerateKid,"PopTGenKid"],[sr.HandleServerTokenResponse,"HandleServerTRes"],[sr.DeserializeResponse,"DeserializeRes"],[sr.AuthorityFactoryCreateDiscoveredInstance,"AuthFactCreateDiscInst"],[sr.AuthorityResolveEndpointsAsync,"AuthResolveEndpointsAsync"],[sr.AuthorityResolveEndpointsFromLocalSources,"AuthResolveEndpointsFromLocal"],[sr.AuthorityGetCloudDiscoveryMetadataFromNetwork,"AuthGetCDMetaFromNet"],[sr.AuthorityUpdateCloudDiscoveryMetadata,"AuthUpdCDMeta"],[sr.AuthorityGetEndpointMetadataFromNetwork,"AuthUpdCDMetaFromNet"],[sr.AuthorityUpdateEndpointMetadata,"AuthUpdEndpointMeta"],[sr.AuthorityUpdateMetadataWithRegionalInformation,"AuthUpdMetaWithRegInfo"],[sr.RegionDiscoveryDetectRegion,"RegDiscDetectReg"],[sr.RegionDiscoveryGetRegionFromIMDS,"RegDiscGetRegFromIMDS"],[sr.RegionDiscoveryGetCurrentVersion,"RegDiscGetCurrentVer"],[sr.AcquireTokenByCodeAsync,"ATByCodeAsync"],[sr.GetEndpointMetadataFromNetwork,"GetEndpointMetaFromNet"],[sr.GetCloudDiscoveryMetadataFromNetworkMeasurement,"GetCDMetaFromNet"],[sr.HandleRedirectPromiseMeasurement,"HandleRedirectPromise"],[sr.HandleNativeRedirectPromiseMeasurement,"HandleNtvRedirectPromise"],[sr.UpdateCloudDiscoveryMetadataMeasurement,"UpdateCDMeta"],[sr.UsernamePasswordClientAcquireToken,"UserPassClientAT"],[sr.NativeMessageHandlerHandshake,"NtvMsgHandlerHandshake"],[sr.NativeGenerateAuthResult,"NtvGenAuthRes"],[sr.RemoveHiddenIframe,"RemoveHiddenIframe"],[sr.ClearTokensAndKeysWithClaims,"ClearTAndKeysWithClaims"],[sr.CacheManagerGetRefreshToken,"CacheManagerGetRT"],[sr.GeneratePkceCodes,"GenPkceCodes"],[sr.GenerateCodeVerifier,"GenCodeVerifier"],[sr.GenerateCodeChallengeFromVerifier,"GenCodeChallengeFromVerifier"],[sr.Sha256Digest,"Sha256Digest"],[sr.GetRandomValues,"GetRandomValues"],[sr.GenerateHKDF,"genHKDF"],[sr.GenerateBaseKey,"genBaseKey"],[sr.Base64Decode,"b64Decode"],[sr.UrlEncodeArr,"urlEncArr"],[sr.Encrypt,"encrypt"],[sr.Decrypt,"decrypt"],[sr.GenerateEarKey,"genEarKey"],[sr.DecryptEarResponse,"decryptEarResp"]]),cr=new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT","unencryptedCacheCount","encryptedCacheExpiredCount"]);class lr{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class hr{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:1,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new lr}}startPerformanceMeasurement(){return new lr}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}const dr={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},ur={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:t.LogLevel.Info,correlationId:r.EMPTY_STRING},gr={claimsBasedCachingEnabled:!1},pr={async sendGetRequestAsync(){throw Ne(Ee)},async sendPostRequestAsync(){throw Ne(Ee)}},mr={sku:r.SKU,version:He,cpu:r.EMPTY_STRING,os:r.EMPTY_STRING},fr={clientSecret:r.EMPTY_STRING,clientAssertion:void 0},yr={azureCloudInstance:De.None,tenant:`${r.DEFAULT_COMMON_TENANT}`},Cr={application:{appName:"",appVersion:""}};function vr(e){return e.authOptions.authority.options.protocolMode===zt.OIDC}const wr="home_account_id",Ir="UPN",Tr="client_id",Ar="redirect_uri",kr="token_type",Sr="req_cnf",br="return_spa_code",Er="x-client-xtra-sku",Rr="brk_client_id",_r="brk_redirect_uri",Pr="instance_aware";function Mr(e,t,r){if(!t)return;const n=e.get(Tr);n&&e.has(Rr)&&r?.addFields({embeddedClientId:n,embeddedRedirectUri:e.get(Ar)},t)}function Or(e,t){e.set("response_type",t)}function Nr(e,t,r=!0,o=n){!r||o.includes("openid")||t.includes("openid")||o.push("openid");const i=r?[...t||[],...o]:t||[],s=new Lt(i);e.set("scope",s.printScopes())}function qr(e,t){e.set(Tr,t)}function Lr(e,t){e.set(Ar,t)}function Ur(e,t){e.set("login_hint",t)}function xr(e,t){e.set(a,`UPN:${t}`)}function Hr(e,t){e.set(a,`Oid:${t.uid}@${t.utid}`)}function Dr(e,t){e.set("sid",t)}function Br(e,t,r){const n=Xr(t,r);try{JSON.parse(n)}catch(e){throw Nt(pt)}e.set("claims",n)}function Fr(e,t){e.set("client-request-id",t)}function zr(e,t){e.set("x-client-SKU",t.sku),e.set("x-client-VER",t.version),t.os&&e.set("x-client-OS",t.os),t.cpu&&e.set("x-client-CPU",t.cpu)}function Kr(e,t){t?.appName&&e.set("x-app-name",t.appName),t?.appVersion&&e.set("x-app-ver",t.appVersion)}function Gr(e,t){t&&e.set("state",t)}function $r(e,t){e.set("client_secret",t)}function Qr(e,t){t&&e.set("client_assertion",t)}function jr(e,t){t&&e.set("client_assertion_type",t)}function Wr(e,t){e.set("grant_type",t)}function Vr(e){e.set("client_info","1")}function Jr(e){e.has(Pr)||e.set(Pr,"true")}function Yr(e,t){Object.entries(t).forEach(([t,r])=>{!e.has(t)&&r&&e.set(t,r)})}function Xr(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw Nt(pt)}else r={};return t&&t.length>0&&(r.hasOwnProperty(p)||(r[p]={}),r[p].xms_cc={values:t}),JSON.stringify(r)}function Zr(e,t){t&&(e.set(kr,_.POP),e.set(Sr,t))}function en(e,t){t&&(e.set(kr,_.SSH),e.set(Sr,t))}function tn(e,t){e.set("x-client-current-telemetry",t.generateCurrentRequestHeaderValue()),e.set("x-client-last-telemetry",t.generateLastRequestHeaderValue())}function rn(e){e.set("x-ms-lib-capability","retry-after, h429")}function nn(e,t,r){e.has(Rr)||e.set(Rr,t),e.has(_r)||e.set(_r,r)}const on=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}try{const n=e(...i);return s?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}},sn=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}return n?.setPreQueueTime(t,o),e(...i).then(e=>(r.trace(`Returning result from ${t}`),s?.end({success:!0}),e)).catch(e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e})};class an{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(sr.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source="3";else{const e=an.IMDS_OPTIONS;try{const o=await sn(this.getRegionFromIMDS.bind(this),sr.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(r.IMDS_VERSION,e);if(200===o.status&&(n=o.body,t.region_source="4"),400===o.status){const r=await sn(this.getCurrentVersion.bind(this),sr.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!r)return t.region_source="1",null;const o=await sn(this.getRegionFromIMDS.bind(this),sr.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(r,e);200===o.status&&(n=o.body,t.region_source="4")}}catch(e){return t.region_source="1",null}}return n||(t.region_source="1"),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(sr.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${r.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,r.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(sr.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${r.IMDS_ENDPOINT}?format=json`,e);return 400===t.status&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(e){return null}}}an.IMDS_OPTIONS={headers:{Metadata:"true"}};class cn{constructor(e,t,r,n,o,i,s,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=s,this.correlationId=i,this.managedIdentity=a||!1,this.regionDiscovery=new an(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(r.CIAM_AUTH_URL))return 3;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case r.ADFS:return 1;case r.DSTS:return 2}return 0}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new jt(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw Ne(K)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw Ne(K)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw Ne(K)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw Ne(Te);return this.replacePath(this.metadata.end_session_endpoint)}throw Ne(K)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw Ne(K)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw Ne(K)}canReplaceTenant(e){return 1===e.PathSegments.length&&!cn.reservedTenantDomains.has(e.PathSegments[0])&&0===this.getAuthorityType(e)&&this.protocolMode!==zt.OIDC}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new jt(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){const e=new jt(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||1===this.authorityType||this.protocolMode===zt.OIDC&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(sr.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await sn(this.updateCloudDiscoveryMetadata.bind(this),sr.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const r=await sn(this.updateEndpointMetadata.bind(this),sr.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:nt(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==S&&r?.source!==S&&(e.expiresAt=nt(),e.canonical_authority=this.canonicalAuthority);const n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(sr.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===E&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(ot(e,await sn(this.updateMetadataWithRegionalInformation.bind(this),sr.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let r=await sn(this.getEndpointMetadataFromNetwork.bind(this),sr.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await sn(this.updateMetadataWithRegionalInformation.bind(this),sr.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),ot(e,r,!0),b;throw Ne($,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),ot(e,t,!1),{source:k};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return ot(e,t,!1),{source:E,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const r=st(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:S}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new jt(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Nt(wt)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(sr.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const r=await this.networkInterface.sendGetRequestAsync(t,e),n=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(r.body);return n?r.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Wt?Wt[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(sr.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==r.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome="2",this.regionDiscoveryMetadata.region_used=t,cn.replaceWithRegionalInformation(e,t);const n=await sn(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),sr.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome="4",this.regionDiscoveryMetadata.region_used=n,cn.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome="5"}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(sr.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const r=await sn(this.getCloudDiscoveryMetadataFromNetwork.bind(this),sr.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return it(e,r,!0),b;throw Nt(It)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||r.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||r.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||r.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),it(e,t,!1),k;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=(n=this.hostnameAndPort,Xt(Vt.metadata,n));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),it(e,t,!1),E;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var n;const o=st(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!o?(this.logger.verbose("Found cloud discovery metadata in the cache."),S):(o&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(3===this.authorityType)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),cn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=Xt(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Nt(vt)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),cn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(sr.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${r.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(e,t);let i,s;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(o.body))i=o.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(o.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),i=o.body,i.error===r.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=Xt(s,this.hostnameAndPort)}catch(e){if(e instanceof x)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=cn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(e=>e&&jt.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==De.None){const e=t.tenant?t.tenant:r.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${e}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return r.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw Ne(K)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Jt.has(e)}static isPublicCloudAuthority(e){return r.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new jt(e);o.validateAsUri();const i=o.getUrlComponents();let s=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(s=`${t}.${r.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=jt.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const r={...e};return r.authorization_endpoint=cn.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=cn.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=cn.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e;const n=new jt(e).getUrlComponents();return 0===n.PathSegments.length&&n.HostNameAndPort.endsWith(r.CIAM_AUTH_URL)&&(t=`${t}${n.HostNameAndPort.split(".")[0]}${r.AAD_TENANT_DOMAIN_SUFFIX}`),t}}function ln(e){return e.endsWith(r.FORWARD_SLASH)?e:`${e}${r.FORWARD_SLASH}`}function hn(e){const t=e.cloudDiscoveryMetadata;let r;if(t)try{r=JSON.parse(t)}catch(e){throw Nt(vt)}return{canonicalAuthority:e.authority?ln(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:r}}async function dn(e,t,r,n,o,i,s){s?.addQueueMeasurement(sr.AuthorityFactoryCreateDiscoveredInstance,i);const a=cn.transformCIAMAuthority(ln(e)),c=new cn(a,t,r,n,o,i,s);try{return await sn(c.resolveEndpointsAsync.bind(c),sr.AuthorityResolveEndpointsAsync,o,s,i)(),c}catch(e){throw Ne(K)}}cn.reservedTenantDomains=new Set(["{tenant}","{tenantid}",d,g,u]);class un extends x{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,un.prototype)}}function gn(e,t,r){return{clientId:e,authority:t.authority,scopes:t.scopes,homeAccountIdentifier:r,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid,embeddedClientId:t.embeddedClientId||t.tokenBodyParameters?.clientId}}class pn{static generateThrottlingStorageKey(e){return`${P}.${JSON.stringify(e)}`}static preProcess(e,t,n){const o=pn.generateThrottlingStorageKey(t),i=e.getThrottlingCache(o);if(i){if(i.throttleTime<Date.now())return void e.removeItem(o,n);throw new un(i.errorCodes?.join(" ")||r.EMPTY_STRING,i.errorMessage,i.subError)}}static postProcess(e,t,r,n){if(pn.checkResponseStatus(r)||pn.checkResponseForRetryAfter(r)){const o={throttleTime:pn.calculateThrottleTime(parseInt(r.headers[s])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(pn.generateThrottlingStorageKey(t),o,n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(s)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){const t=e<=0?0:e,r=Date.now()/1e3;return Math.floor(1e3*Math.min(r+(t||60),r+3600))}static removeThrottle(e,t,r,n){const o=gn(t,r,n),i=this.generateThrottlingStorageKey(o);e.removeItem(i,r.correlationId)}}class mn extends x{constructor(e,t,r){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,mn.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=r}}function fn(e,t,r,n){return e.errorMessage=`${e.errorMessage}, additionalErrorInfo: error.name:${n?.name}, error.message:${n?.message}`,new mn(e,t,r)}class yn{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:h,persistencePlugin:d,serializableCache:u}){const g={...ur,...r};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:yr,skipAuthorityMetadataCache:!1,instanceAware:!1,encodeExtraQueryParams:!1,...p}),systemOptions:{...dr,...t},loggerOptions:g,cacheOptions:{...gr,...n},storageInterface:o||new ir(e.clientId,qe,new Ue(g),new hr),networkInterface:i||pr,cryptoInterface:s||qe,clientCredentials:a||fr,libraryInfo:{...mr,...c},telemetry:{...Cr,...l},serverTelemetryManager:h||null,persistencePlugin:d||null,serializableCache:u||null};var p}(e),this.logger=new Ue(this.config.loggerOptions,xe,He),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[i]=r.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case wr:try{const r=xt(e.credential);t[a]=`Oid:${r.uid}@${r.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Ir:t[a]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,n,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);const s=await this.sendPostRequest(n,e,{body:t,headers:r},o);return this.config.serverTelemetryManager&&s.status<500&&429!==s.status&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async sendPostRequest(e,t,r,n){let o;pn.preProcess(this.cacheManager,e,n);try{o=await sn(this.networkClient.sendPostRequestAsync.bind(this.networkClient),sr.NetworkClientSendPostRequestAsync,this.logger,this.performanceClient,n)(t,r);const e=o.headers||{};this.performanceClient?.addFields({refreshTokenSize:o.body.refresh_token?.length||0,httpVerToken:e[l]||"",requestId:e[c]||""},n)}catch(e){if(e instanceof mn){const t=e.responseHeaders;throw t&&this.performanceClient?.addFields({httpVerToken:t[l]||"",requestId:t[c]||"",contentTypeHeader:t[i]||void 0,contentLengthHeader:t["Content-Length"]||void 0,httpStatus:e.httpStatus},n),e.error}throw e instanceof x?e:Ne(G)}return pn.postProcess(this.cacheManager,e,o,n),o}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(sr.UpdateTokenEndpointAuthority,t);const r=`https://${e}/${this.authority.tenant}/`,n=await dn(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){const t=new Map;return e.embeddedClientId&&nn(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenQueryParameters&&Yr(t,e.tokenQueryParameters),Fr(t,e.correlationId),Mr(t,e.correlationId,this.performanceClient),Qt(t)}}const Cn="no_tokens_found",vn="native_account_unavailable",wn="refresh_token_expired",In="ux_not_allowed",Tn="interaction_required",An="consent_required",kn="login_required",Sn="bad_token";var bn=Object.freeze({__proto__:null,badToken:Sn,consentRequired:An,interactionRequired:Tn,loginRequired:kn,nativeAccountUnavailable:vn,noTokensFound:Cn,refreshTokenExpired:wn,uxNotAllowed:In});const En=[Tn,An,kn,Sn,In],Rn=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],_n={[Cn]:"No refresh token found in the cache. Please sign-in.",[vn]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[wn]:"Refresh token has expired.",[Sn]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.",[In]:"`canShowUI` flag in Edge was set to false. User interaction required on web page. Please invoke an interactive API to resolve."},Pn={noTokensFoundError:{code:Cn,desc:_n[Cn]},native_account_unavailable:{code:vn,desc:_n[vn]},bad_token:{code:Sn,desc:_n[Sn]}};class Mn extends x{constructor(e,t,n,o,i,s,a,c){super(e,t,n),Object.setPrototypeOf(this,Mn.prototype),this.timestamp=o||r.EMPTY_STRING,this.traceId=i||r.EMPTY_STRING,this.correlationId=s||r.EMPTY_STRING,this.claims=a||r.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function On(e,t,r){const n=!!e&&En.indexOf(e)>-1,o=!!r&&Rn.indexOf(r)>-1,i=!!t&&En.some(e=>t.indexOf(e)>-1);return n||i||o}function Nn(e){return new Mn(e,_n[e])}class qn{static setRequestState(e,t,n){const o=qn.generateLibraryState(e,n);return t?`${o}${r.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw Ne(ge);const r={id:e.createNewGuid()};t&&(r.meta=t);const n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(e,t){if(!e)throw Ne(ge);if(!t)throw Ne(j);try{const n=t.split(r.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(r.RESOURCE_DELIM):r.EMPTY_STRING,s=e.base64Decode(o),a=JSON.parse(s);return{userRequestState:i||r.EMPTY_STRING,libraryState:a}}catch(e){throw Ne(j)}}}class Ln{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(sr.PopTokenGenerateCnf,e.correlationId);const r=await sn(this.generateKid.bind(this),sr.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(sr.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){const{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:s,shrNonce:a,shrOptions:c}=r,l=i?new jt(i):void 0,h=l?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:ze(),m:o?.toUpperCase(),u:h?.HostNameAndPort,nonce:a||this.cryptoUtils.createNewGuid(),p:h?.AbsolutePath,q:h?.QueryString?[[],h.QueryString]:void 0,client_claims:s||void 0,...n},t,c,r.correlationId)}}class Un{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class xn{constructor(e,t,r,n,o,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=s}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`Error(s): ${e.error_codes||r.NOT_AVAILABLE} - Timestamp: ${e.timestamp||r.NOT_AVAILABLE} - Description: ${e.error_description||r.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||r.NOT_AVAILABLE} - Trace ID: ${e.trace_id||r.NOT_AVAILABLE}`,o=e.error_codes?.length?e.error_codes[0]:void 0,i=new un(e.error,n,e.suberror,o,e.status);if(t&&e.status&&e.status>=500&&e.status<=599)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${i}`);if(t&&e.status&&e.status>=400&&e.status<=499)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${i}`);if(On(e.error,e.error_description,e.suberror))throw new Mn(e.error,e.error_description,e.suberror,e.timestamp||r.EMPTY_STRING,e.trace_id||r.EMPTY_STRING,e.correlation_id||r.EMPTY_STRING,e.claims||r.EMPTY_STRING,o);throw i}}async handleServerTokenResponse(e,t,n,o,i,s,a,c,l){let h,d;if(this.performanceClient?.addQueueMeasurement(sr.HandleServerTokenResponse,e.correlation_id),e.id_token){if(h=Be(e.id_token||r.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&h.nonce!==i.nonce)throw Ne(J);if(o.maxAge||0===o.maxAge){const e=h.auth_time;if(!e)throw Ne(Y);Fe(e,o.maxAge)}}this.homeAccountIdentifier=Kt.generateHomeAccountId(e.client_info||r.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,h),i&&i.state&&(d=qn.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||o.sshKid||void 0;const u=this.generateCacheRecord(e,t,n,o,h,s,i);let g;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),g=new Un(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(g)),a&&!c&&u.account){const e=u.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,o.correlationId))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await xn.generateAuthenticationResult(this.cryptoObj,t,u,!1,o,h,d,void 0,l)}await this.cacheStorage.saveCacheRecord(u,o.correlationId,o.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&g&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(g))}return xn.generateAuthenticationResult(this.cryptoObj,t,u,!1,o,h,d,e,l)}generateCacheRecord(e,t,r,n,o,i,s){const a=t.getPreferredCache();if(!a)throw Ne(de);const c=Ft(o);let l,h;e.id_token&&o&&(l=We(this.homeAccountIdentifier,a,e.id_token,this.clientId,c||""),h=Hn(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,n.correlationId,o,e.client_info,a,c,s,void 0,this.logger));let d=null;if(e.access_token){const o=e.scope?Lt.fromString(e.scope):new Lt(n.scopes||[]),s=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,l=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,h=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+s,g=u+l,p=h&&h>0?r+h:void 0;d=Ve(this.homeAccountIdentifier,a,e.access_token,this.clientId,c||t.tenant||"",o.printScopes(),u,g,this.cryptoObj.base64Decode,p,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),u=Je(this.homeAccountIdentifier,a,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:a,familyId:e.foci}),{account:h,idToken:l,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,n,o,i,s,a,c,l){let h,d,u=r.EMPTY_STRING,g=[],p=null,m=r.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==_.POP||i.popKid)u=n.accessToken.secret;else{const t=new Ln(e),{secret:r,keyId:o}=n.accessToken;if(!o)throw Ne(Ae);u=await t.signPopToken(r,o,i)}g=Lt.fromString(n.accessToken.target).asArray(),p=Ge(n.accessToken.expiresOn),h=Ge(n.accessToken.extendedExpiresOn),n.accessToken.refreshOn&&(d=Ge(n.accessToken.refreshOn))}n.appMetadata&&(m=n.appMetadata.familyId===T?T:"");const f=s?.oid||s?.sub||"",y=s?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const C=n.account?Bt(n.account.getAccountInfo(),void 0,s,n.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:f,tenantId:y,scopes:g,account:C,idToken:n?.idToken?.secret||"",idTokenClaims:s||{},accessToken:u,fromCache:o,expiresOn:p,extExpiresOn:h,refreshOn:d,correlationId:i.correlationId,requestId:l||r.EMPTY_STRING,familyId:m,tokenType:n.accessToken?.tokenType||r.EMPTY_STRING,state:a?a.userRequestState:r.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||r.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||r.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function Hn(e,t,r,n,o,i,s,a,c,l,h,d){d?.verbose("setCachedAccount called");const u=e.getAccountKeys().find(e=>e.startsWith(r));let g=null;u&&(g=e.getAccount(u,o));const p=g||Kt.createAccount({homeAccountId:r,idTokenClaims:i,clientInfo:s,environment:a,cloudGraphHostName:l?.cloud_graph_host_name,msGraphHost:l?.msgraph_host,nativeAccountId:h},t,n),m=p.tenantProfiles||[],f=c||p.realm;if(f&&!m.find(e=>e.tenantId===f)){const e=Dt(r,p.localAccountId,f,i);m.push(e)}return p.tenantProfiles=m,p}class Dn{static validateRedirectUri(e){if(!e)throw Nt(at)}static validatePrompt(e){const t=[];for(const e in m)t.push(m[e]);if(t.indexOf(e)<0)throw Nt(gt)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw Nt(pt)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw Nt(Ct);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([f.PLAIN,f.S256].indexOf(e)<0)throw Nt(yt)}}async function Bn(e,t,r){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:r})}class Fn extends yn{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(sr.AuthClientAcquireToken,e.correlationId),!e.code)throw Ne(re);const r=ze(),n=await sn(this.executeTokenRequest.bind(this),sr.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=n.headers?.[c],i=new xn(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(n.body),sn(i.handleServerTokenResponse.bind(i),sr.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,o)}getLogoutUri(e){if(!e)throw Nt(ft);const t=this.createLogoutUrlQueryString(e);return jt.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(sr.AuthClientExecuteTokenRequest,t.correlationId);const r=this.createTokenQueryParameters(t),n=jt.appendQueryString(e.tokenEndpoint,r),o=await sn(this.createTokenRequestBody.bind(this),sr.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const e=Ut(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${e.uid}.${e.utid}`,type:wr}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),a=gn(this.config.authOptions.clientId,t);return sn(this.executePostToTokenEndpoint.bind(this),sr.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(n,o,s,a,t.correlationId,sr.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(sr.AuthClientCreateTokenRequestBody,e.correlationId);const t=new Map;if(qr(t,e.embeddedClientId||e.tokenBodyParameters?.[Tr]||this.config.authOptions.clientId),this.includeRedirectUri?Lr(t,e.redirectUri):Dn.validateRedirectUri(e.redirectUri),Nr(t,e.scopes,!0,this.oidcDefaultScopes),function(e,t){e.set("code",t)}(t,e.code),zr(t,this.config.libraryInfo),Kr(t,this.config.telemetry.application),rn(t),this.serverTelemetryManager&&!vr(this.config)&&tn(t,this.serverTelemetryManager),e.codeVerifier&&function(e,t){e.set("code_verifier",t)}(t,e.codeVerifier),this.config.clientCredentials.clientSecret&&$r(t,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;Qr(t,await Bn(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),jr(t,r.assertionType)}if(Wr(t,"authorization_code"),Vr(t),e.authenticationScheme===_.POP){const r=new Ln(this.cryptoUtils,this.performanceClient);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await sn(r.generateCnf.bind(r),sr.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,Zr(t,n)}else if(e.authenticationScheme===_.SSH){if(!e.sshJwk)throw Nt(Tt);en(t,e.sshJwk)}let r;if((!qt.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Br(t,e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=Ut(e.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${t.uid}.${t.utid}`,type:wr}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case wr:try{Hr(t,xt(r.credential))}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Ir:xr(t,r.credential)}return e.embeddedClientId&&nn(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&Yr(t,e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[br]||Yr(t,{[br]:"1"}),Mr(t,e.correlationId,this.performanceClient),Qt(t)}createLogoutUrlQueryString(e){const t=new Map;return e.postLogoutRedirectUri&&function(e,t){e.set("post_logout_redirect_uri",t)}(t,e.postLogoutRedirectUri),e.correlationId&&Fr(t,e.correlationId),e.idTokenHint&&function(e,t){e.set("id_token_hint",t)}(t,e.idTokenHint),e.state&&Gr(t,e.state),e.logoutHint&&function(e,t){e.set("logout_hint",t)}(t,e.logoutHint),e.extraQueryParameters&&Yr(t,e.extraQueryParameters),this.config.authOptions.instanceAware&&Jr(t),Qt(t,this.config.authOptions.encodeExtraQueryParams,e.extraQueryParameters)}}class zn extends yn{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(sr.RefreshTokenClientAcquireToken,e.correlationId);const t=ze(),r=await sn(this.executeTokenRequest.bind(this),sr.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[c],o=new xn(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),sn(o.handleServerTokenResponse.bind(o),sr.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw Nt(mt);if(this.performanceClient?.addQueueMeasurement(sr.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw Ne(le);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await sn(this.acquireTokenWithCachedRefreshToken.bind(this),sr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const r=t instanceof Mn&&t.errorCode===Cn,n=t instanceof un&&"invalid_grant"===t.errorCode&&"client_mismatch"===t.subError;if(r||n)return sn(this.acquireTokenWithCachedRefreshToken.bind(this),sr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return sn(this.acquireTokenWithCachedRefreshToken.bind(this),sr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(sr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const r=on(this.cacheManager.getRefreshToken.bind(this.cacheManager),sr.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,e.correlationId,void 0,this.performanceClient);if(!r)throw Nn(Cn);if(r.expiresOn&&$e(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw this.performanceClient?.addFields({rtExpiresOnMs:Number(r.expiresOn)},e.correlationId),Nn(wn);const n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||_.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:wr}};try{return await sn(this.acquireToken.bind(this),sr.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(n)}catch(t){if(t instanceof Mn&&(this.performanceClient?.addFields({rtExpiresOnMs:Number(r.expiresOn)},e.correlationId),t.subError===Sn)){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const t=je(r);this.cacheManager.removeRefreshToken(t,e.correlationId)}throw t}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(sr.RefreshTokenClientExecuteTokenRequest,e.correlationId);const r=this.createTokenQueryParameters(e),n=jt.appendQueryString(t.tokenEndpoint,r),o=await sn(this.createTokenRequestBody.bind(this),sr.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s=gn(this.config.authOptions.clientId,e);return sn(this.executePostToTokenEndpoint.bind(this),sr.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(n,o,i,s,e.correlationId,sr.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(sr.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=new Map;if(qr(t,e.embeddedClientId||e.tokenBodyParameters?.[Tr]||this.config.authOptions.clientId),e.redirectUri&&Lr(t,e.redirectUri),Nr(t,e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),Wr(t,"refresh_token"),Vr(t),zr(t,this.config.libraryInfo),Kr(t,this.config.telemetry.application),rn(t),this.serverTelemetryManager&&!vr(this.config)&&tn(t,this.serverTelemetryManager),function(e,t){e.set("refresh_token",t)}(t,e.refreshToken),this.config.clientCredentials.clientSecret&&$r(t,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;Qr(t,await Bn(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),jr(t,r.assertionType)}if(e.authenticationScheme===_.POP){const r=new Ln(this.cryptoUtils,this.performanceClient);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await sn(r.generateCnf.bind(r),sr.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,Zr(t,n)}else if(e.authenticationScheme===_.SSH){if(!e.sshJwk)throw Nt(Tt);en(t,e.sshJwk)}if((!qt.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Br(t,e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case wr:try{Hr(t,xt(e.ccsCredential.credential))}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Ir:xr(t,e.ccsCredential.credential)}return e.embeddedClientId&&nn(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&Yr(t,e.tokenBodyParameters),Mr(t,e.correlationId,this.performanceClient),Qt(t)}}class Kn extends yn{constructor(e,t){super(e,t)}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(sr.SilentFlowClientAcquireCachedToken,e.correlationId);let t="0";if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!qt.isEmptyObj(e.claims))throw this.setCacheOutcome("1",e.correlationId),Ne(ye);if(!e.account)throw Ne(le);const r=e.account.tenantId||function(e){const t=new jt(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case d:case u:case g:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,n,r);if(!o)throw this.setCacheOutcome("2",e.correlationId),Ne(ye);if(Qe(o.cachedAt)||$e(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome("3",e.correlationId),Ne(ye);o.refreshOn&&$e(o.refreshOn,0)&&(t="4");const i=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account,e.correlationId),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,e.correlationId,n,r,this.performanceClient),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await sn(this.generateResultFromCacheRecord.bind(this),sr.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),"0"!==e&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(sr.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=Be(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=r?.auth_time;if(!e)throw Ne(Y);Fe(e,t.maxAge)}return xn.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}const Gn={sendGetRequestAsync:()=>Promise.reject(Ne(Ee)),sendPostRequestAsync:()=>Promise.reject(Ne(Ee))};function $n(e,t,r,n){const o=Qt(t,r,n);return jt.appendQueryString(e.authorizationEndpoint,o)}function Qn(e,t){if(!e.state||!t)throw e.state?Ne(V,"Cached State"):Ne(V,"Server State");let r,n;try{r=decodeURIComponent(e.state)}catch(t){throw Ne(j,e.state)}try{n=decodeURIComponent(t)}catch(t){throw Ne(j,e.state)}if(r!==n)throw Ne(W);if(e.error||e.error_description||e.suberror){const t=function(e){const t="code=",r=e.error_uri?.lastIndexOf(t);return r&&r>=0?e.error_uri?.substring(r+5):void 0}(e);if(On(e.error,e.error_description,e.suberror))throw new Mn(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new un(e.error||"",e.error_description,e.suberror,t)}}class jn{constructor(e,t){this.cacheOutcome="0",this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||r.EMPTY_STRING,this.wrapperVer=e.wrapperVer||r.EMPTY_STRING,this.telemetryCacheKey=R.CACHE_KEY+v+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${R.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);const n=t.join(R.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(R.VALUE_SEPARATOR);return[R.SCHEMA_VERSION,o,n].join(R.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=jn.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(R.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(R.VALUE_SEPARATOR),o=e.errors.length,i=[o,t<o?R.OVERFLOW_TRUE:R.OVERFLOW_FALSE].join(R.VALUE_SEPARATOR);return[R.SCHEMA_VERSION,e.cacheHits,r,n,i].join(R.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=R.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof x?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(R.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=jn.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey,this.correlationId);else{const r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r,this.correlationId)}}static maxErrorsToSend(e){let t,n=0,o=0;const i=e.errors.length;for(t=0;t<i;t++){const i=e.failedRequests[2*t]||r.EMPTY_STRING,s=e.failedRequests[2*t+1]||r.EMPTY_STRING,a=e.errors[t]||r.EMPTY_STRING;if(o+=i.toString().length+s.toString().length+a.length+3,!(o<R.MAX_LAST_HEADER_BYTES))break;n+=1}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||r.EMPTY_STRING),e.push(this.regionSource||r.EMPTY_STRING),e.push(this.regionOutcome||r.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId)}static makeExtraSkuString(e){return function(e){const{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,s=new Map([[0,[r,n]],[2,[o,i]]]);let a=[];if(t?.length){if(a=t.split(","),a.length<4)return t}else a=Array.from({length:4},()=>"|");return s.forEach((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:r,skuName:n,skuVersion:o}=e;r>=t.length||(t[r]=[n,o].join("|"))}({skuArr:a,index:t,skuName:e[0],skuVersion:e[1]})}),a.join(",")}(e)}}const Wn="missing_kid_error",Vn="missing_alg_error",Jn={[Wn]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Vn]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class Yn extends x{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,Yn.prototype)}}function Xn(e){return new Yn(e,Jn[e])}class Zn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Xn(Wn);if(!e.alg)throw Xn(Vn);const t=new Zn({typ:e.typ||M.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}function eo(e){const t=e.lastIndexOf(" ")+1;if(t<1)return e;const r=e.substring(t);let n=r.lastIndexOf("/");return n=n<0?r.lastIndexOf("\\"):n,n>=0?(e.substring(0,t)+"("+r.substring(n+1)+(")"===r.charAt(r.length-1)?"":")")).trimStart():e.trimStart()}class to{constructor(e,t,r,n,o,i,s,a){this.authority=t,this.libraryName=n,this.libraryVersion=o,this.applicationTelemetry=i,this.clientId=e,this.logger=r,this.callbacks=new Map,this.eventsByCorrelationId=new Map,this.eventStack=new Map,this.queueMeasurements=new Map,this.preQueueTimeByCorrelationId=new Map,this.intFields=s||new Set;for(const e of cr)this.intFields.add(e);this.abbreviations=a||new Map;for(const[e,t]of ar)this.abbreviations.set(e,t)}startPerformanceMeasurement(e,t){return{}}getPreQueueTime(e,t){const r=this.preQueueTimeByCorrelationId.get(t);if(r){if(r.name===e)return r.time;this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${e}, unable to add queue measurement`)}else this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${t}, unable to add queue measurement`)}calculateQueuedTime(e,t){return e<1?(this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${e}`),0):t<1?(this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${t}`),0):t<e?(this.logger.trace("PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved"),0):t-e}addQueueMeasurement(e,t,r,n){if(!t)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${e}, cannot add queue measurement`);if(0===r)this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${e} is ${r}`);else if(!r)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${e}`);const o={eventName:e,queueTime:n?0:r,manuallyCompleted:n},i=this.queueMeasurements.get(t);if(i)i.push(o),this.queueMeasurements.set(t,i);else{this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${t} to queue measurements`);const e=[o];this.queueMeasurements.set(t,e)}this.preQueueTimeByCorrelationId.delete(t)}startMeasurement(e,t){const r=t||this.generateId();t||this.logger.info(`PerformanceClient: No correlation id provided for ${e}, generating`,r),this.logger.trace(`PerformanceClient: Performance measurement started for ${e}`,r);const n={eventId:this.generateId(),status:1,authority:this.authority,libraryName:this.libraryName,libraryVersion:this.libraryVersion,clientId:this.clientId,name:e,startTimeMs:Date.now(),correlationId:r,appName:this.applicationTelemetry?.appName,appVersion:this.applicationTelemetry?.appVersion};var o,i,s;return this.cacheEventByCorrelationId(n),o=n,i=this.abbreviations,(s=this.eventStack.get(r))&&s.push({name:i.get(o.name)||o.name}),{end:(e,t)=>this.endMeasurement({...n,...e},t),discard:()=>this.discardMeasurements(n.correlationId),add:e=>this.addFields(e,n.correlationId),increment:e=>this.incrementFields(e,n.correlationId),event:n,measurement:new lr}}endMeasurement(e,t){const r=this.eventsByCorrelationId.get(e.correlationId);if(!r)return this.logger.trace(`PerformanceClient: Measurement not found for ${e.eventId}`,e.correlationId),null;const n=e.eventId===r.eventId;let o={totalQueueTime:0,totalQueueCount:0,manuallyCompletedCount:0};e.durationMs=Math.round(e.durationMs||this.getDurationMs(e.startTimeMs));const i=JSON.stringify(function(e,t,r,n){if(!r?.length)return;const o=e=>e.length?e[e.length-1]:void 0,i=t.get(e.name)||e.name,s=o(r);if(s?.name!==i)return;const a=r?.pop();if(!a)return;const c=n instanceof x?n.errorCode:n instanceof Error?n.name:void 0,l=n instanceof x?n.subError:void 0;c&&a.childErr!==c&&(a.err=c,l&&(a.subErr=l)),delete a.name,delete a.childErr;const h={...a,dur:e.durationMs};e.success||(h.fail=1);const d=o(r);if(!d)return{[i]:h};let u;if(c&&(d.childErr=c),d[i]){const e=Object.keys(d).filter(e=>e.startsWith(i)).length;u=`${i}_${e+1}`}else u=i;return d[u]=h,d}(e,this.abbreviations,this.eventStack.get(r.correlationId),t));if(n?(o=this.getQueueInfo(e.correlationId),this.discardMeasurements(r.correlationId)):r.incompleteSubMeasurements?.delete(e.eventId),this.logger.trace(`PerformanceClient: Performance measurement ended for ${e.name}: ${e.durationMs} ms`,e.correlationId),t&&function(e,t,r,n=5){if(e instanceof Error)return e instanceof x?(r.errorCode=e.errorCode,r.subErrorCode=e.subError,void((e instanceof un||e instanceof Mn)&&(r.serverErrorNo=e.errorNo))):void(e instanceof rr?r.errorCode=e.errorCode:r.errorStack?.length?t.trace("PerformanceClient.addErrorStack: Stack already exist",r.correlationId):e.stack?.length?(e.stack&&(r.errorStack=function(e,t){if(t<0)return[];const r=e.split("\n")||[],n=[],o=r[0];o.startsWith("TypeError: Cannot read property")||o.startsWith("TypeError: Cannot read properties of")||o.startsWith("TypeError: Cannot set property")||o.startsWith("TypeError: Cannot set properties of")||o.endsWith("is not a function")?n.push(eo(o)):(o.startsWith("SyntaxError")||o.startsWith("TypeError"))&&n.push(eo(o.replace(/['].*[']|["].*["]/g,"<redacted>")));for(let e=1;e<r.length&&!(n.length>=t);e++){const t=r[e];n.push(eo(t))}return n}(e.stack,n)),r.errorName=e.name):t.trace("PerformanceClient.addErrorStack: Input stack is empty",r.correlationId));t.trace("PerformanceClient.addErrorStack: Input error is not instance of Error",r.correlationId)}(t,this.logger,r),!n)return r[e.name+"DurationMs"]=Math.floor(e.durationMs),{...r};n&&!t&&(r.errorCode||r.subErrorCode)&&(this.logger.trace(`PerformanceClient: Remove error and sub-error codes for root event ${e.name} as intermediate error was successfully handled`,e.correlationId),r.errorCode=void 0,r.subErrorCode=void 0);let s={...r,...e},a=0;return s.incompleteSubMeasurements?.forEach(t=>{this.logger.trace(`PerformanceClient: Incomplete submeasurement ${t.name} found for ${e.name}`,s.correlationId),a++}),s.incompleteSubMeasurements=void 0,s={...s,queuedTimeMs:o.totalQueueTime,queuedCount:o.totalQueueCount,queuedManuallyCompletedCount:o.manuallyCompletedCount,status:2,incompleteSubsCount:a,context:i},this.truncateIntegralFields(s),this.emitEvents([s],e.correlationId),s}addFields(e,t){this.logger.trace("PerformanceClient: Updating static fields");const r=this.eventsByCorrelationId.get(t);r?this.eventsByCorrelationId.set(t,{...r,...e}):this.logger.trace("PerformanceClient: Event not found for",t)}incrementFields(e,t){this.logger.trace("PerformanceClient: Updating counters");const r=this.eventsByCorrelationId.get(t);if(r)for(const t in e){if(r.hasOwnProperty(t)){if(isNaN(Number(r[t])))return}else r[t]=0;r[t]+=e[t]}else this.logger.trace("PerformanceClient: Event not found for",t)}cacheEventByCorrelationId(e){const t=this.eventsByCorrelationId.get(e.correlationId);t?(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} added/updated`,e.correlationId),t.incompleteSubMeasurements=t.incompleteSubMeasurements||new Map,t.incompleteSubMeasurements.set(e.eventId,{name:e.name,startTimeMs:e.startTimeMs})):(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} started`,e.correlationId),this.eventsByCorrelationId.set(e.correlationId,{...e}),this.eventStack.set(e.correlationId,[]))}getQueueInfo(e){const t=this.queueMeasurements.get(e);t||this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${e}`);let r=0,n=0,o=0;return t?.forEach(e=>{r+=e.queueTime,n++,o+=e.manuallyCompleted?1:0}),{totalQueueTime:r,totalQueueCount:n,manuallyCompletedCount:o}}discardMeasurements(e){this.logger.trace("PerformanceClient: Performance measurements discarded",e),this.eventsByCorrelationId.delete(e),this.logger.trace("PerformanceClient: QueueMeasurements discarded",e),this.queueMeasurements.delete(e),this.logger.trace("PerformanceClient: Pre-queue times discarded",e),this.preQueueTimeByCorrelationId.delete(e),this.logger.trace("PerformanceClient: Event stack discarded",e),this.eventStack.delete(e)}addPerformanceCallback(e){for(const[t,r]of this.callbacks)if(r.toString()===e.toString())return this.logger.warning(`PerformanceClient: Performance callback is already registered with id: ${t}`),t;const t=this.generateId();return this.callbacks.set(t,e),this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${t}`),t}removePerformanceCallback(e){const t=this.callbacks.delete(e);return t?this.logger.verbose(`PerformanceClient: Performance callback ${e} removed.`):this.logger.verbose(`PerformanceClient: Performance callback ${e} not removed.`),t}emitEvents(e,t){this.logger.verbose("PerformanceClient: Emitting performance events",t),this.callbacks.forEach((r,n)=>{this.logger.trace(`PerformanceClient: Emitting event to callback ${n}`,t),r.apply(null,[e])})}truncateIntegralFields(e){this.intFields.forEach(t=>{t in e&&"number"==typeof e[t]&&(e[t]=Math.floor(e[t]))})}getDurationMs(e){const t=Date.now()-e;return t<0?t:0}}const ro="pkce_not_created",no="ear_jwk_empty",oo="ear_jwe_empty",io="crypto_nonexistent",so="empty_navigate_uri",ao="hash_empty_error",co="no_state_in_hash",lo="hash_does_not_contain_known_properties",ho="unable_to_parse_state",uo="state_interaction_type_mismatch",go="interaction_in_progress",po="popup_window_error",mo="empty_window_error",fo="user_cancelled",yo="monitor_popup_timeout",Co="monitor_window_timeout",vo="redirect_in_iframe",wo="block_iframe_reload",Io="block_nested_popups",To="iframe_closed_prematurely",Ao="silent_logout_unsupported",ko="no_account_error",So="silent_prompt_value_error",bo="no_token_request_cache_error",Eo="unable_to_parse_token_request_cache_error",Ro="auth_request_not_set_error",_o="invalid_cache_type",Po="non_browser_environment",Mo="database_not_open",Oo="no_network_connectivity",No="post_request_failed",qo="get_request_failed",Lo="failed_to_parse_response",Uo="unable_to_load_token",xo="crypto_key_not_found",Ho="auth_code_required",Do="auth_code_or_nativeAccountId_required",Bo="spa_code_and_nativeAccountId_present",Fo="database_unavailable",zo="unable_to_acquire_token_from_native_platform",Ko="native_handshake_timeout",Go="native_extension_not_installed",$o="native_connection_not_established",Qo="uninitialized_public_client_application",jo="native_prompt_not_supported",Wo="invalid_base64_string",Vo="invalid_pop_token_request",Jo="failed_to_build_headers",Yo="failed_to_parse_headers",Xo="failed_to_decrypt_ear_response",Zo="timed_out";var ei=Object.freeze({__proto__:null,authCodeOrNativeAccountIdRequired:Do,authCodeRequired:Ho,authRequestNotSetError:Ro,blockIframeReload:wo,blockNestedPopups:Io,cryptoKeyNotFound:xo,cryptoNonExistent:io,databaseNotOpen:Mo,databaseUnavailable:Fo,earJweEmpty:oo,earJwkEmpty:no,emptyNavigateUri:so,emptyWindowError:mo,failedToBuildHeaders:Jo,failedToDecryptEarResponse:Xo,failedToParseHeaders:Yo,failedToParseResponse:Lo,getRequestFailed:qo,hashDoesNotContainKnownProperties:lo,hashEmptyError:ao,iframeClosedPrematurely:To,interactionInProgress:go,invalidBase64String:Wo,invalidCacheType:_o,invalidPopTokenRequest:Vo,monitorPopupTimeout:yo,monitorWindowTimeout:Co,nativeConnectionNotEstablished:$o,nativeExtensionNotInstalled:Go,nativeHandshakeTimeout:Ko,nativePromptNotSupported:jo,noAccountError:ko,noNetworkConnectivity:Oo,noStateInHash:co,noTokenRequestCacheError:bo,nonBrowserEnvironment:Po,pkceNotCreated:ro,popupWindowError:po,postRequestFailed:No,redirectInIframe:vo,silentLogoutUnsupported:Ao,silentPromptValueError:So,spaCodeAndNativeAccountIdPresent:Bo,stateInteractionTypeMismatch:uo,timedOut:Zo,unableToAcquireTokenFromNativePlatform:zo,unableToLoadToken:Uo,unableToParseState:ho,unableToParseTokenRequestCacheError:Eo,uninitializedPublicClientApplication:Qo,userCancelled:fo});const ti="For more visit: aka.ms/msaljs/browser-errors",ri={[ro]:"The PKCE code challenge and verifier could not be generated.",[no]:"No EAR encryption key provided. This is unexpected.",[oo]:"Server response does not contain ear_jwe property. This is unexpected.",[io]:"The crypto object or function is not available.",[so]:"Navigation URI is empty. Please check stack trace for more info.",[ao]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ti}`,[co]:"Hash does not contain state. Please verify that the request originated from msal.",[lo]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ti}`,[ho]:"Unable to parse state. Please verify that the request originated from msal.",[uo]:"Hash contains state but the interaction type does not match the caller.",[go]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ti}`,[po]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[mo]:"window.open returned null or undefined window object.",[fo]:"User cancelled the flow.",[yo]:`Token acquisition in popup failed due to timeout.  ${ti}`,[Co]:`Token acquisition in iframe failed due to timeout.  ${ti}`,[vo]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[wo]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${ti}`,[Io]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[To]:"The iframe being monitored was closed prematurely.",[Ao]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[ko]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[So]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[bo]:"No token request found in cache.",[Eo]:"The cached token request could not be parsed.",[Ro]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[_o]:"Invalid cache type",[Po]:"Login and token requests are not supported in non-browser environments.",[Mo]:"Database is not open!",[Oo]:"No network connectivity. Check your internet connection.",[No]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[qo]:"Network request failed. Please check the network trace to determine root cause.",[Lo]:"Failed to parse network response. Check network trace.",[Uo]:"Error loading token to cache.",[xo]:"Cryptographic Key or Keypair not found in browser storage.",[Ho]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Do]:"An authorization code or nativeAccountId must be provided to this flow.",[Bo]:"Request cannot contain both spa code and native account id.",[Fo]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[zo]:`Unable to acquire token from native platform.  ${ti}`,[Ko]:"Timed out while attempting to establish connection to browser extension",[Go]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[$o]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ti}`,[Qo]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${ti}`,[jo]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Wo]:"Invalid base64 encoded string.",[Vo]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[Jo]:"Failed to build request headers object.",[Yo]:"Failed to parse response headers",[Xo]:"Failed to decrypt ear response",[Zo]:"The request timed out."},ni={pkceNotGenerated:{code:ro,desc:ri[ro]},cryptoDoesNotExist:{code:io,desc:ri[io]},emptyNavigateUriError:{code:so,desc:ri[so]},hashEmptyError:{code:ao,desc:ri[ao]},hashDoesNotContainStateError:{code:co,desc:ri[co]},hashDoesNotContainKnownPropertiesError:{code:lo,desc:ri[lo]},unableToParseStateError:{code:ho,desc:ri[ho]},stateInteractionTypeMismatchError:{code:uo,desc:ri[uo]},interactionInProgress:{code:go,desc:ri[go]},popupWindowError:{code:po,desc:ri[po]},emptyWindowError:{code:mo,desc:ri[mo]},userCancelledError:{code:fo,desc:ri[fo]},monitorPopupTimeoutError:{code:yo,desc:ri[yo]},monitorIframeTimeoutError:{code:Co,desc:ri[Co]},redirectInIframeError:{code:vo,desc:ri[vo]},blockTokenRequestsInHiddenIframeError:{code:wo,desc:ri[wo]},blockAcquireTokenInPopupsError:{code:Io,desc:ri[Io]},iframeClosedPrematurelyError:{code:To,desc:ri[To]},silentLogoutUnsupportedError:{code:Ao,desc:ri[Ao]},noAccountError:{code:ko,desc:ri[ko]},silentPromptValueError:{code:So,desc:ri[So]},noTokenRequestCacheError:{code:bo,desc:ri[bo]},unableToParseTokenRequestCacheError:{code:Eo,desc:ri[Eo]},authRequestNotSet:{code:Ro,desc:ri[Ro]},invalidCacheType:{code:_o,desc:ri[_o]},notInBrowserEnvironment:{code:Po,desc:ri[Po]},databaseNotOpen:{code:Mo,desc:ri[Mo]},noNetworkConnectivity:{code:Oo,desc:ri[Oo]},postRequestFailed:{code:No,desc:ri[No]},getRequestFailed:{code:qo,desc:ri[qo]},failedToParseNetworkResponse:{code:Lo,desc:ri[Lo]},unableToLoadTokenError:{code:Uo,desc:ri[Uo]},signingKeyNotFoundInStorage:{code:xo,desc:ri[xo]},authCodeRequired:{code:Ho,desc:ri[Ho]},authCodeOrNativeAccountRequired:{code:Do,desc:ri[Do]},spaCodeAndNativeAccountPresent:{code:Bo,desc:ri[Bo]},databaseUnavailable:{code:Fo,desc:ri[Fo]},unableToAcquireTokenFromNativePlatform:{code:zo,desc:ri[zo]},nativeHandshakeTimeout:{code:Ko,desc:ri[Ko]},nativeExtensionNotInstalled:{code:Go,desc:ri[Go]},nativeConnectionNotEstablished:{code:$o,desc:ri[$o]},uninitializedPublicClientApplication:{code:Qo,desc:ri[Qo]},nativePromptNotSupported:{code:jo,desc:ri[jo]},invalidBase64StringError:{code:Wo,desc:ri[Wo]},invalidPopTokenRequest:{code:Vo,desc:ri[Vo]}};class oi extends x{constructor(e,t){super(e,ri[e],t),Object.setPrototypeOf(this,oi.prototype),this.name="BrowserAuthError"}}function ii(e,t){return new oi(e,t)}const si="invalid_grant",ai="msal",ci="msal.js.browser",li="53ee284d-920a-4b59-9d30-a60315b26836",hi="ppnbnpeolgkicgegkbkbjmhlideopiji",di="MicrosoftEntra",ui="Handshake",gi={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},pi="signin",mi="signout",fi="request.origin",yi="urlHash",Ci="request.params",vi="code.verifier",wi="interaction.status",Ii="request.native",Ti="msal.account.keys",Ai="msal.token.keys",ki="msal.version",Si="wrapper.sku",bi="wrapper.version",Ei={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var Ri;t.InteractionType=void 0,(Ri=t.InteractionType||(t.InteractionType={})).Redirect="redirect",Ri.Popup="popup",Ri.Silent="silent",Ri.None="none";const _i={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},Pi={scopes:n},Mi="msal.db",Oi=`${Mi}.keys`,Ni={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},qi=[Ni.Default,Ni.Skip,Ni.RefreshTokenAndNetwork];function Li(e){return encodeURIComponent(xi(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function Ui(e){return Hi(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function xi(e){return Hi((new TextEncoder).encode(e))}function Hi(e){const t=Array.from(e,e=>String.fromCodePoint(e)).join("");return btoa(t)}function Di(e){return(new TextDecoder).decode(Bi(e))}function Bi(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw ii(Wo)}const r=atob(t);return Uint8Array.from(r,e=>e.codePointAt(0)||0)}const Fi="AES-GCM",zi="HKDF",Ki="SHA-256",Gi=new Uint8Array([1,0,1]),$i="0123456789abcdef",Qi=new Uint32Array(1),ji="raw",Wi="encrypt",Vi="decrypt",Ji={name:"RSASSA-PKCS1-v1_5",hash:Ki,modulusLength:2048,publicExponent:Gi};async function Yi(e,t,r){t?.addQueueMeasurement(sr.Sha256Digest,r);const n=(new TextEncoder).encode(e);return window.crypto.subtle.digest(Ki,n)}function Xi(e){return window.crypto.getRandomValues(e)}function Zi(){return window.crypto.getRandomValues(Qi),Qi[0]}function es(){const e=Date.now(),t=1024*Zi()+(1023&Zi()),r=new Uint8Array(16),n=Math.trunc(t/2**30),o=t&2**30-1,i=Zi();r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let s="";for(let e=0;e<r.length;e++)s+=$i.charAt(r[e]>>>4),s+=$i.charAt(15&r[e]),3!==e&&5!==e&&7!==e&&9!==e||(s+="-");return s}async function ts(e){return window.crypto.subtle.exportKey("jwk",e)}async function rs(){const e=await os(),t={alg:"dir",kty:"oct",k:Ui(new Uint8Array(e))};return xi(JSON.stringify(t))}async function ns(e,t){const r=t.split(".");if(5!==r.length)throw ii(Xo,"jwe_length");const n=await async function(e){const t=Di(e),r=Bi(JSON.parse(t).k);return window.crypto.subtle.importKey(ji,r,Fi,!1,[Vi])}(e).catch(()=>{throw ii(Xo,"import_key")});try{const e=(new TextEncoder).encode(r[0]),t=Bi(r[2]),o=Bi(r[3]),i=Bi(r[4]),s=8*i.byteLength,a=new Uint8Array(o.length+i.length);a.set(o),a.set(i,o.length);const c=await window.crypto.subtle.decrypt({name:Fi,iv:t,tagLength:s,additionalData:e},n,a);return(new TextDecoder).decode(c)}catch(e){throw ii(Xo,"decrypt")}}async function os(){const e=await window.crypto.subtle.generateKey({name:Fi,length:256},!0,[Wi,Vi]);return window.crypto.subtle.exportKey(ji,e)}async function is(e){return window.crypto.subtle.importKey(ji,e,zi,!1,["deriveKey"])}async function ss(e,t,r){return window.crypto.subtle.deriveKey({name:zi,salt:t,hash:Ki,info:(new TextEncoder).encode(r)},e,{name:Fi,length:256},!1,[Wi,Vi])}async function as(e,t,r){const n=(new TextEncoder).encode(t),o=window.crypto.getRandomValues(new Uint8Array(16)),i=await ss(e,o,r),s=await window.crypto.subtle.encrypt({name:Fi,iv:new Uint8Array(12)},i,n);return{data:Ui(new Uint8Array(s)),nonce:Ui(o)}}async function cs(e,t,r,n){const o=Bi(n),i=await ss(e,Bi(t),r),s=await window.crypto.subtle.decrypt({name:Fi,iv:new Uint8Array(12)},i,o);return(new TextDecoder).decode(s)}async function ls(e){const t=await Yi(e);return Ui(new Uint8Array(t))}const hs="storage_not_supported",ds="stubbed_public_client_application_called",us="in_mem_redirect_unavailable";var gs=Object.freeze({__proto__:null,inMemRedirectUnavailable:us,storageNotSupported:hs,stubbedPublicClientApplicationCalled:ds});const ps={[hs]:"Given storage configuration option was not supported.",[ds]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[us]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."},ms={storageNotSupportedError:{code:hs,desc:ps[hs]},stubPcaInstanceCalled:{code:ds,desc:ps[ds]},inMemRedirectUnavailable:{code:us,desc:ps[us]}};class fs extends x{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,fs.prototype)}}function ys(e){return new fs(e,ps[e])}function Cs(e){e.location.hash="","function"==typeof e.history.replaceState&&e.history.replaceState(null,"",`${e.location.origin}${e.location.pathname}${e.location.search}`)}function vs(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}function ws(){return window.parent!==window}function Is(){return"undefined"!=typeof window&&!!window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${ai}.`)}function Ts(){return"undefined"!=typeof window&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function As(){const e=new jt(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function ks(){if(jt.hashContainsKnownProperties(window.location.hash)&&ws())throw ii(wo)}function Ss(e){if(ws()&&!e)throw ii(vo)}function bs(){if(Is())throw ii(Io)}function Es(){if("undefined"==typeof window)throw ii(Po)}function Rs(e){if(!e)throw ii(Qo)}function _s(e){Es(),ks(),bs(),Rs(e)}function Ps(e,t){if(_s(e),Ss(t.system.allowRedirectInIframe),t.cache.cacheLocation===gi.MemoryStorage&&!t.cache.storeAuthStateInCookie)throw ys(us)}function Ms(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout(()=>{try{document.head.removeChild(t)}catch{}},1e4)}function Os(){return es()}var Ns=Object.freeze({__proto__:null,blockAPICallsBeforeInitialize:Rs,blockAcquireTokenInPopups:bs,blockNonBrowserEnvironment:Es,blockRedirectInIframe:Ss,blockReloadInHiddenIframes:ks,clearHash:Cs,createGuid:Os,getCurrentUri:Ts,getHomepage:As,invoke:on,invokeAsync:sn,isInIframe:ws,isInPopup:Is,preconnect:Ms,preflightCheck:_s,redirectPreflightCheck:Ps,replaceHash:vs});class qs{navigateInternal(e,t){return qs.defaultNavigateWindow(e,t)}navigateExternal(e,t){return qs.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise((e,r)=>{setTimeout(()=>{r(ii(Zo,"failed_to_redirect"))},t.timeout)})}}class Ls{async sendGetRequestAsync(e,t){let r,n={},o=0;const i=Us(t);try{r=await fetch(e,{method:"GET",headers:i})}catch(e){throw fn(ii(window.navigator.onLine?qo:Oo),void 0,void 0,e)}n=xs(r.headers);try{return o=r.status,{headers:n,body:await r.json(),status:o}}catch(e){throw fn(ii(Lo),o,n,e)}}async sendPostRequestAsync(e,t){const r=t&&t.body||"",n=Us(t);let o,i=0,s={};try{o=await fetch(e,{method:"POST",headers:n,body:r})}catch(e){throw fn(ii(window.navigator.onLine?No:Oo),void 0,void 0,e)}s=xs(o.headers);try{return i=o.status,{headers:s,body:await o.json(),status:i}}catch(e){throw fn(ii(Lo),i,s,e)}}}function Us(e){try{const t=new Headers;if(!e||!e.headers)return t;const r=e.headers;return Object.entries(r).forEach(([e,r])=>{t.append(e,r)}),t}catch(e){throw fn(ii(Jo),void 0,void 0,e)}}function xs(e){try{const t={};return e.forEach((e,r)=>{t[r]=e}),t}catch(e){throw ii(Yo)}}const Hs=1e4,Ds="@azure/msal-browser",Bs="4.14.0";class Fs{static loggerCallback(e,r){switch(e){case t.LogLevel.Error:return void console.error(r);case t.LogLevel.Info:return void console.info(r);case t.LogLevel.Verbose:return void console.debug(r);case t.LogLevel.Warning:return void console.warn(r);default:return void console.log(r)}}constructor(e){let n;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:n,system:o,telemetry:i},s){const a={clientId:r.EMPTY_STRING,authority:`${r.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:r.EMPTY_STRING,authorityMetadata:r.EMPTY_STRING,redirectUri:"undefined"!=typeof window?Ts():"",postLogoutRedirectUri:r.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:zt.AAD,OIDCOptions:{serverResponseType:y.FRAGMENT,defaultScopes:[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:De.None,tenant:r.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1,encodeExtraQueryParams:!1},c={cacheLocation:gi.SessionStorage,temporaryCacheLocation:gi.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!n||n.cacheLocation!==gi.LocalStorage),claimsBasedCachingEnabled:!1},l={loggerCallback:()=>{},logLevel:t.LogLevel.Info,piiLoggingEnabled:!1},h={...{...dr,loggerOptions:l,networkClient:s?new Ls:Gn,navigationClient:new qs,loadFrameTimeout:0,windowHashTimeout:o?.loadFrameTimeout||6e4,iframeHashTimeout:o?.loadFrameTimeout||Hs,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowPlatformBroker:!1,nativeBrokerHandshakeTimeout:o?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:30},...o,loggerOptions:o?.loggerOptions||l},d={application:{appName:r.EMPTY_STRING,appVersion:r.EMPTY_STRING},client:new hr};if(e?.protocolMode!==zt.OIDC&&e?.OIDCOptions&&new Ue(h.loggerOptions).warning(JSON.stringify(Nt(bt))),e?.protocolMode&&e.protocolMode===zt.OIDC&&h?.allowPlatformBroker)throw Nt(Et);return{auth:{...a,...e,OIDCOptions:{...a.OIDCOptions,...e?.OIDCOptions}},cache:{...c,...n},system:h,telemetry:{...d,...i}}}(e,this.browserEnvironment);try{n=window[gi.SessionStorage]}catch(e){}const o=n?.getItem("msal.browser.log.level"),i=n?.getItem("msal.browser.log.pii")?.toLowerCase(),s="true"===i||"false"!==i&&void 0,a={...this.config.system.loggerOptions},c=o&&Object.keys(t.LogLevel).includes(o)?t.LogLevel[o]:void 0;c&&(a.loggerCallback=Fs.loggerCallback,a.logLevel=c),void 0!==s&&(a.piiLoggingEnabled=s),this.logger=new Ue(a,Ds,Bs),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}const zs="NESTED_APP_AUTH_UNAVAILABLE";class Ks{static async initializeNestedAppAuthBridge(){if(void 0===window)throw new Error("window is undefined");if(void 0===window.nestedAppAuthBridge)throw new Error("window.nestedAppAuthBridge is undefined");try{window.nestedAppAuthBridge.addEventListener("message",e=>{const t="string"==typeof e?e:e.data,r=JSON.parse(t),n=Ks.bridgeRequests.find(e=>e.requestId===r.requestId);void 0!==n&&(Ks.bridgeRequests.splice(Ks.bridgeRequests.indexOf(n),1),r.success?n.resolve(r):n.reject(r.error))});const e=await new Promise((e,t)=>{const r=Ks.buildRequest("GetInitContext"),n={requestId:r.requestId,method:r.method,resolve:e,reject:t};Ks.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))});return Ks.validateBridgeResultOrThrow(e.initContext)}catch(e){throw window.console.log(e),e}}getTokenInteractive(e){return this.getToken("GetTokenPopup",e)}getTokenSilent(e){return this.getToken("GetToken",e)}async getToken(e,t){const r=await this.sendRequest(e,{tokenParams:t});return{token:Ks.validateBridgeResultOrThrow(r.token),account:Ks.validateBridgeResultOrThrow(r.account)}}getHostCapabilities(){return this.capabilities??null}getAccountContext(){return this.accountContext?this.accountContext:null}static buildRequest(e,t){return{messageType:"NestedAppAuthRequest",method:e,requestId:es(),sendTime:Date.now(),clientLibrary:ci,clientLibraryVersion:Bs,...t}}sendRequest(e,t){const r=Ks.buildRequest(e,t);return new Promise((e,t)=>{const n={requestId:r.requestId,method:r.method,resolve:e,reject:t};Ks.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))})}static validateBridgeResultOrThrow(e){if(void 0===e)throw{status:zs};return e}constructor(e,t,r,n){this.sdkName=e,this.sdkVersion=t,this.accountContext=r,this.capabilities=n}static async create(){const e=await Ks.initializeNestedAppAuthBridge();return new Ks(e.sdkName,e.sdkVersion,e.accountContext,e.capabilities)}}Ks.bridgeRequests=[];class Gs extends Fs{constructor(){super(...arguments),this.bridgeProxy=void 0,this.accountContext=null}getModuleName(){return Gs.MODULE_NAME}getId(){return Gs.ID}getBridgeProxy(){return this.bridgeProxy}async initialize(){try{if("undefined"!=typeof window){"function"==typeof window.__initializeNestedAppAuth&&await window.__initializeNestedAppAuth();const e=await Ks.create();this.accountContext=e.getAccountContext(),this.bridgeProxy=e,this.available=void 0!==e}}catch(e){this.logger.infoPii(`Could not initialize Nested App Auth bridge (${e})`)}return this.logger.info(`Nested App Auth Bridge available: ${this.available}`),this.available}}Gs.MODULE_NAME="",Gs.ID="NestedAppOperatingContext";class $s extends Fs{getModuleName(){return $s.MODULE_NAME}getId(){return $s.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}$s.MODULE_NAME="",$s.ID="StandardOperatingContext";class Qs{constructor(){this.dbName=Mi,this.version=1,this.tableName=Oi,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",e=>{e.target.result.createObjectStore(this.tableName)}),r.addEventListener("success",t=>{const r=t;this.db=r.target.result,this.dbOpen=!0,e()}),r.addEventListener("error",()=>t(ii(Fo)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(ii(Mo));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",e=>{const r=e;this.closeConnection(),t(r.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((r,n)=>{if(!this.db)return n(ii(Mo));const o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",()=>{this.closeConnection(),r()}),o.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(ii(Mo));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",()=>{this.closeConnection(),t()}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(ii(Mo));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",t=>{const r=t;this.closeConnection(),e(r.target.result)}),r.addEventListener("error",e=>{this.closeConnection(),t(e)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(ii(Mo));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",e=>{const r=e;this.closeConnection(),t(1===r.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const r=window.indexedDB.deleteDatabase(Mi),n=setTimeout(()=>t(!1),200);r.addEventListener("success",()=>(clearTimeout(n),e(!0))),r.addEventListener("blocked",()=>(clearTimeout(n),e(!0))),r.addEventListener("error",()=>(clearTimeout(n),t(!1)))})}}class js{constructor(){this.cache=new Map}async initialize(){}getItem(e){return this.cache.get(e)||null}getUserData(e){return this.getItem(e)}setItem(e,t){this.cache.set(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,r)=>{e.push(r)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class Ws{constructor(e){this.inMemoryCache=new js,this.indexedDBCache=new Qs,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof oi&&e.errorCode===Fo))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class Vs{constructor(e,t,r){this.logger=e,function(e){if(!window)throw ii(Po);if(!window.crypto)throw ii(io);if(!e&&!window.crypto.subtle)throw ii(io,"crypto_subtle_undefined")}(r??!1),this.cache=new Ws(this.logger),this.performanceClient=t}createNewGuid(){return es()}base64Encode(e){return xi(e)}base64Decode(e){return Di(e)}base64UrlEncode(e){return Li(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(sr.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await async function(e,t){return window.crypto.subtle.generateKey(Ji,e,t)}(Vs.EXTRACTABLE,Vs.POP_KEY_USAGES),n=await ts(r.publicKey),o=Js({e:n.e,kty:n.kty,n:n.n}),i=await this.hashString(o),s=await ts(r.privateKey),a=await async function(e){return window.crypto.subtle.importKey("jwk",e,Ji,!1,["sign"])}(s);return await this.cache.setItem(i,{privateKey:a,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),i}async removeTokenBindingKey(e){if(await this.cache.removeItem(e),await this.cache.containsKey(e))throw Ne(Ie)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){const o=this.performanceClient?.startMeasurement(sr.CryptoOptsSignJwt,n),i=await this.cache.getItem(t);if(!i)throw ii(xo);const s=await ts(i.publicKey),a=Js(s),c=Li(JSON.stringify({kid:t})),l=Li(Zn.getShrHeaderString({...r?.header,alg:s.alg,kid:c}));e.cnf={jwk:JSON.parse(a)};const h=`${l}.${Li(JSON.stringify(e))}`,d=(new TextEncoder).encode(h),u=await async function(e,t){return window.crypto.subtle.sign(Ji,e,t)}(i.privateKey,d),g=`${h}.${Ui(new Uint8Array(u))}`;return o&&o.end({success:!0}),g}async hashString(e){return ls(e)}}function Js(e){return JSON.stringify(e,Object.keys(e).sort())}Vs.POP_KEY_USAGES=["sign","verify"],Vs.EXTRACTABLE=!0;const Ys="None";class Xs{initialize(){return Promise.resolve()}getItem(e){const t=`${encodeURIComponent(e)}`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){const n=r[e],[o,...i]=decodeURIComponent(n).trim().split("="),s=i.join("=");if(o===t)return s}return""}getUserData(){throw Ne(Ee)}setItem(e,t,r,n=!0,o="Lax"){let i=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=${o};`;if(r){const e=function(e){const t=new Date;return new Date(t.getTime()+864e5*e).toUTCString()}(r);i+=`expires=${e};`}(n||o===Ys)&&(i+="Secure;"),document.cookie=i}async setUserData(){return Promise.reject(Ne(Ee))}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach(e=>{const r=decodeURIComponent(e).trim().split("=");t.push(r[0])}),t}containsKey(e){return this.getKeys().includes(e)}}function Zs(e){const t=e.getItem(Ti);return t?JSON.parse(t):[]}function ea(e,t){const r=t.getItem(`${Ai}.${e}`);if(r){const e=JSON.parse(r);if(e&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("accessToken")&&e.hasOwnProperty("refreshToken"))return e}return{idToken:[],accessToken:[],refreshToken:[]}}const ta="msal.cache.encryption";class ra{constructor(e,t,r){if(!window.localStorage)throw ys(hs);this.memoryStorage=new js,this.initialized=!1,this.clientId=e,this.logger=t,this.performanceClient=r,this.broadcast=new BroadcastChannel("msal.broadcast.cache")}async initialize(e){const t=new Xs,r=t.getItem(ta);let n={key:"",id:""};if(r)try{n=JSON.parse(r)}catch(e){}if(n.key&&n.id){const t=on(Bi,sr.Base64Decode,this.logger,this.performanceClient,e)(n.key);this.encryptionCookie={id:n.id,key:await sn(is,sr.GenerateHKDF,this.logger,this.performanceClient,e)(t)},await sn(this.importExistingCache.bind(this),sr.ImportExistingCache,this.logger,this.performanceClient,e)(e)}else{this.clear();const r=es(),n=await sn(os,sr.GenerateBaseKey,this.logger,this.performanceClient,e)(),o=on(Ui,sr.UrlEncodeArr,this.logger,this.performanceClient,e)(new Uint8Array(n));this.encryptionCookie={id:r,key:await sn(is,sr.GenerateHKDF,this.logger,this.performanceClient,e)(n)};const i={id:r,key:o};t.setItem(ta,JSON.stringify(i),0,!0,Ys)}this.broadcast.addEventListener("message",this.updateCache.bind(this)),this.initialized=!0}getItem(e){return window.localStorage.getItem(e)}getUserData(e){if(!this.initialized)throw ii(Qo);return this.memoryStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}async setUserData(e,t,r,n){if(!this.initialized||!this.encryptionCookie)throw ii(Qo);const{data:o,nonce:i}=await sn(as,sr.Encrypt,this.logger,this.performanceClient,r)(this.encryptionCookie.key,t,this.getContext(e)),s={id:this.encryptionCookie.id,nonce:i,data:o,lastUpdatedAt:n};this.memoryStorage.setItem(e,t),this.setItem(e,JSON.stringify(s)),this.broadcast.postMessage({key:e,value:t,context:this.getContext(e)})}removeItem(e){this.memoryStorage.containsKey(e)&&(this.memoryStorage.removeItem(e),this.broadcast.postMessage({key:e,value:null,context:this.getContext(e)})),window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}clear(){this.memoryStorage.clear(),Zs(this).forEach(e=>this.removeItem(e));const e=ea(this.clientId,this);e.idToken.forEach(e=>this.removeItem(e)),e.accessToken.forEach(e=>this.removeItem(e)),e.refreshToken.forEach(e=>this.removeItem(e)),this.getKeys().forEach(e=>{(e.startsWith(r.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.removeItem(e)})}async importExistingCache(e){if(!this.encryptionCookie)return;let t=Zs(this);t=await this.importArray(t,e),this.setItem(Ti,JSON.stringify(t));const r=ea(this.clientId,this);r.idToken=await this.importArray(r.idToken,e),r.accessToken=await this.importArray(r.accessToken,e),r.refreshToken=await this.importArray(r.refreshToken,e),this.setItem(`${Ai}.${this.clientId}`,JSON.stringify(r))}async getItemFromEncryptedCache(e,t){if(!this.encryptionCookie)return null;const r=this.getItem(e);if(!r)return null;let n;try{n=JSON.parse(r)}catch(e){return null}return n.id&&n.nonce&&n.data?n.id!==this.encryptionCookie.id?(this.performanceClient.incrementFields({encryptedCacheExpiredCount:1},t),null):sn(cs,sr.Decrypt,this.logger,this.performanceClient,t)(this.encryptionCookie.key,n.nonce,this.getContext(e),n.data):(this.performanceClient.incrementFields({unencryptedCacheCount:1},t),null)}async importArray(e,t){const r=[],n=[];return e.forEach(e=>{const o=this.getItemFromEncryptedCache(e,t).then(t=>{t?(this.memoryStorage.setItem(e,t),r.push(e)):this.removeItem(e)});n.push(o)}),await Promise.all(n),r}getContext(e){let t="";return e.includes(this.clientId)&&(t=this.clientId),t}updateCache(e){this.logger.trace("Updating internal cache from broadcast event");const t=this.performanceClient.startMeasurement(sr.LocalStorageUpdated);t.add({isBackground:!0});const{key:r,value:n,context:o}=e.data;return r?o&&o!==this.clientId?(this.logger.trace(`Ignoring broadcast event from clientId: ${o}`),void t.end({success:!1,errorCode:"contextMismatch"})):(n?(this.memoryStorage.setItem(r,n),this.logger.verbose("Updated item in internal cache")):(this.memoryStorage.removeItem(r),this.logger.verbose("Removed item from internal cache")),void t.end({success:!0})):(this.logger.error("Broadcast event missing key"),void t.end({success:!1,errorCode:"noKey"}))}}class na{constructor(){if(!window.sessionStorage)throw ys(hs)}async initialize(){}getItem(e){return window.sessionStorage.getItem(e)}getUserData(e){return this.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}const oa={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache",BROKER_CONNECTION_ESTABLISHED:"msal:brokerConnectionEstablished"};class ia extends or{constructor(e,t,r,n,o,i,s){super(e,r,n,o,s),this.cacheConfig=t,this.logger=n,this.internalStorage=new js,this.browserStorage=sa(e,t.cacheLocation,n,o),this.temporaryCacheStorage=sa(e,t.temporaryCacheLocation,n,o),this.cookieStorage=new Xs,this.eventHandler=i}async initialize(e){await this.browserStorage.initialize(e),this.trackVersionChanges(e)}trackVersionChanges(e){const t=this.browserStorage.getItem(ki);t&&(this.logger.info(`MSAL.js was last initialized by version: ${t}`),this.performanceClient.addFields({previousLibraryVersion:t},e)),t!==Bs&&this.setItem(ki,Bs,e)}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}setItem(e,t,r){let n=[];for(let o=0;o<=20;o++)try{this.browserStorage.setItem(e,t),o>0&&this.removeAccessTokenKeys(n.slice(0,o),r);break}catch(i){const s=nr(i);if(!(s.errorCode===Zt&&o<20))throw s;if(n.length||(n=e===`${Ai}.${this.clientId}`?JSON.parse(t).accessToken:this.getTokenKeys().accessToken),n.length<=o)throw s;this.removeAccessToken(n[o],r,!1)}}async setUserData(e,t,r,n){let o=[];for(let i=0;i<=20;i++)try{await sn(this.browserStorage.setUserData.bind(this.browserStorage),sr.SetUserData,this.logger,this.performanceClient)(e,t,r,n),i>0&&this.removeAccessTokenKeys(o.slice(0,i),r);break}catch(e){const t=nr(e);if(!(t.errorCode===Zt&&i<20))throw t;if(o.length||(o=this.getTokenKeys().accessToken),o.length<=i)throw t;this.removeAccessToken(o[i],r,!1)}}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const r=this.browserStorage.getUserData(e);if(!r)return this.removeAccountKeyFromMap(e,t),null;const n=this.validateAndParseJson(r);return n&&Kt.isAccountEntity(n)?or.toObject(new Kt,n):null}async setAccount(e,t){this.logger.trace("BrowserCacheManager.setAccount called");const r=e.generateAccountKey(),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.addAccountKeyToMap(r,t);this.cacheConfig.cacheLocation===gi.LocalStorage&&o&&this.eventHandler.emitEvent(oa.ACCOUNT_ADDED,void 0,e.getAccountInfo())}getAccountKeys(){return Zs(this.browserStorage)}addAccountKeyToMap(e,t){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const r=this.getAccountKeys();return-1===r.indexOf(e)?(r.push(e),this.setItem(Ti,JSON.stringify(r),t),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added"),!0):(this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map"),!1)}removeAccountKeyFromMap(e,t){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const r=this.getAccountKeys(),n=r.indexOf(e);if(n>-1){if(r.splice(n,1),0===r.length)return void this.removeItem(Ti);this.setItem(Ti,JSON.stringify(r),t),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")}else this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}removeAccount(e,t){super.removeAccount(e,t),this.removeAccountKeyFromMap(e,t)}removeAccountContext(e,t){super.removeAccountContext(e,t),this.cacheConfig.cacheLocation===gi.LocalStorage&&this.eventHandler.emitEvent(oa.ACCOUNT_REMOVED,void 0,e.getAccountInfo())}removeIdToken(e,t){super.removeIdToken(e,t);const r=this.getTokenKeys(),n=r.idToken.indexOf(e);n>-1&&(this.logger.info("idToken removed from tokenKeys map"),r.idToken.splice(n,1),this.setTokenKeys(r,t))}removeAccessToken(e,t,r=!0){super.removeAccessToken(e,t),r&&this.removeAccessTokenKeys([e],t)}removeAccessTokenKeys(e,t){this.logger.trace("removeAccessTokenKey called");const r=this.getTokenKeys();let n=0;if(e.forEach(e=>{const t=r.accessToken.indexOf(e);t>-1&&(r.accessToken.splice(t,1),n++)}),n>0)return this.logger.info(`removed ${n} accessToken keys from tokenKeys map`),void this.setTokenKeys(r,t)}removeRefreshToken(e,t){super.removeRefreshToken(e,t);const r=this.getTokenKeys(),n=r.refreshToken.indexOf(e);n>-1&&(this.logger.info("refreshToken removed from tokenKeys map"),r.refreshToken.splice(n,1),this.setTokenKeys(r,t))}getTokenKeys(){return ea(this.clientId,this.browserStorage)}setTokenKeys(e,t){0!==e.idToken.length||0!==e.accessToken.length||0!==e.refreshToken.length?this.setItem(`${Ai}.${this.clientId}`,JSON.stringify(e),t):this.removeItem(`${Ai}.${this.clientId}`)}getIdTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeIdToken(e,t),null;const n=this.validateAndParseJson(r);return n&&(o=n)&&Ye(o)&&o.hasOwnProperty("realm")&&o.credentialType===w.ID_TOKEN?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),null);var o}async setIdTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const r=je(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys();-1===o.idToken.indexOf(r)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),o.idToken.push(r),this.setTokenKeys(o,t))}getAccessTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeAccessTokenKeys([e],t),null;const n=this.validateAndParseJson(r);return n&&(o=n)&&Ye(o)&&o.hasOwnProperty("realm")&&o.hasOwnProperty("target")&&(o.credentialType===w.ACCESS_TOKEN||o.credentialType===w.ACCESS_TOKEN_WITH_AUTH_SCHEME)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),null);var o}async setAccessTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const r=je(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys(),i=o.accessToken.indexOf(r);-1!==i&&o.accessToken.splice(i,1),this.logger.trace(`access token ${-1===i?"added to":"updated in"} map`),o.accessToken.push(r),this.setTokenKeys(o,t)}getRefreshTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeRefreshToken(e,t),null;const n=this.validateAndParseJson(r);return n&&(o=n)&&Ye(o)&&o.credentialType===w.REFRESH_TOKEN?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),null);var o}async setRefreshTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const r=je(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys();-1===o.refreshToken.indexOf(r)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),o.refreshToken.push(r),this.setTokenKeys(o,t))}getAppMetadata(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&((n=r)&&0===e.indexOf(I)&&n.hasOwnProperty("clientId")&&n.hasOwnProperty("environment"))?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var n}setAppMetadata(e,t){this.logger.trace("BrowserCacheManager.setAppMetadata called");const r=function({environment:e,clientId:t}){return[I,e,t].join(v).toLowerCase()}(e);this.setItem(r,JSON.stringify(e),t)}getServerTelemetry(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){const r=0===e.indexOf(R.CACHE_KEY);let n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t,r){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t),r)}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){return!!t&&0===e.indexOf(A)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,r)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(e=>this.isAuthorityMetadata(e))}setWrapperMetadata(e,t){this.internalStorage.setItem(Si,e),this.internalStorage.setItem(bi,t)}getWrapperMetadata(){return[this.internalStorage.getItem(Si)||r.EMPTY_STRING,this.internalStorage.getItem(bi)||r.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(e){const t=this.generateCacheKey(h),r=this.browserStorage.getItem(t);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters found"),null;const n=this.validateAndParseJson(r);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId},e)):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e,t){const r=this.generateCacheKey(h);if(e){this.logger.verbose("setActiveAccount: Active account set");const n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId,lastUpdatedAt:ze().toString()};this.setItem(r,JSON.stringify(n),t)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(r);this.eventHandler.emitEvent(oa.ACTIVE_ACCOUNT_CHANGED)}getThrottlingCache(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){let r=!1;e&&(r=0===e.indexOf(P));let n=!0;return t&&(n=t.hasOwnProperty("throttleTime")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),r):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t,r){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t),r)}getTemporaryCache(e,t){const r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.cookieStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===gi.LocalStorage){const e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){const n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(n,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}clear(e){this.removeAllAccounts(e),this.removeAppMetadata(e),this.temporaryCacheStorage.getKeys().forEach(e=>{-1===e.indexOf(r.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{-1===e.indexOf(r.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.browserStorage.removeItem(e)}),this.internalStorage.clear()}clearTokensAndKeysWithClaims(e){this.performanceClient.addQueueMeasurement(sr.ClearTokensAndKeysWithClaims,e);const t=this.getTokenKeys();let r=0;t.accessToken.forEach(t=>{const n=this.getAccessTokenCredential(t,e);n?.requestedClaimsHash&&t.includes(n.requestedClaimsHash.toLowerCase())&&(this.removeAccessToken(t,e),r++)}),r>0&&this.logger.warning(`${r} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):qt.startsWith(e,r.CACHE_PREFIX)?e:`${r.CACHE_PREFIX}.${this.clientId}.${e}`}resetRequestCache(){this.logger.trace("BrowserCacheManager.resetRequestCache called"),this.removeTemporaryItem(this.generateCacheKey(Ci)),this.removeTemporaryItem(this.generateCacheKey(vi)),this.removeTemporaryItem(this.generateCacheKey(fi)),this.removeTemporaryItem(this.generateCacheKey(yi)),this.removeTemporaryItem(this.generateCacheKey(Ii)),this.setInteractionInProgress(!1)}cacheAuthorizeRequest(e,t){this.logger.trace("BrowserCacheManager.cacheAuthorizeRequest called");const r=xi(JSON.stringify(e));if(this.setTemporaryCache(Ci,r,!0),t){const e=xi(t);this.setTemporaryCache(vi,e,!0)}}getCachedRequest(){this.logger.trace("BrowserCacheManager.getCachedRequest called");const e=this.getTemporaryCache(Ci,!0);if(!e)throw ii(bo);const t=this.getTemporaryCache(vi,!0);let r,n="";try{r=JSON.parse(Di(e)),t&&(n=Di(t))}catch(t){throw this.logger.errorPii(`Attempted to parse: ${e}`),this.logger.error(`Parsing cached token request threw with error: ${t}`),ii(Eo)}return[r,n]}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(Ii,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;return this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress()?.clientId;return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${r.CACHE_PREFIX}.${wi}`,t=this.getTemporaryCache(e,!1);try{return t?JSON.parse(t):null}catch(t){return this.logger.error("Cannot parse interaction status. Removing temporary cache items and clearing url hash. Retrying interaction should fix the error"),this.removeTemporaryItem(e),this.resetRequestCache(),Cs(window),null}}setInteractionInProgress(e,t=pi){const n=`${r.CACHE_PREFIX}.${wi}`;if(e){if(this.getInteractionInProgress())throw ii(go);this.setTemporaryCache(n,JSON.stringify({clientId:this.clientId,type:t}),!1)}else e||this.getInteractionInProgress()?.clientId!==this.clientId||this.removeTemporaryItem(n)}async hydrateCache(e,t){const r=We(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let n;t.claims&&(n=await this.cryptoImpl.hashString(t.claims));const o={idToken:r,accessToken:Ve(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?Ke(e.expiresOn):0,e.extExpiresOn?Ke(e.extExpiresOn):0,Di,void 0,e.tokenType,void 0,t.sshKid,t.claims,n)};return this.saveCacheRecord(o,e.correlationId)}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof rr&&this.performanceClient&&t)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},t)}catch(e){}throw e}}}function sa(e,t,r,n){try{switch(t){case gi.LocalStorage:return new ra(e,r,n);case gi.SessionStorage:return new na}}catch(e){r.error(e)}return new js}const aa=(e,t,r,n)=>new ia(e,{cacheLocation:gi.MemoryStorage,temporaryCacheLocation:gi.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},qe,t,r,n);function ca(e,t,r,n,o){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(o||{},n):[]}function la(e,t,r,n){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;const o=r.getAccountInfoFilteredBy(e,n);return o?(t.verbose("getAccount: Account matching provided filter found, returning"),o):(t.verbose("getAccount: No matching account found, returning null"),null)}function ha(e,t,r,n){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const o=r.getAccountInfoFilteredBy({username:e},n);return o?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),o):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}function da(e,t,r,n){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const o=r.getAccountInfoFilteredBy({homeAccountId:e},n);return o?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),o):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function ua(e,t,r,n){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const o=r.getAccountInfoFilteredBy({localAccountId:e},n);return o?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),o):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function ga(e,t,r){t.setActiveAccount(e,r)}function pa(e,t){return e.getActiveAccount(t)}class ma{constructor(e){this.eventCallbacks=new Map,this.logger=e||new Ue({}),"undefined"!=typeof BroadcastChannel&&(this.broadcastChannel=new BroadcastChannel("msal.broadcast.event")),this.invokeCrossTabCallbacks=this.invokeCrossTabCallbacks.bind(this)}addEventCallback(e,t,r){if("undefined"!=typeof window){const n=r||Os();return this.eventCallbacks.has(n)?(this.logger.error(`Event callback with id: ${n} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(n,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${n}`),n)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,r,n){const o={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};switch(e){case oa.ACCOUNT_ADDED:case oa.ACCOUNT_REMOVED:case oa.ACTIVE_ACCOUNT_CHANGED:this.broadcastChannel?.postMessage(o);break;default:this.invokeCallbacks(o)}}invokeCallbacks(e){this.eventCallbacks.forEach(([t,r],n)=>{(0===r.length||r.includes(e.eventType))&&(this.logger.verbose(`Emitting event to callback ${n}: ${e.eventType}`),t.apply(null,[e]))})}invokeCrossTabCallbacks(e){const t=e.data;this.invokeCallbacks(t)}subscribeCrossTab(){this.broadcastChannel?.addEventListener("message",this.invokeCrossTabCallbacks)}unsubscribeCrossTab(){this.broadcastChannel?.removeEventListener("message",this.invokeCrossTabCallbacks)}}class fa{constructor(e,t,r,n,o,i,s,a,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.platformAuthProvider=a,this.correlationId=c||es(),this.logger=n.clone(ci,Bs,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e,t){if(t){Kt.accountInfoIsEqual(t,this.browserStorage.getActiveAccount(e),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null,e));try{this.browserStorage.removeAccount(Kt.generateAccountCacheKey(t),e),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),this.browserStorage.clear(e),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return jt.getAbsoluteUrl(t,Ts())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const r={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new jn(r,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(sr.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=r?.length?"true"===r:this.config.auth.instanceAware,s=t&&i?this.config.auth.authority.replace(jt.getDomainFromUrl(o),t.environment):o,a=cn.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await sn(dn,sr.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(a,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw Nt(Rt);return c}}async function ya(e,t,r,n){r.addQueueMeasurement(sr.InitializeBaseRequest,e.correlationId);const o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:o,scopes:i};if(s.authenticationScheme){if(s.authenticationScheme===_.SSH){if(!e.sshJwk)throw Nt(Tt);if(!e.sshKid)throw Nt(At)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=_.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!qt.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await ls(e.claims)),s}async function Ca(e,t,r,n,o){n.addQueueMeasurement(sr.InitializeSilentRequest,e.correlationId);const i=await sn(ya,sr.InitializeBaseRequest,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}class va extends fa{initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||es(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=jt.getAbsoluteUrl(e.postLogoutRedirectUri,Ts())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=jt.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,Ts())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=jt.getAbsoluteUrl(Ts(),Ts())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(sr.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await sn(this.getClientConfiguration.bind(this),sr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new Fn(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}=e;this.performanceClient.addQueueMeasurement(sr.StandardInteractionClientGetClientConfiguration,this.correlationId);const a=await sn(this.getDiscoveredAuthority.bind(this),sr.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:a,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:ci,version:Bs,cpu:r.EMPTY_STRING,os:r.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(sr.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},i=qn.setRequestState(this.browserCrypto,e&&e.state||r.EMPTY_STRING,o),s={...await sn(ya,sr.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:i,nonce:e.nonce||es(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(e.loginHint||e.sid)return s;const a=e.account||this.browserStorage.getActiveAccount(this.correlationId);return a&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${a.homeAccountId}`,this.correlationId),s.account=a),s}}function wa(e,t,r){const n=$t(e);if(!n)throw Gt(e)?(r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),ii(lo)):(r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),ii(ao));return n}class Ia{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(sr.HandleCodeResponse,t.correlationId);try{r=function(e,t){if(Qn(e,t),!e.code)throw Ne(we);return e}(e,t.state)}catch(e){throw e instanceof un&&e.subError===fo?ii(fo):e}return sn(this.handleCodeResponseFromServer.bind(this),sr.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(sr.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await sn(this.authModule.updateAuthority.bind(this.authModule),sr.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await sn(this.authModule.acquireToken.bind(this.authModule),sr.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:wr}:e.loginHint?{credential:e.loginHint,type:Ir}:null}}const Ta="user_switch",Aa={[Ta]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class ka extends x{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,ka.prototype),this.name="NativeAuthError",this.ext=r}}function Sa(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode}function ba(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return Nn(vn);case"USER_INTERACTION_REQUIRED":return new Mn(e,t);case"USER_CANCEL":return ii(fo);case"NO_NETWORK":return ii(Oo);case"UX_NOT_ALLOWED":return Nn(In)}return new ka(e,Aa[e]||t,r)}class Ea extends va{async acquireToken(e){this.performanceClient.addQueueMeasurement(sr.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(Ei.acquireTokenSilent_silentFlow),r=await sn(this.getClientConfiguration.bind(this),sr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),n=new Kn(r,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await sn(n.acquireCachedToken.bind(n),sr.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof oi&&e.errorCode===xo&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t.correlationId,t?.account)}}class Ra extends fa{constructor(e,t,r,n,o,i,s,a,c,l,h,d){super(e,t,r,n,o,i,a,c,d),this.apiId=s,this.accountId=l,this.platformAuthProvider=c,this.nativeStorageManager=h,this.silentCacheClient=new Ea(e,this.nativeStorageManager,r,n,o,i,a,c,d);const u=this.platformAuthProvider.getExtensionName();this.skus=jn.makeExtraSkuString({libraryName:ci,libraryVersion:Bs,extensionName:u,extensionVersion:this.platformAuthProvider.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[Er]:this.skus}}async acquireToken(e,t){this.performanceClient.addQueueMeasurement(sr.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const r=this.performanceClient.startMeasurement(sr.NativeInteractionClientAcquireToken,e.correlationId),n=ze(),o=this.initializeServerTelemetryManager(this.apiId);try{const i=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,i);return r.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){if(t===Ni.AccessToken)throw this.logger.info("MSAL internal Cache does not contain tokens, return error as per cache policy"),e;this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const s=await this.platformAuthProvider.sendMessage(i);return await this.handleNativeResponse(s,i,n).then(e=>(r.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),o.clearNativeBrokerErrorCode(),e)).catch(e=>{throw r.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e})}catch(e){throw e instanceof ka&&o.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:Lt.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),Ne(ue);const r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e},this.correlationId);if(!r)throw Ne(ue);try{const e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:o}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...r}=e;delete r.onRedirectNavigate;const n=await this.initializeNativeRequest(r);try{await this.platformAuthProvider.sendMessage(n)}catch(e){if(e instanceof ka&&(this.initializeServerTelemetryManager(this.apiId).setNativeBrokerErrorCode(e.errorCode),Sa(e)))throw e}this.browserStorage.setTemporaryCache(Ii,JSON.stringify(n),!0);const o={apiId:Ei.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(i,o)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Ii));const i=ze();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.platformAuthProvider.sendMessage(o),t=await this.handleNativeResponse(e,o,i);return this.initializeServerTelemetryManager(this.apiId).clearNativeBrokerErrorCode(),t}catch(e){throw e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const n=Be(e.id_token,Di),o=this.createHomeAccountIdentifier(e,n),i=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId},this.correlationId)?.homeAccountId;if(t.extraParameters?.child_client_id&&e.account.id!==t.accountId)this.logger.info("handleNativeServerResponse: Double broker flow detected, ignoring accountId mismatch");else if(o!==i&&e.account.id!==t.accountId)throw ba(Ta);const s=await this.getDiscoveredAuthority({requestAuthority:t.authority}),a=Hn(this.browserStorage,s,o,Di,this.correlationId,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger);e.expires_in=Number(e.expires_in);const c=await this.generateAuthenticationResult(e,t,n,a,s.canonicalAuthority,r);return await this.cacheAccount(a,this.correlationId),await this.cacheNativeTokens(e,t,o,n,e.access_token,c.tenantId,r),c}createHomeAccountIdentifier(e,t){return Kt.generateHomeAccountId(e.client_info||r.EMPTY_STRING,0,this.logger,this.browserCrypto,t)}generateScopes(e,t){return t?Lt.fromString(t):Lt.fromString(e)}async generatePopAccessToken(e,t){if(t.tokenType===_.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const r=new Ln(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw Ne(Ae);return r.signPopToken(e.access_token,t.keyId,n)}return e.access_token}async generateAuthenticationResult(e,t,n,o,i,s){const a=this.addTelemetryFromNativeResponse(e.properties.MATS),c=this.generateScopes(t.scope,e.scope),l=e.account.properties||{},h=l.UID||n.oid||n.sub||r.EMPTY_STRING,d=l.TenantId||n.tid||r.EMPTY_STRING,u=Bt(o.getAccountInfo(),void 0,n,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);const g=await this.generatePopAccessToken(e,t),p=t.tokenType===_.POP?_.POP:_.BEARER;return{authority:i,uniqueId:h,tenantId:d,scopes:c.asArray(),account:u,idToken:e.id_token,idTokenClaims:n,accessToken:g,fromCache:!!a&&this.isResponseFromCache(a),expiresOn:Ge(s+e.expires_in),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}async cacheAccount(e,t){await this.browserStorage.setAccount(e,this.correlationId),this.browserStorage.removeAccountContext(e,t)}cacheNativeTokens(e,t,n,o,i,s,a){const c=We(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=a+(t.tokenType===_.POP?r.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0),h=this.generateScopes(e.scope,t.scope),d={idToken:c,accessToken:Ve(n,t.authority,i,t.clientId,o.tid||s,h.printScopes(),l,0,Di,void 0,t.tokenType,void 0,t.keyId)};return this.nativeStorageManager.saveCacheRecord(d,this.correlationId,t.storeInCache)}getExpiresInValue(e,t){return e===_.POP?r.SHR_NONCE_VALIDITY:("string"==typeof t?parseInt(t,10):t)||0}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.platformAuthProvider.getExtensionId(),extensionVersion:this.platformAuthProvider.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}getMATSFromResponse(e){if(e)try{return JSON.parse(e)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=await this.getCanonicalAuthority(e),{scopes:r,...o}=e,i=new Lt(r||[]);i.appendScopes(n);const s={...o,accountId:this.accountId,clientId:this.config.auth.clientId,authority:t.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:this.getPrompt(e.prompt),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw ii(Vo);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry="MATS",e.authenticationScheme===_.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},r=new Ln(this.browserCrypto);let n;if(s.keyId)n=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{const o=await sn(r.generateCnf.bind(r),sr.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(t,this.logger);n=o.reqCnfString,s.keyId=o.kid,s.signPopToken=!0}s.reqCnf=n}return this.addRequestSKUs(s),s}async getCanonicalAuthority(e){const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const r=new jt(t);return r.validateAsUri(),r}getPrompt(e){switch(this.apiId){case Ei.ssoSilent:case Ei.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),m.NONE}if(e)switch(e){case m.NONE:case m.CONSENT:case m.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e} is not compatible with native flow`),ii(jo)}else this.logger.trace("initializeNativeRequest: prompt was not provided")}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(Rr)&&e.extraParameters.hasOwnProperty(_r)&&e.extraParameters.hasOwnProperty(Tr);if(!e.embeddedClientId&&!t)return;let r="";const n=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,r=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[_r],r=e.extraParameters[Tr]),e.extraParameters={child_client_id:r,child_redirect_uri:n},this.performanceClient?.addFields({embeddedClientId:r,embeddedRedirectUri:n},e.correlationId)}}async function _a(e,t,r,n,o){const i=function(e,t,r,n){const o=t.correlationId,i=new Map;if(qr(i,t.embeddedClientId||t.extraQueryParameters?.[Tr]||e.clientId),Nr(i,[...t.scopes||[],...t.extraScopesToConsent||[]],!0,e.authority.options.OIDCOptions?.defaultScopes),Lr(i,t.redirectUri),Fr(i,o),function(e,t){e.set("response_mode",t||"query")}(i,t.responseMode),Vr(i),t.prompt&&(function(e,t){e.set("prompt",t)}(i,t.prompt),n?.addFields({prompt:t.prompt},o)),t.domainHint&&(function(e,t){e.set("domain_hint",t)}(i,t.domainHint),n?.addFields({domainHintFromRequest:!0},o)),t.prompt!==m.SELECT_ACCOUNT)if(t.sid&&t.prompt===m.NONE)r.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),Dr(i,t.sid),n?.addFields({sidFromRequest:!0},o);else if(t.account){const e=(s=t.account,s.idTokenClaims?.sid||null);let a=function(e){return e.idTokenClaims?.login_hint||null}(t.account);if(a&&t.domainHint&&(r.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),a=null),a){r.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),Ur(i,a),n?.addFields({loginHintFromClaim:!0},o);try{Hr(i,xt(t.account.homeAccountId))}catch(e){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e&&t.prompt===m.NONE){r.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),Dr(i,e),n?.addFields({sidFromClaim:!0},o);try{Hr(i,xt(t.account.homeAccountId))}catch(e){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(t.loginHint)r.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),Ur(i,t.loginHint),xr(i,t.loginHint),n?.addFields({loginHintFromRequest:!0},o);else if(t.account.username){r.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),Ur(i,t.account.username),n?.addFields({loginHintFromUpn:!0},o);try{Hr(i,xt(t.account.homeAccountId))}catch(e){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else t.loginHint&&(r.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),Ur(i,t.loginHint),xr(i,t.loginHint),n?.addFields({loginHintFromRequest:!0},o));else r.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");var s;return t.nonce&&function(e,t){e.set("nonce",t)}(i,t.nonce),t.state&&Gr(i,t.state),(t.claims||e.clientCapabilities&&e.clientCapabilities.length>0)&&Br(i,t.claims,e.clientCapabilities),t.embeddedClientId&&nn(i,e.clientId,e.redirectUri),!e.instanceAware||t.extraQueryParameters&&Object.keys(t.extraQueryParameters).includes(Pr)||Jr(i),i}({...e.auth,authority:t},r,n,o);if(zr(i,{sku:ci,version:Bs,os:"",cpu:""}),e.auth.protocolMode!==zt.OIDC&&Kr(i,e.telemetry.application),r.platformBroker&&(function(e){e.set("nativebroker","1")}(i),r.authenticationScheme===_.POP)){const e=new Vs(n,o),t=new Ln(e);let s;s=r.popKid?e.encodeKid(r.popKid):(await sn(t.generateCnf.bind(t),sr.PopTokenGenerateCnf,n,o,r.correlationId)(r,n)).reqCnfString,Zr(i,s)}return Mr(i,r.correlationId,o),i}async function Pa(e,t,n,o,i){if(!n.codeChallenge)throw Nt(Ct);const s=await sn(_a,sr.GetStandardParams,o,i,n.correlationId)(e,t,n,o,i);return Or(s,"code"),function(e,t,r){if(!t||!r)throw Nt(Ct);e.set("code_challenge",t),e.set("code_challenge_method",r)}(s,n.codeChallenge,r.S256_CODE_CHALLENGE_METHOD),Yr(s,n.extraQueryParameters||{}),$n(t,s,e.auth.encodeExtraQueryParams,n.extraQueryParameters)}async function Ma(e,t,r,n,o,i){if(!n.earJwk)throw ii(no);const s=await _a(t,r,n,o,i);Or(s,"id_token token refresh_token"),function(e,t){e.set("ear_jwk",encodeURIComponent(t)),e.set("ear_jwe_crypto","eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0")}(s,n.earJwk);const a=new Map;return Yr(a,n.extraQueryParameters||{}),function(e,t,r){const n=e.createElement("form");return n.method="post",n.action=t,r.forEach((t,r)=>{const o=e.createElement("input");o.hidden=!0,o.name=r,o.value=t,n.appendChild(o)}),e.body.appendChild(n),n}(e,$n(r,a,t.auth.encodeExtraQueryParams,n.extraQueryParameters),s)}async function Oa(e,t,r,n,o,i,s,a,c,l){if(a.verbose("Account id found, calling WAM for token"),!l)throw ii($o);const h=new Vs(a,c),d=new Ra(n,o,h,a,s,n.system.navigationClient,r,c,l,t,i,e.correlationId),{userRequestState:u}=qn.parseRequestState(h,e.state);return sn(d.acquireToken.bind(d),sr.NativeInteractionClientAcquireToken,a,c,e.correlationId)({...e,state:u,prompt:void 0})}async function Na(e,t,r,n,o,i,s,a,c,l,h,d){if(pn.removeThrottle(s,o.auth.clientId,e),t.accountId)return sn(Oa,sr.HandleResponsePlatformBroker,l,h,e.correlationId)(e,t.accountId,n,o,s,a,c,l,h,d);const u={...e,code:t.code||"",codeVerifier:r},g=new Ia(i,s,u,l,h);return await sn(g.handleCodeResponse.bind(g),sr.HandleCodeResponse,l,h,e.correlationId)(t,e)}async function qa(e,t,r,n,o,i,s,a,c,l,h){if(pn.removeThrottle(i,n.auth.clientId,e),Qn(t,e.state),!t.ear_jwe)throw ii(oo);if(!e.earJwk)throw ii(no);const d=JSON.parse(await sn(ns,sr.DecryptEarResponse,c,l,e.correlationId)(e.earJwk,t.ear_jwe));if(d.accountId)return sn(Oa,sr.HandleResponsePlatformBroker,c,l,e.correlationId)(e,d.accountId,r,n,i,s,a,c,l,h);const u=new xn(n.auth.clientId,i,new Vs(c,l),c,null,null,l);u.validateTokenResponse(d);const g={code:"",state:e.state,nonce:e.nonce,client_info:d.client_info,cloud_graph_host_name:d.cloud_graph_host_name,cloud_instance_host_name:d.cloud_instance_host_name,cloud_instance_name:d.cloud_instance_name,msgraph_host:d.msgraph_host};return await sn(u.handleServerTokenResponse.bind(u),sr.HandleServerTokenResponse,c,l,e.correlationId)(d,o,ze(),e,g,void 0,void 0,void 0,void 0)}async function La(e,t,r){e.addQueueMeasurement(sr.GeneratePkceCodes,r);const n=on(Ua,sr.GenerateCodeVerifier,t,e,r)(e,t,r);return{verifier:n,challenge:await sn(xa,sr.GenerateCodeChallengeFromVerifier,t,e,r)(n,e,t,r)}}function Ua(e,t,r){try{const n=new Uint8Array(32);return on(Xi,sr.GetRandomValues,t,e,r)(n),Ui(n)}catch(e){throw ii(ro)}}async function xa(e,t,r,n){t.addQueueMeasurement(sr.GenerateCodeChallengeFromVerifier,n);try{const o=await sn(Yi,sr.Sha256Digest,r,t,n)(e,t,n);return Ui(new Uint8Array(o))}catch(e){throw ii(ro)}}class Ha{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(sr.NativeMessageHandlerHandshake),this.platformAuthType="PlatformAuthExtensionHandler"}async sendMessage(e){this.logger.trace(this.platformAuthType+" - sendMessage called.");const t={method:"GetToken",request:e},r={channel:li,extensionId:this.extensionId,responseId:es(),body:t};this.logger.trace(this.platformAuthType+" - Sending request to browser extension"),this.logger.tracePii(this.platformAuthType+` - Sending request to browser extension: ${JSON.stringify(r)}`),this.messageChannel.port1.postMessage(r);const n=await new Promise((e,t)=>{this.resolvers.set(r.responseId,{resolve:e,reject:t})});return this.validatePlatformBrokerResponse(n)}static async createProvider(e,t,r){e.trace("PlatformAuthExtensionHandler - createProvider called.");try{const n=new Ha(e,t,r,hi);return await n.sendHandshakeRequest(),n}catch(n){const o=new Ha(e,t,r);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace(this.platformAuthType+" - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:li,extensionId:this.extensionId,responseId:es(),body:{method:ui}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(ii(Ko)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace(this.platformAuthType+" - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===li&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===ui){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(this.platformAuthType+`.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(ii(Go))}}onChannelMessage(e){this.logger.trace(this.platformAuthType+" - onChannelMessage called.");const t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if("Response"===e){if(!r)return;const e=t.body.response;if(this.logger.trace(this.platformAuthType+" - Received response from browser extension"),this.logger.tracePii(this.platformAuthType+` - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(ba(e.code,e.description,e.ext));else{if(!e.result)throw H(O,"Event does not contain result.");e.result.code&&e.result.description?r.reject(ba(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result)}this.resolvers.delete(t.responseId)}else if("HandshakeResponse"===e){if(!n)return void this.logger.trace(this.platformAuthType+`.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(this.platformAuthType+` - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw H(O,"Response missing expected properties.")}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}getExtensionName(){return this.getExtensionId()===hi?"chrome":this.getExtensionId()?.length?"unknown":void 0}}class Da{constructor(e,t,r){this.logger=e,this.performanceClient=t,this.correlationId=r,this.platformAuthType="PlatformAuthDOMHandler"}static async createProvider(e,t,r){if(e.trace("PlatformAuthDOMHandler: createProvider called"),window.navigator?.platformAuthentication){const n=await window.navigator.platformAuthentication.getSupportedContracts(di);if(n?.includes("get-token-and-sign-out"))return e.trace("Platform auth api available in DOM"),new Da(e,t,r)}}getExtensionId(){return di}getExtensionVersion(){return""}getExtensionName(){return"DOM API"}async sendMessage(e){this.logger.trace(this.platformAuthType+" - Sending request to browser DOM API");try{const t=this.initializePlatformDOMRequest(e),r=await window.navigator.platformAuthentication.executeGetToken(t);return this.validatePlatformBrokerResponse(r)}catch(e){throw this.logger.error(this.platformAuthType+" - executeGetToken DOM API error"),e}}initializePlatformDOMRequest(e){this.logger.trace(this.platformAuthType+" - initializeNativeDOMRequest called");const{accountId:t,clientId:r,authority:n,scope:o,redirectUri:i,correlationId:s,state:a,storeInCache:c,embeddedClientId:l,extraParameters:h,...d}=e,u=this.getDOMExtraParams(d);return{accountId:t,brokerId:this.getExtensionId(),authority:n,clientId:r,correlationId:s||this.correlationId,extraParameters:{...h,...u},isSecurityTokenService:!1,redirectUri:i,scope:o,state:a,storeInCache:c,embeddedClientId:l}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("isSuccess")){if(e.hasOwnProperty("accessToken")&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("clientInfo")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scopes")&&e.hasOwnProperty("expiresIn"))return this.logger.trace(this.platformAuthType+" - platform broker returned successful and valid response"),this.convertToPlatformBrokerResponse(e);if(e.hasOwnProperty("error")){const t=e;if(!1===t.isSuccess&&t.error&&t.error.code)throw this.logger.trace(this.platformAuthType+" - platform broker returned error response"),ba(t.error.code,t.error.description,{error:parseInt(t.error.errorCode),protocol_error:t.error.protocolError,status:t.error.status,properties:t.error.properties})}}throw H(O,"Response missing expected properties.")}convertToPlatformBrokerResponse(e){return this.logger.trace(this.platformAuthType+" - convertToNativeResponse called"),{access_token:e.accessToken,id_token:e.idToken,client_info:e.clientInfo,account:e.account,expires_in:e.expiresIn,scope:e.scopes,state:e.state||"",properties:e.properties||{},extendedLifetimeToken:e.extendedLifetimeToken??!1,shr:e.proofOfPossessionPayload}}getDOMExtraParams(e){return{...Object.entries(e).reduce((e,[t,r])=>(e[t]=String(r),e),{})}}}async function Ba(e,t,r,n){e.trace("getPlatformAuthProvider called",r);const o=function(){let e;try{return e=window[gi.SessionStorage],"true"===e?.getItem("msal.browser.platform.auth.dom")}catch(e){return!1}}();let i;e.trace("Has client allowed platform auth via DOM API: "+o);try{o&&(i=await Da.createProvider(e,t,r)),i||(e.trace("Platform auth via DOM API not available, checking for extension"),i=await Ha.createProvider(e,n||2e3,t))}catch(t){e.trace("Platform auth not available",t)}return i}function Fa(e,t,r,n){if(t.trace("isPlatformAuthAllowed called"),!e.system.allowPlatformBroker)return t.trace("isPlatformAuthAllowed: allowPlatformBroker is not enabled, returning false"),!1;if(!r)return t.trace("isPlatformAuthAllowed: Platform auth provider is not initialized, returning false"),!1;if(n)switch(n){case _.BEARER:case _.POP:return t.trace("isPlatformAuthAllowed: authenticationScheme is supported, returning true"),!0;default:return t.trace("isPlatformAuthAllowed: authenticationScheme is not supported, returning false"),!1}return!0}class za extends va{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=a,this.eventHandler=o}acquireToken(e,t){try{const r={popupName:this.generatePopupName(e.scopes||n,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.performanceClient.addFields({isAsyncPopup:this.config.system.asyncPopups},this.correlationId),this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,r,t)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),r.popup=this.openSizedPopup("about:blank",r),this.acquireTokenPopupAsync(e,r,t))}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o))}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,r,n){this.logger.verbose("acquireTokenPopupAsync called");const o=await sn(this.initializeAuthorizationRequest.bind(this),sr.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,t.InteractionType.Popup);r.popup&&Ms(o.authority);const i=Fa(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);return o.platformBroker=i,this.config.auth.protocolMode===zt.EAR?this.executeEarFlow(o,r):this.executeCodeFlow(o,r,n)}async executeCodeFlow(e,r,n){const o=e.correlationId,i=this.initializeServerTelemetryManager(Ei.acquireTokenPopup),s=n||await sn(La,sr.GeneratePkceCodes,this.logger,this.performanceClient,o)(this.performanceClient,this.logger,o),a={...e,codeChallenge:s.challenge};try{const n=await sn(this.createAuthCodeClient.bind(this),sr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,o)({serverTelemetryManager:i,requestAuthority:a.authority,requestAzureCloudOptions:a.azureCloudOptions,requestExtraQueryParameters:a.extraQueryParameters,account:a.account}),c=await sn(Pa,sr.GetAuthCodeUrl,this.logger,this.performanceClient,o)(this.config,n.authority,a,this.logger,this.performanceClient),l=this.initiateAuthRequest(c,r);this.eventHandler.emitEvent(oa.POPUP_OPENED,t.InteractionType.Popup,{popupWindow:l},null);const h=await this.monitorPopupForHash(l,r.popupWindowParent),d=on(wa,sr.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(h,this.config.auth.OIDCOptions.serverResponseType,this.logger);return await sn(Na,sr.HandleResponseCode,this.logger,this.performanceClient,o)(e,d,s.verifier,Ei.acquireTokenPopup,this.config,n,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}catch(e){throw r.popup?.close(),e instanceof x&&(e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e)),e}}async executeEarFlow(e,t){const r=e.correlationId,n=await sn(this.getDiscoveredAuthority.bind(this),sr.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,r)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),o=await sn(rs,sr.GenerateEarKey,this.logger,this.performanceClient,r)(),i={...e,earJwk:o},s=t.popup||this.openPopup("about:blank",t);(await Ma(s.document,this.config,n,i,this.logger,this.performanceClient)).submit();const a=await sn(this.monitorPopupForHash.bind(this),sr.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(s,t.popupWindowParent),c=on(wa,sr.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(a,this.config.auth.OIDCOptions.serverResponseType,this.logger);return sn(qa,sr.HandleResponseEar,this.logger,this.performanceClient,r)(i,c,Ei.acquireTokenPopup,this.config,n,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async logoutPopupAsync(e,r,n,o){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(oa.LOGOUT_START,t.InteractionType.Popup,e);const i=this.initializeServerTelemetryManager(Ei.logoutPopup);try{await this.clearCacheOnLogout(this.correlationId,e.account);const s=await sn(this.createAuthCodeClient.bind(this),sr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:i,requestAuthority:n,account:e.account||void 0});try{s.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&s.authority.protocolMode===zt.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId,this.correlationId),this.eventHandler.emitEvent(oa.LOGOUT_SUCCESS,t.InteractionType.Popup,e),o){const e={apiId:Ei.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=jt.getAbsoluteUrl(o,Ts());await this.navigationClient.navigateInternal(t,e)}return void r.popup?.close()}}const a=s.getLogoutUri(e);this.eventHandler.emitEvent(oa.LOGOUT_SUCCESS,t.InteractionType.Popup,e);const c=this.openPopup(a,r);if(this.eventHandler.emitEvent(oa.POPUP_OPENED,t.InteractionType.Popup,{popupWindow:c},null),await this.monitorPopupForHash(c,r.popupWindowParent).catch(()=>{}),o){const e={apiId:Ei.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=jt.getAbsoluteUrl(o,Ts());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw r.popup?.close(),e instanceof x&&(e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e)),this.eventHandler.emitEvent(oa.LOGOUT_FAILURE,t.InteractionType.Popup,null,e),this.eventHandler.emitEvent(oa.LOGOUT_END,t.InteractionType.Popup),e}this.eventHandler.emitEvent(oa.LOGOUT_END,t.InteractionType.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),ii(so)}monitorPopupForHash(e,t){return new Promise((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const n=setInterval(()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),void r(ii(fo));let o="";try{o=e.location.href}catch(e){}if(!o||"about:blank"===o)return;clearInterval(n);let i="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(i=s===y.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw ii(mo);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),ii(po)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){const o=n.screenLeft?n.screenLeft:n.screenX,i=n.screenTop?n.screenTop:n.screenY,s=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=r.popupSize?.width,l=r.popupSize?.height,h=r.popupPosition?.top,d=r.popupPosition?.left;return(!c||c<0||c>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=483),(!l||l<0||l>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=600),(!h||h<0||h>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),h=Math.max(0,a/2-300+i)),(!d||d<0||d>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),d=Math.max(0,s/2-241.5+o)),n.open(e,t,`width=${c}, height=${l}, top=${h}, left=${d}, scrollbars=yes`)}unloadWindow(e){this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow)}generatePopupName(e,t){return`${ai}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${ai}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class Ka extends va{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.nativeStorage=a}async acquireToken(e){const r=await sn(this.initializeAuthorizationRequest.bind(this),sr.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,t.InteractionType.Redirect);r.platformBroker=Fa(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);const n=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.resetRequestCache(),this.eventHandler.emitEvent(oa.RESTORE_FROM_BFCACHE,t.InteractionType.Redirect))},o=this.getRedirectStartPage(e.redirectStartPage);this.logger.verbosePii(`Redirect start page: ${o}`),this.browserStorage.setTemporaryCache(fi,o,!0),window.addEventListener("pageshow",n);try{this.config.auth.protocolMode===zt.EAR?await this.executeEarFlow(r):await this.executeCodeFlow(r,e.onRedirectNavigate)}catch(e){throw e instanceof x&&e.setCorrelationId(this.correlationId),window.removeEventListener("pageshow",n),e}}async executeCodeFlow(e,t){const r=e.correlationId,n=this.initializeServerTelemetryManager(Ei.acquireTokenRedirect),o=await sn(La,sr.GeneratePkceCodes,this.logger,this.performanceClient,r)(this.performanceClient,this.logger,r),i={...e,codeChallenge:o.challenge};this.browserStorage.cacheAuthorizeRequest(i,o.verifier);try{const r=await sn(this.createAuthCodeClient.bind(this),sr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:i.authority,requestAzureCloudOptions:i.azureCloudOptions,requestExtraQueryParameters:i.extraQueryParameters,account:i.account}),o=await sn(Pa,sr.GetAuthCodeUrl,this.logger,this.performanceClient,e.correlationId)(this.config,r.authority,i,this.logger,this.performanceClient);return await this.initiateAuthRequest(o,t)}catch(e){throw e instanceof x&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}async executeEarFlow(e){const t=e.correlationId,r=await sn(this.getDiscoveredAuthority.bind(this),sr.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),n=await sn(rs,sr.GenerateEarKey,this.logger,this.performanceClient,t)(),o={...e,earJwk:n};return this.browserStorage.cacheAuthorizeRequest(o),(await Ma(document,this.config,r,o,this.logger,this.performanceClient)).submit(),new Promise((e,t)=>{setTimeout(()=>{t(ii(Zo,"failed_to_redirect"))},this.config.system.redirectNavigationTimeout)})}async handleRedirectPromise(e="",t,n,o){const i=this.initializeServerTelemetryManager(Ei.handleRedirectPromise);try{const[s,a]=this.getRedirectResponse(e||"");if(!s)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.resetRequestCache(),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation"),t=e.length?e[0]:void 0;return t?.type}()?o.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const c=this.browserStorage.getTemporaryCache(fi,!0)||r.EMPTY_STRING;if(jt.removeHashFromUrl(c)===jt.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),c.indexOf("#")>-1&&vs(c),await this.handleResponse(s,t,n,i);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(s,t,n,i);if(!ws()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(yi,a,!0);const e={apiId:Ei.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let r=!0;if(c&&"null"!==c)this.logger.verbose(`Navigating to loginRequestUrl: ${c}`),r=await this.navigationClient.navigateInternal(c,e);else{const t=As();this.browserStorage.setTemporaryCache(fi,t,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),r=await this.navigationClient.navigateInternal(t,e)}if(!r)return await this.handleResponse(s,t,n,i)}return null}catch(e){throw e instanceof x&&(e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e)),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let r=e;r||(r=this.config.auth.OIDCOptions.serverResponseType===y.QUERY?window.location.search:window.location.hash);let n=$t(r);if(n){try{!function(e,t,r){if(!e.state)throw ii(co);const n=function(e,t){if(!t)return null;try{return qn.parseRequestState(e,t).libraryState.meta}catch(e){throw Ne(j)}}(t,e.state);if(!n)throw ii(ho);if(n.interactionType!==r)throw ii(uo)}(n,this.browserCrypto,t.InteractionType.Redirect)}catch(e){return e instanceof x&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return Cs(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,r]}const o=this.browserStorage.getTemporaryCache(yi,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(yi)),o&&(n=$t(o),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t,r,n){if(!e.state)throw ii(co);if(e.ear_jwe){const r=await sn(this.getDiscoveredAuthority.bind(this),sr.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t.correlationId)({requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account});return sn(qa,sr.HandleResponseEar,this.logger,this.performanceClient,t.correlationId)(t,e,Ei.acquireTokenRedirect,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}const o=await sn(this.createAuthCodeClient.bind(this),sr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority});return sn(Na,sr.HandleResponseCode,this.logger,this.performanceClient,t.correlationId)(t,e,r,Ei.acquireTokenRedirect,this.config,o,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const r={apiId:Ei.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},n=t||this.config.auth.onRedirectNavigate;return"function"==typeof n?(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==n(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await this.navigationClient.navigateExternal(e,r)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")):(this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await this.navigationClient.navigateExternal(e,r))}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),ii(so)}async logout(e){this.logger.verbose("logoutRedirect called");const r=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(Ei.logout);try{this.eventHandler.emitEvent(oa.LOGOUT_START,t.InteractionType.Redirect,e),await this.clearCacheOnLogout(this.correlationId,r.account);const o={apiId:Ei.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=await sn(this.createAuthCodeClient.bind(this),sr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(i.authority.protocolMode===zt.OIDC)try{i.authority.endSessionEndpoint}catch{if(r.account?.homeAccountId)return this.browserStorage.removeAccount(r.account?.homeAccountId,this.correlationId),void this.eventHandler.emitEvent(oa.LOGOUT_SUCCESS,t.InteractionType.Redirect,r)}const s=i.getLogoutUri(r);if(this.eventHandler.emitEvent(oa.LOGOUT_SUCCESS,t.InteractionType.Redirect,r),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,mi),void await this.navigationClient.navigateExternal(s,o);if(!1!==e.onRedirectNavigate(s))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,mi),void await this.navigationClient.navigateExternal(s,o);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(e){throw e instanceof x&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.eventHandler.emitEvent(oa.LOGOUT_FAILURE,t.InteractionType.Redirect,null,e),this.eventHandler.emitEvent(oa.LOGOUT_END,t.InteractionType.Redirect),e}this.eventHandler.emitEvent(oa.LOGOUT_END,t.InteractionType.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return jt.getAbsoluteUrl(t,Ts())}}async function Ga(e,t,r,n,o){if(t.addQueueMeasurement(sr.SilentHandlerInitiateAuthRequest,n),!e)throw r.info("Navigate url is empty"),ii(so);return o?sn(ja,sr.SilentHandlerLoadFrame,r,t,n)(e,o,t,n):on(Wa,sr.SilentHandlerLoadFrameSync,r,t,n)(e)}async function $a(e,t,r,n,o){const i=Va();if(!i.contentDocument)throw"No document associated with iframe!";return(await Ma(i.contentDocument,e,t,r,n,o)).submit(),i}async function Qa(e,t,r,n,o,i,s){return n.addQueueMeasurement(sr.SilentHandlerMonitorIframeForHash,i),new Promise((n,i)=>{t<Hs&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);const a=window.setTimeout(()=>{window.clearInterval(c),i(ii(Co))},t),c=window.setInterval(()=>{let t="";const r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let o="";r&&(o=s===y.QUERY?r.location.search:r.location.hash),window.clearTimeout(a),window.clearInterval(c),n(o)},r)}).finally(()=>{on(Ja,sr.RemoveHiddenIframe,o,n,i)(e)})}function ja(e,t,r,n){return r.addQueueMeasurement(sr.SilentHandlerLoadFrame,n),new Promise((r,n)=>{const o=Va();window.setTimeout(()=>{o?(o.src=e,r(o)):n("Unable to load iframe")},t)})}function Wa(e){const t=Va();return t.src=e,t}function Va(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function Ja(e){document.body===e.parentNode&&document.body.removeChild(e)}class Ya extends va{constructor(e,t,r,n,o,i,s,a,c,l,h){super(e,t,r,n,o,i,a,l,h),this.apiId=s,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(sr.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const r={...e};r.prompt?r.prompt!==m.NONE&&r.prompt!==m.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${r.prompt} with ${m.NONE}`),r.prompt=m.NONE):r.prompt=m.NONE;const n=await sn(this.initializeAuthorizationRequest.bind(this),sr.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(r,t.InteractionType.Silent);return n.platformBroker=Fa(this.config,this.logger,this.platformAuthProvider,n.authenticationScheme),Ms(n.authority),this.config.auth.protocolMode===zt.EAR?this.executeEarFlow(n):this.executeCodeFlow(n)}async executeCodeFlow(e){let t;const r=this.initializeServerTelemetryManager(this.apiId);try{return t=await sn(this.createAuthCodeClient.bind(this),sr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),await sn(this.silentTokenHelper.bind(this),sr.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(t,e)}catch(n){if(n instanceof x&&(n.setCorrelationId(this.correlationId),r.cacheFailedRequest(n)),!(t&&n instanceof x&&n.errorCode===si))throw n;return this.performanceClient.addFields({retryError:n.errorCode},this.correlationId),await sn(this.silentTokenHelper.bind(this),sr.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(t,e)}}async executeEarFlow(e){const t=e.correlationId,r=await sn(this.getDiscoveredAuthority.bind(this),sr.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),n=await sn(rs,sr.GenerateEarKey,this.logger,this.performanceClient,t)(),o={...e,earJwk:n},i=await sn($a,sr.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,t)(this.config,r,o,this.logger,this.performanceClient),s=this.config.auth.OIDCOptions.serverResponseType,a=await sn(Qa,sr.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,t)(i,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,t,s),c=on(wa,sr.DeserializeResponse,this.logger,this.performanceClient,t)(a,s,this.logger);return sn(qa,sr.HandleResponseEar,this.logger,this.performanceClient,t)(o,c,this.apiId,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}logout(){return Promise.reject(ii(Ao))}async silentTokenHelper(e,t){const r=t.correlationId;this.performanceClient.addQueueMeasurement(sr.SilentIframeClientTokenHelper,r);const n=await sn(La,sr.GeneratePkceCodes,this.logger,this.performanceClient,r)(this.performanceClient,this.logger,r),o={...t,codeChallenge:n.challenge},i=await sn(Pa,sr.GetAuthCodeUrl,this.logger,this.performanceClient,r)(this.config,e.authority,o,this.logger,this.performanceClient),s=await sn(Ga,sr.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(i,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),a=this.config.auth.OIDCOptions.serverResponseType,c=await sn(Qa,sr.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,a),l=on(wa,sr.DeserializeResponse,this.logger,this.performanceClient,r)(c,a,this.logger);return sn(Na,sr.HandleResponseCode,this.logger,this.performanceClient,r)(t,l,n.verifier,this.apiId,this.config,e,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}}class Xa extends va{async acquireToken(e){this.performanceClient.addQueueMeasurement(sr.SilentRefreshClientAcquireToken,e.correlationId);const t=await sn(ya,sr.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));const n=this.initializeServerTelemetryManager(Ei.acquireTokenSilent_silentFlow),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return sn(o.acquireTokenByRefreshToken.bind(o),sr.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch(e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e})}logout(){return Promise.reject(ii(Ao))}async createRefreshTokenClient(e){const t=await sn(this.getClientConfiguration.bind(this),sr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new zn(t,this.performanceClient)}}class Za{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}async loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw ii(Po);const n=e.correlationId||es(),o=t.id_token?Be(t.id_token,Di):void 0,i={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},s=e.authority?new cn(cn.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,i,this.logger,e.correlationId||es()):void 0,a=await this.loadAccount(e,r.clientInfo||t.client_info||"",n,o,s),c=await this.loadIdToken(t,a.homeAccountId,a.environment,a.realm,n),l=await this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r,n),h=await this.loadRefreshToken(t,a.homeAccountId,a.environment,n);return this.generateAuthenticationResult(e,{account:a,idToken:c,accessToken:l,refreshToken:h},o,s)}async loadAccount(e,t,r,n,o){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=Kt.createFromAccountInfo(e.account);return await this.storage.setAccount(t,r),t}if(!o||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),ii(Uo);const i=Kt.generateHomeAccountId(t,o.authorityType,this.logger,this.cryptoObj,n),s=n?.tid,a=Hn(this.storage,o,i,Di,r,n,t,o.hostnameAndPort,s,void 0,void 0,this.logger);return await this.storage.setAccount(a,r),a}async loadIdToken(e,t,r,n,o){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const i=We(t,r,e.id_token,this.config.auth.clientId,n);return await this.storage.setIdTokenCredential(i,o),i}async loadAccessToken(e,t,r,n,o,i,s){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const a=t.scope?Lt.fromString(t.scope):new Lt(e.scopes),c=i.expiresOn||t.expires_in+ze(),l=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+ze(),h=Ve(r,n,t.access_token,this.config.auth.clientId,o,a.printScopes(),c,l,Di);return await this.storage.setAccessTokenCredential(h,s),h}async loadRefreshToken(e,t,r,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const o=Je(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return await this.storage.setRefreshTokenCredential(o,n),o}generateAuthenticationResult(e,t,r,n){let o,i="",s=[],a=null;t?.accessToken&&(i=t.accessToken.secret,s=Lt.fromString(t.accessToken.target).asArray(),a=Ge(t.accessToken.expiresOn),o=Ge(t.accessToken.extendedExpiresOn));const c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:s,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:i,fromCache:!0,expiresOn:a,correlationId:e.correlationId||"",requestId:"",extExpiresOn:o,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class ec extends Fn{constructor(e){super(e),this.includeRedirectUri=!1}}class tc extends va{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,a,c,l),this.apiId=s}async acquireToken(e){if(!e.code)throw ii(Ho);const r=await sn(this.initializeAuthorizationRequest.bind(this),sr.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,t.InteractionType.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const t={...r,code:e.code},o=await sn(this.getClientConfiguration.bind(this),sr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),i=new ec(o);this.logger.verbose("Auth code client created");const s=new Ia(i,this.browserStorage,t,this.logger,this.performanceClient);return await sn(s.handleCodeResponseFromServer.bind(s),sr.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},r,!1)}catch(e){throw e instanceof x&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}logout(){return Promise.reject(ii(Ao))}}function rc(e){const t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?"9188040d-6c67-4c5b-b112-36a304b66dad"===t?.tid?"MSA":"AAD":void 0}function nc(e,t){try{_s(e)}catch(e){throw t.end({success:!1},e),e}}class oc{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Vs(this.logger,this.performanceClient):qe,this.eventHandler=new ma(this.logger),this.browserStorage=this.isBrowserEnvironment?new ia(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,hn(this.config.auth)):aa(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler);const t={cacheLocation:gi.MemoryStorage,temporaryCacheLocation:gi.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new ia(this.config.auth.clientId,t,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler),this.tokenCache=new Za(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){const r=new oc(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e,t){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(oa.INITIALIZE_END);const r=e?.correlationId||this.getRequestCorrelationId(),n=this.config.system.allowPlatformBroker,o=this.performanceClient.startMeasurement(sr.InitializeClientApplication,r);if(this.eventHandler.emitEvent(oa.INITIALIZE_START),!t)try{this.logMultipleInstances(o)}catch{}if(await sn(this.browserStorage.initialize.bind(this.browserStorage),sr.InitializeCache,this.logger,this.performanceClient,r)(r),n)try{this.platformAuthProvider=await Ba(this.logger,this.performanceClient,r,this.config.system.nativeBrokerHandshakeTimeout)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),on(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),sr.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,r)(r)),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(r),this.initialized=!0,this.eventHandler.emitEvent(oa.INITIALIZE_END),o.end({allowPlatformBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),Rs(this.initialized),this.isBrowserEnvironment){const t=e||"";let r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getInteractionInProgress()?.type;if(r===mi)return this.logger.verbose("handleRedirectPromise removing interaction_in_progress flag and returning null after sign-out"),this.browserStorage.setInteractionInProgress(!1),Promise.resolve(null);const n=this.getAllAccounts(),o=this.browserStorage.getCachedNativeRequest(),i=o&&this.platformAuthProvider&&!e;let s,a;this.eventHandler.emitEvent(oa.HANDLE_REDIRECT_START,t.InteractionType.Redirect);try{if(i&&this.platformAuthProvider){s=this.performanceClient.startMeasurement(sr.AcquireTokenRedirect,o?.correlationId||""),this.logger.trace("handleRedirectPromise - acquiring token from native platform");const e=new Ra(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ei.handleRedirectPromise,this.performanceClient,this.platformAuthProvider,o.accountId,this.nativeInternalStorage,o.correlationId);a=sn(e.handleRedirectPromise.bind(e),sr.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(this.performanceClient,s.event.correlationId)}else{const[t,r]=this.browserStorage.getCachedRequest(),n=t.correlationId;s=this.performanceClient.startMeasurement(sr.AcquireTokenRedirect,n),this.logger.trace("handleRedirectPromise - acquiring token from web flow");const o=this.createRedirectClient(n);a=sn(o.handleRedirectPromise.bind(o),sr.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(e,t,r,s)}}catch(e){throw this.browserStorage.resetRequestCache(),e}return a.then(e=>(e?(this.browserStorage.resetRequestCache(),n.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(oa.LOGIN_SUCCESS,t.InteractionType.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),s.end({success:!0,accountType:rc(e.account)})):s.event.errorCode?s.end({success:!1}):s.discard(),this.eventHandler.emitEvent(oa.HANDLE_REDIRECT_END,t.InteractionType.Redirect),e)).catch(e=>{this.browserStorage.resetRequestCache();const r=e;throw n.length>0?this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Redirect,null,r):this.eventHandler.emitEvent(oa.LOGIN_FAILURE,t.InteractionType.Redirect,null,r),this.eventHandler.emitEvent(oa.HANDLE_REDIRECT_END,t.InteractionType.Redirect),s.end({success:!1},r),e})}async acquireTokenRedirect(e){const r=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",r);const n=this.performanceClient.startMeasurement(sr.AcquireTokenPreRedirect,r);n.add({accountType:rc(e.account),scenarioId:e.scenarioId});const o=e.onRedirectNavigate;if(o)e.onRedirectNavigate=e=>{const t="function"==typeof o?o(e):void 0;return!1!==t?n.end({success:!0}):n.discard(),t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const r="function"==typeof e?e(t):void 0;return!1!==r?n.end({success:!0}):n.discard(),r}}const i=this.getAllAccounts().length>0;try{let o;return Ps(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,pi),i?this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_START,t.InteractionType.Redirect,e):this.eventHandler.emitEvent(oa.LOGIN_START,t.InteractionType.Redirect,e),o=this.platformAuthProvider&&this.canUsePlatformBroker(e)?new Ra(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ei.acquireTokenRedirect,this.performanceClient,this.platformAuthProvider,this.getNativeAccountId(e),this.nativeInternalStorage,r).acquireTokenRedirect(e,n).catch(t=>{if(t instanceof ka&&Sa(t))return this.platformAuthProvider=void 0,this.createRedirectClient(r).acquireToken(e);if(t instanceof Mn)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(r).acquireToken(e);throw t}):this.createRedirectClient(r).acquireToken(e),await o}catch(e){throw this.browserStorage.resetRequestCache(),n.end({success:!1},e),i?this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Redirect,null,e):this.eventHandler.emitEvent(oa.LOGIN_FAILURE,t.InteractionType.Redirect,null,e),e}}acquireTokenPopup(e){const r=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(sr.AcquireTokenPopup,r);n.add({scenarioId:e.scenarioId,accountType:rc(e.account)});try{this.logger.verbose("acquireTokenPopup called",r),nc(this.initialized,n),this.browserStorage.setInteractionInProgress(!0,pi)}catch(e){return Promise.reject(e)}const o=this.getAllAccounts();let i;o.length>0?this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_START,t.InteractionType.Popup,e):this.eventHandler.emitEvent(oa.LOGIN_START,t.InteractionType.Popup,e);const s=this.getPreGeneratedPkceCodes(r);return i=this.canUsePlatformBroker(e)?this.acquireTokenNative({...e,correlationId:r},Ei.acquireTokenPopup).then(e=>(n.end({success:!0,isNativeBroker:!0,accountType:rc(e.account)}),e)).catch(t=>{if(t instanceof ka&&Sa(t))return this.platformAuthProvider=void 0,this.createPopupClient(r).acquireToken(e,s);if(t instanceof Mn)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(r).acquireToken(e,s);throw t}):this.createPopupClient(r).acquireToken(e,s),i.then(e=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(oa.LOGIN_SUCCESS,t.InteractionType.Popup,e):this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Popup,e),n.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:rc(e.account)}),e)).catch(e=>(o.length>0?this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Popup,null,e):this.eventHandler.emitEvent(oa.LOGIN_FAILURE,t.InteractionType.Popup,null,e),n.end({success:!1},e),Promise.reject(e))).finally(async()=>{this.browserStorage.setInteractionInProgress(!1),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(r)})}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const r=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:r};let o;return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(sr.SsoSilent,r),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:rc(e.account)}),nc(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",r),this.eventHandler.emitEvent(oa.SSO_SILENT_START,t.InteractionType.Silent,n),o=this.canUsePlatformBroker(n)?this.acquireTokenNative(n,Ei.ssoSilent).catch(e=>{if(e instanceof ka&&Sa(e))return this.platformAuthProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw e}):this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(e=>(this.eventHandler.emitEvent(oa.SSO_SILENT_SUCCESS,t.InteractionType.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:rc(e.account)}),e)).catch(e=>{throw this.eventHandler.emitEvent(oa.SSO_SILENT_FAILURE,t.InteractionType.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const r=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",r);const n=this.performanceClient.startMeasurement(sr.AcquireTokenByCode,r);nc(this.initialized,n),this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_BY_CODE_START,t.InteractionType.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw ii(Bo);if(e.code){const o=e.code;let i=this.hybridAuthCodeResponses.get(o);return i?(this.logger.verbose("Existing acquireTokenByCode request found",r),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",r),i=this.acquireTokenByCodeAsync({...e,correlationId:r}).then(e=>(this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_BY_CODE_SUCCESS,t.InteractionType.Silent,e),this.hybridAuthCodeResponses.delete(o),n.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:rc(e.account)}),e)).catch(e=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_BY_CODE_FAILURE,t.InteractionType.Silent,null,e),n.end({success:!1},e),e}),this.hybridAuthCodeResponses.set(o,i)),await i}if(e.nativeAccountId){if(this.canUsePlatformBroker(e,e.nativeAccountId)){const t=await this.acquireTokenNative({...e,correlationId:r},Ei.acquireTokenByCode,e.nativeAccountId).catch(e=>{throw e instanceof ka&&Sa(e)&&(this.platformAuthProvider=void 0),e});return n.end({accountType:rc(t.account),success:!0}),t}throw ii(zo)}throw ii(Do)}catch(e){throw this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_BY_CODE_FAILURE,t.InteractionType.Silent,null,e),n.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(sr.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then(e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker}),e)).catch(e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(sr.AcquireTokenFromCache,e.correlationId),t){case Ni.Default:case Ni.AccessToken:case Ni.AccessTokenAndRefreshToken:const t=this.createSilentCacheClient(e.correlationId);return sn(t.acquireToken.bind(t),sr.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw Ne(ye)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(sr.AcquireTokenByRefreshToken,e.correlationId),t){case Ni.Default:case Ni.AccessTokenAndRefreshToken:case Ni.RefreshToken:case Ni.RefreshTokenAndNetwork:const t=this.createSilentRefreshClient(e.correlationId);return sn(t.acquireToken.bind(t),sr.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw Ne(ye)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(sr.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return sn(t.acquireToken.bind(t),sr.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return Ps(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,mi),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return _s(this.initialized),this.browserStorage.setInteractionInProgress(!0,mi),this.createPopupClient(t).logout(e).finally(()=>{this.browserStorage.setInteractionInProgress(!1)})}catch(e){return Promise.reject(e)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){const t=this.getRequestCorrelationId();return ca(this.logger,this.browserStorage,this.isBrowserEnvironment,t,e)}getAccount(e){const t=this.getRequestCorrelationId();return la(e,this.logger,this.browserStorage,t)}getAccountByUsername(e){const t=this.getRequestCorrelationId();return ha(e,this.logger,this.browserStorage,t)}getAccountByHomeId(e){const t=this.getRequestCorrelationId();return da(e,this.logger,this.browserStorage,t)}getAccountByLocalId(e){const t=this.getRequestCorrelationId();return ua(e,this.logger,this.browserStorage,t)}setActiveAccount(e){const t=this.getRequestCorrelationId();ga(e,this.browserStorage,t)}getActiveAccount(){const e=this.getRequestCorrelationId();return pa(this.browserStorage,e)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Kt.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return await this.browserStorage.setAccount(r,e.correlationId),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r,n){if(this.logger.trace("acquireTokenNative called"),!this.platformAuthProvider)throw ii($o);return new Ra(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.platformAuthProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e,n)}canUsePlatformBroker(e,t){if(this.logger.trace("canUsePlatformBroker called"),!this.platformAuthProvider)return this.logger.trace("canUsePlatformBroker: platform broker unavilable, returning false"),!1;if(!Fa(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme))return this.logger.trace("canUsePlatformBroker: isBrokerAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case m.NONE:case m.CONSENT:case m.LOGIN:this.logger.trace("canUsePlatformBroker: prompt is compatible with platform broker flow");break;default:return this.logger.trace(`canUsePlatformBroker: prompt = ${e.prompt} is not compatible with platform broker flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e)&&(this.logger.trace("canUsePlatformBroker: nativeAccountId is not available, returning false"),1))}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new za(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createRedirectClient(e){return new Ka(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentIframeClient(e){return new Ya(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ei.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentCacheClient(e){return new Ea(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentRefreshClient(e){return new Xa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentAuthCodeClient(e){return new tc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ei.acquireTokenByCode,this.performanceClient,this.platformAuthProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return Es(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.config.cache.cacheLocation===gi.LocalStorage?this.eventHandler.subscribeCrossTab():this.logger.info("Account storage events are only available when cacheLocation is set to localStorage")}disableAccountStorageEvents(){this.config.cache.cacheLocation===gi.LocalStorage?this.eventHandler.unsubscribeCrossTab():this.logger.info("Account storage events are only available when cacheLocation is set to localStorage")}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?es():r.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||Pi})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||Pi})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(sr.AcquireTokenSilent,t);r.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),nc(this.initialized,r),this.logger.verbose("acquireTokenSilent called",t);const n=e.account||this.getActiveAccount();if(!n)throw ii(ko);return r.add({accountType:rc(n)}),this.acquireTokenSilentDeduped(e,n,t).then(n=>(r.end({success:!0,fromCache:n.fromCache,isNativeBroker:n.fromNativeBroker,accessTokenSize:n.accessToken.length,idTokenSize:n.idToken.length}),{...n,state:e.state,correlationId:t})).catch(e=>{throw e instanceof x&&e.setCorrelationId(t),r.end({success:!1},e),e})}async acquireTokenSilentDeduped(e,t,r){const n=gn(this.config.auth.clientId,{...e,authority:e.authority||this.config.auth.authority},t.homeAccountId),o=JSON.stringify(n),i=this.activeSilentTokenRequests.get(o);if(void 0===i){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",r),this.performanceClient.addFields({deduped:!1},r);const n=sn(this.acquireTokenSilentAsync.bind(this),sr.AcquireTokenSilentAsync,this.logger,this.performanceClient,r)({...e,correlationId:r},t);return this.activeSilentTokenRequests.set(o,n),n.finally(()=>{this.activeSilentTokenRequests.delete(o)})}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",r),this.performanceClient.addFields({deduped:!0},r),i}async acquireTokenSilentAsync(e,r){const n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(sr.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_START,t.InteractionType.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);const o=await sn(Ca,sr.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,r,this.config,this.performanceClient,this.logger),i=e.cacheLookupPolicy||Ni.Default;return this.acquireTokenSilentNoIframe(o,i).catch(async e=>{const t=function(e,t){const r=!(e instanceof Mn&&e.subError!==Sn),n=e.errorCode===si||e.errorCode===ye,o=r&&n||e.errorCode===Cn||e.errorCode===wn,i=qi.includes(t);return o&&i}(e,i);if(t){if(this.activeIframeRequest){if(i!==Ni.Skip){const[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,o.correlationId);const n=this.performanceClient.startMeasurement(sr.AwaitConcurrentIframe,o.correlationId);n.add({awaitIframeCorrelationId:r});const s=await t;if(n.end({success:s}),s)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,o.correlationId),this.acquireTokenSilentNoIframe(o,i);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",o.correlationId),sn(this.acquireTokenBySilentIframe.bind(this),sr.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o)}{let e;return this.activeIframeRequest=[new Promise(t=>{e=t}),o.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",o.correlationId),sn(this.acquireTokenBySilentIframe.bind(this),sr.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o).then(t=>(e(!0),t)).catch(t=>{throw e(!1),t}).finally(()=>{this.activeIframeRequest=void 0})}}throw e}).then(r=>(this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,r),e.correlationId&&this.performanceClient.addFields({fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker},e.correlationId),r)).catch(e=>{throw this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Silent,null,e),e}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,r){return Fa(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,Ei.acquireTokenSilent_silentFlow,e.account.nativeAccountId,r).catch(async e=>{if(e instanceof ka&&Sa(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.platformAuthProvider=void 0,Ne(ye);throw e})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),r===Ni.AccessToken&&this.logger.verbose("acquireTokenSilent - cache lookup policy set to AccessToken, attempting to acquire token from local cache"),sn(this.acquireTokenFromCache.bind(this),sr.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,r).catch(n=>{if(r===Ni.AccessToken)throw n;return this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_NETWORK_START,t.InteractionType.Silent,e),sn(this.acquireTokenByRefreshToken.bind(this),sr.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,r)}))}async preGeneratePkceCodes(e){return this.logger.verbose("Generating new PKCE codes"),this.pkceCode=await sn(La,sr.GeneratePkceCodes,this.logger,this.performanceClient,e)(this.performanceClient,this.logger,e),Promise.resolve()}getPreGeneratedPkceCodes(e){this.logger.verbose("Attempting to pick up pre-generated PKCE codes");const t=this.pkceCode?{...this.pkceCode}:void 0;return this.pkceCode=void 0,this.logger.verbose((t?"Found":"Did not find")+" pre-generated PKCE codes"),this.performanceClient.addFields({usePreGeneratedPkce:!!t},e),t}logMultipleInstances(e){const t=this.config.auth.clientId;window&&(window.msal=window.msal||{},window.msal.clientIds=window.msal.clientIds||[],window.msal.clientIds.length>0&&this.logger.verbose("There is already an instance of MSAL.js in the window."),window.msal.clientIds.push(t),function(e,t,r){const n=window.msal?.clientIds||[],o=n.length,i=n.filter(t=>t===e).length;i>1&&r.warning("There is already an instance of MSAL.js in the window with the same client id."),t.add({msalInstanceCount:o,sameClientIdInstanceCount:i})}(t,e,this.logger))}}class ic{constructor(e,t,r,n){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=n}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));const r=e.correlationId||this.crypto.createNewGuid(),o=Xr(e.claims,this.clientCapabilities),i=e.scopes||n;return{platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:i.join(" "),correlationId:r,claims:qt.isEmptyObj(o)?void 0:o,state:e.state,authenticationScheme:e.authenticationScheme||_.BEARER,extraParameters:t}}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw Ne(z);const n=Ge(r+(t.token.expires_in||0)),o=Be(t.token.id_token,this.crypto.base64Decode),i=this.fromNaaAccountInfo(t.account,t.token.id_token,o),s=t.token.scope||e.scope;return{authority:t.token.authority||i.environment,uniqueId:i.localAccountId,tenantId:i.tenantId,scopes:s.split(" "),account:i,idToken:t.token.id_token,idTokenClaims:o,accessToken:t.token.access_token,fromCache:!1,expiresOn:n,tokenType:e.authenticationScheme||_.BEARER,correlationId:e.correlationId,extExpiresOn:n,state:e.state}}fromNaaAccountInfo(e,t,r){const n=r||e.idTokenClaims,o=e.localAccountId||n?.oid||n?.sub||"",i=e.tenantId||n?.tid||"",s=e.homeAccountId||`${o}.${i}`,a=e.username||n?.preferred_username||"",c=e.name||n?.name,l=new Map,h=Dt(s,o,i,n);return l.set(i,h),{homeAccountId:s,environment:e.environment,tenantId:i,username:a,localAccountId:o,name:c,idToken:t,idTokenClaims:n,tenantProfiles:l}}fromBridgeError(e){if(!function(e){return void 0!==e.status}(e))return new x("unknown_error","An unknown error occurred");switch(e.status){case"USER_CANCEL":return new Oe(Se);case"NO_NETWORK":return new Oe(ke);case"ACCOUNT_UNAVAILABLE":return new Oe(ue);case"DISABLED":return new Oe(Re);case zs:return new Oe(e.code||Re,e.description);case"TRANSIENT_ERROR":case"PERSISTENT_ERROR":return new un(e.code,e.description);case"USER_INTERACTION_REQUIRED":return new Mn(e.code,e.description);default:return new x(e.code,e.description)}}toAuthenticationResultFromCache(e,t,r,n,o){if(!t||!r)throw Ne(z);const i=Be(t.secret,this.crypto.base64Decode),s=r.target||n.scopes.join(" ");return{authority:r.environment||e.environment,uniqueId:e.localAccountId,tenantId:e.tenantId,scopes:s.split(" "),account:e,idToken:t.secret,idTokenClaims:i||{},accessToken:r.secret,fromCache:!0,expiresOn:Ge(r.expiresOn),extExpiresOn:Ge(r.extendedExpiresOn),tokenType:n.authenticationScheme||_.BEARER,correlationId:o,state:n.state}}}const sc="unsupported_method",ac="This method is not supported in nested app environment.";class cc extends x{constructor(e,t){super(e,t),Object.setPrototypeOf(this,cc.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new cc(sc,ac)}}class lc{constructor(e){this.operatingContext=e;const t=this.operatingContext.getBridgeProxy();if(void 0===t)throw new Error("unexpected: bridgeProxy is undefined");this.bridgeProxy=t,this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new Vs(this.logger,this.performanceClient,!0):qe,this.eventHandler=new ma(this.logger),this.browserStorage=this.operatingContext.isBrowserEnvironment()?new ia(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,hn(this.config.auth)):aa(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler),this.nestedAppAuthAdapter=new ic(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger);const r=this.bridgeProxy.getAccountContext();this.currentAccountContext=r||null}static async createController(e){const t=new lc(e);return Promise.resolve(t)}async initialize(e,t){const r=e?.correlationId||es();return await this.browserStorage.initialize(r),Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){const r=this.ensureValidRequest(e);this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_START,t.InteractionType.Popup,r);const n=this.performanceClient.startMeasurement(sr.AcquireTokenPopup,r.correlationId);n?.add({nestedAppAuthRequest:!0});try{const o=this.nestedAppAuthAdapter.toNaaTokenRequest(r),i=ze(),s=await this.bridgeProxy.getTokenInteractive(o),a={...this.nestedAppAuthAdapter.fromNaaTokenResponse(o,s,i)};return await this.hydrateCache(a,e),this.currentAccountContext={homeAccountId:a.account.homeAccountId,environment:a.account.environment,tenantId:a.account.tenantId},this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Popup,a),n.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),n.end({success:!0,requestId:a.requestId}),a}catch(e){const r=e instanceof x?e:this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Popup,null,e),n.end({success:!1},e),r}}async acquireTokenSilentInternal(e){const r=this.ensureValidRequest(e);this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_START,t.InteractionType.Silent,r);const n=await this.acquireTokenFromCache(r);if(n)return this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,n),n;const o=this.performanceClient.startMeasurement(sr.SsoSilent,r.correlationId);o?.increment({visibilityChangeCount:0}),o?.add({nestedAppAuthRequest:!0});try{const n=this.nestedAppAuthAdapter.toNaaTokenRequest(r),i=ze(),s=await this.bridgeProxy.getTokenSilent(n),a=this.nestedAppAuthAdapter.fromNaaTokenResponse(n,s,i);return await this.hydrateCache(a,e),this.currentAccountContext={homeAccountId:a.account.homeAccountId,environment:a.account.environment,tenantId:a.account.tenantId},this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,a),o?.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),o?.end({success:!0,requestId:a.requestId}),a}catch(e){const r=e instanceof x?e:this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Silent,null,e),o?.end({success:!1},e),r}}async acquireTokenFromCache(e){const r=this.performanceClient.startMeasurement(sr.AcquireTokenSilent,e.correlationId);if(r?.add({nestedAppAuthRequest:!0}),e.claims)return this.logger.verbose("Claims are present in the request, skipping cache lookup"),null;if(e.forceRefresh)return this.logger.verbose("forceRefresh is set to true, skipping cache lookup"),null;let n=null;switch(e.cacheLookupPolicy||(e.cacheLookupPolicy=Ni.Default),e.cacheLookupPolicy){case Ni.Default:case Ni.AccessToken:case Ni.AccessTokenAndRefreshToken:n=await this.acquireTokenFromCacheInternal(e);break;default:return null}return n?(this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,n),r?.add({accessTokenSize:n?.accessToken.length,idTokenSize:n?.idToken.length}),r?.end({success:!0}),n):(this.logger.warning("Cached tokens are not found for the account, proceeding with silent token request."),this.eventHandler.emitEvent(oa.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Silent,null),r?.end({success:!1}),null)}async acquireTokenFromCacheInternal(e){const t=this.bridgeProxy.getAccountContext()||this.currentAccountContext;let r=null;const o=e.correlationId||this.browserCrypto.createNewGuid();if(t&&(r=la(t,this.logger,this.browserStorage,o)),!r)return this.logger.verbose("No active account found, falling back to the host"),Promise.resolve(null);this.logger.verbose("active account found, attempting to acquire token silently");const i={...e,correlationId:e.correlationId||this.browserCrypto.createNewGuid(),authority:e.authority||r.environment,scopes:e.scopes?.length?e.scopes:[...n]},s=this.browserStorage.getTokenKeys(),a=this.browserStorage.getAccessToken(r,i,s,r.tenantId);if(!a)return this.logger.verbose("No cached access token found"),Promise.resolve(null);if(Qe(a.cachedAt)||$e(a.expiresOn,this.config.system.tokenRenewalOffsetSeconds))return this.logger.verbose("Cached access token has expired"),Promise.resolve(null);const c=this.browserStorage.getIdToken(r,i.correlationId,s,r.tenantId,this.performanceClient);return c?this.nestedAppAuthAdapter.toAuthenticationResultFromCache(r,c,a,i,i.correlationId):(this.logger.verbose("No cached id token found"),Promise.resolve(null))}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw cc.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw cc.createUnsupportedError()}acquireTokenNative(e,t,r){throw cc.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw cc.createUnsupportedError()}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw cc.createUnsupportedError()}removePerformanceCallback(e){throw cc.createUnsupportedError()}enableAccountStorageEvents(){throw cc.createUnsupportedError()}disableAccountStorageEvents(){throw cc.createUnsupportedError()}getAllAccounts(e){const t=this.browserCrypto.createNewGuid();return ca(this.logger,this.browserStorage,this.isBrowserEnv(),t,e)}getAccount(e){const t=this.browserCrypto.createNewGuid();return la(e,this.logger,this.browserStorage,t)}getAccountByUsername(e){const t=this.browserCrypto.createNewGuid();return ha(e,this.logger,this.browserStorage,t)}getAccountByHomeId(e){const t=this.browserCrypto.createNewGuid();return da(e,this.logger,this.browserStorage,t)}getAccountByLocalId(e){const t=this.browserCrypto.createNewGuid();return ua(e,this.logger,this.browserStorage,t)}setActiveAccount(e){const t=this.browserCrypto.createNewGuid();return ga(e,this.browserStorage,t)}getActiveAccount(){const e=this.browserCrypto.createNewGuid();return pa(this.browserStorage,e)}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||Pi)}loginRedirect(e){throw cc.createUnsupportedError()}logout(e){throw cc.createUnsupportedError()}logoutRedirect(e){throw cc.createUnsupportedError()}logoutPopup(e){throw cc.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw cc.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw cc.createUnsupportedError()}getRedirectResponse(){throw cc.createUnsupportedError()}async clearCache(e){throw cc.createUnsupportedError()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Kt.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return await this.browserStorage.setAccount(r,e.correlationId),this.browserStorage.hydrateCache(e,t)}}async function hc(e){const t=new $s(e),r=new Gs(e),n=[t.initialize(),r.initialize()];return await Promise.all(n),r.isAvailable()&&e.auth.supportsNestedAppAuth?lc.createController(r):t.isAvailable()?oc.createController(t):null}class dc{static async createPublicClientApplication(e){const t=await async function(e){const t=new $s(e);return await t.initialize(),oc.createController(t,void 0)}(e);return new dc(e,t)}constructor(e,t){this.isBroker=!1,this.controller=t||new oc(new $s(e))}async initialize(e){return this.controller.initialize(e,this.isBroker)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}async function uc(e){const t=new dc(e);return await t.initialize(),t}class gc{constructor(e){this.initialized=!1,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.logger=e.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Vs(this.logger,this.performanceClient):qe,this.eventHandler=new ma(this.logger),this.browserStorage=this.isBrowserEnvironment?new ia(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,void 0):aa(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler)}getBrowserStorage(){return this.browserStorage}getAccount(e){return null}getAccountByHomeId(e){return null}getAccountByLocalId(e){return null}getAccountByUsername(e){return null}getAllAccounts(){return[]}initialize(){return this.initialized=!0,Promise.resolve()}acquireTokenPopup(e){return Rs(this.initialized),Es(),{}}acquireTokenRedirect(e){return Rs(this.initialized),Es(),Promise.resolve()}acquireTokenSilent(e){return Rs(this.initialized),Es(),{}}acquireTokenByCode(e){return Rs(this.initialized),Es(),{}}acquireTokenNative(e,t,r){return Rs(this.initialized),Es(),{}}acquireTokenByRefreshToken(e,t){return Rs(this.initialized),Es(),{}}addEventCallback(e,t){return null}removeEventCallback(e){}addPerformanceCallback(e){return Rs(this.initialized),Es(),""}removePerformanceCallback(e){return Rs(this.initialized),Es(),!0}enableAccountStorageEvents(){Rs(this.initialized),Es()}disableAccountStorageEvents(){Rs(this.initialized),Es()}handleRedirectPromise(e){return Rs(this.initialized),Promise.resolve(null)}loginPopup(e){return Rs(this.initialized),Es(),{}}loginRedirect(e){return Rs(this.initialized),Es(),{}}logout(e){return Rs(this.initialized),Es(),{}}logoutRedirect(e){return Rs(this.initialized),Es(),{}}logoutPopup(e){return Rs(this.initialized),Es(),{}}ssoSilent(e){return Rs(this.initialized),Es(),{}}getTokenCache(){return Rs(this.initialized),Es(),{}}getLogger(){return this.logger}setLogger(e){Rs(this.initialized),Es()}setActiveAccount(e){Rs(this.initialized),Es()}getActiveAccount(){return Rs(this.initialized),Es(),null}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){Rs(this.initialized),Es()}getConfiguration(){return this.config}isBrowserEnv(){return Rs(this.initialized),Es(),!0}getBrowserCrypto(){return Rs(this.initialized),Es(),{}}getPerformanceClient(){return Rs(this.initialized),Es(),{}}getRedirectResponse(){return Rs(this.initialized),Es(),{}}async clearCache(e){Rs(this.initialized),Es()}async hydrateCache(e,t){Rs(this.initialized),Es()}}class pc extends Fs{getId(){return pc.ID}getModuleName(){return pc.MODULE_NAME}async initialize(){return!0}}pc.MODULE_NAME="",pc.ID="UnknownOperatingContext";class mc{static async createPublicClientApplication(e){const t=await hc(e);let r;return r=null!==t?new mc(e,t):new mc(e),r}constructor(e,t){if(this.configuration=e,t)this.controller=t;else{const t=new pc(e);this.controller=new gc(t)}}async initialize(){if(this.controller instanceof gc){const e=await hc(this.configuration);return null!==e&&(this.controller=e),this.controller.initialize()}return Promise.resolve()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}const fc={initialize:()=>Promise.reject(ys(ds)),acquireTokenPopup:()=>Promise.reject(ys(ds)),acquireTokenRedirect:()=>Promise.reject(ys(ds)),acquireTokenSilent:()=>Promise.reject(ys(ds)),acquireTokenByCode:()=>Promise.reject(ys(ds)),getAllAccounts:()=>[],getAccount:()=>null,getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(ys(ds)),loginPopup:()=>Promise.reject(ys(ds)),loginRedirect:()=>Promise.reject(ys(ds)),logout:()=>Promise.reject(ys(ds)),logoutRedirect:()=>Promise.reject(ys(ds)),logoutPopup:()=>Promise.reject(ys(ds)),ssoSilent:()=>Promise.reject(ys(ds)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw ys(ds)},getLogger:()=>{throw ys(ds)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw ys(ds)},hydrateCache:()=>Promise.reject(ys(ds)),clearCache:()=>Promise.reject(ys(ds))};function yc(){let e;try{e=window[gi.SessionStorage];const t=e?.getItem("msal.browser.performance.enabled");if(1===Number(t))return Promise.resolve().then(function(){return Ic})}catch(e){}}function Cc(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.now}function vc(e){if(e&&Cc())return Math.round(window.performance.now()-e)}class wc{constructor(e,t){this.correlationId=t,this.measureName=wc.makeMeasureName(e,t),this.startMark=wc.makeStartMark(e,t),this.endMark=wc.makeEndMark(e,t)}static makeMeasureName(e,t){return`msal.measure.${e}.${t}`}static makeStartMark(e,t){return`msal.start.${e}.${t}`}static makeEndMark(e,t){return`msal.end.${e}.${t}`}static supportsBrowserPerformance(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.mark&&"function"==typeof window.performance.measure&&"function"==typeof window.performance.clearMarks&&"function"==typeof window.performance.clearMeasures&&"function"==typeof window.performance.getEntriesByName}static flushMeasurements(e,t){if(wc.supportsBrowserPerformance())try{t.forEach(t=>{const r=wc.makeMeasureName(t.name,e);window.performance.getEntriesByName(r,"measure").length>0&&(window.performance.clearMeasures(r),window.performance.clearMarks(wc.makeStartMark(r,e)),window.performance.clearMarks(wc.makeEndMark(r,e)))})}catch(e){}}startMeasurement(){if(wc.supportsBrowserPerformance())try{window.performance.mark(this.startMark)}catch(e){}}endMeasurement(){if(wc.supportsBrowserPerformance())try{window.performance.mark(this.endMark),window.performance.measure(this.measureName,this.startMark,this.endMark)}catch(e){}}flushMeasurement(){if(wc.supportsBrowserPerformance())try{const e=window.performance.getEntriesByName(this.measureName,"measure");if(e.length>0){const t=e[0].duration;return window.performance.clearMeasures(this.measureName),window.performance.clearMarks(this.startMark),window.performance.clearMarks(this.endMark),t}}catch(e){}return null}}var Ic=Object.freeze({__proto__:null,BrowserPerformanceMeasurement:wc});t.AccountEntity=Kt,t.ApiId=Ei,t.AuthError=x,t.AuthErrorCodes=q,t.AuthErrorMessage=U,t.AuthenticationHeaderParser=class{constructor(e){this.headers=e}getShrNonce(){const e=this.headers["Authentication-Info"];if(e){const t=this.parseChallenges(e);if(t.nextnonce)return t.nextnonce;throw Nt(St)}const t=this.headers["WWW-Authenticate"];if(t){const e=this.parseChallenges(t);if(e.nonce)return e.nonce;throw Nt(St)}throw Nt(kt)}parseChallenges(e){const t=e.indexOf(" "),n=e.substr(t+1).split(","),o={};return n.forEach(e=>{const[t,n]=e.split("=");o[t]=unescape(n.replace(/['"]+/g,r.EMPTY_STRING))}),o}},t.AuthenticationScheme=_,t.AzureCloudInstance=De,t.BrowserAuthError=oi,t.BrowserAuthErrorCodes=ei,t.BrowserAuthErrorMessage=ni,t.BrowserCacheLocation=gi,t.BrowserConfigurationAuthError=fs,t.BrowserConfigurationAuthErrorCodes=gs,t.BrowserConfigurationAuthErrorMessage=ms,t.BrowserPerformanceClient=class extends to{constructor(e,t,n){super(e.auth.clientId,e.auth.authority||`${r.DEFAULT_AUTHORITY}`,new Ue(e.system?.loggerOptions||{},Ds,Bs),Ds,Bs,e.telemetry?.application||{appName:"",appVersion:""},t,n)}generateId(){return es()}getPageVisibility(){return document.visibilityState?.toString()||null}deleteIncompleteSubMeasurements(e){yc()?.then(t=>{const r=this.eventsByCorrelationId.get(e.event.correlationId),n=r&&r.eventId===e.event.eventId,o=[];n&&r?.incompleteSubMeasurements&&r.incompleteSubMeasurements.forEach(e=>{o.push({...e})}),t.BrowserPerformanceMeasurement.flushMeasurements(e.event.correlationId,o)})}startMeasurement(e,t){const r=this.getPageVisibility(),n=super.startMeasurement(e,t),o=Cc()?window.performance.now():void 0,i=yc()?.then(t=>new t.BrowserPerformanceMeasurement(e,n.event.correlationId));return i?.then(e=>e.startMeasurement()),{...n,end:(e,t)=>{const s=n.end({...e,startPageVisibility:r,endPageVisibility:this.getPageVisibility(),durationMs:vc(o)},t);return i?.then(e=>e.endMeasurement()),this.deleteIncompleteSubMeasurements(n),s},discard:()=>{n.discard(),i?.then(e=>e.flushMeasurement()),this.deleteIncompleteSubMeasurements(n)}}}setPreQueueTime(e,t){if(!Cc())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to set telemetry queue time`);const r=this.preQueueTimeByCorrelationId.get(t);r&&(this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${r.name} found`,t),this.addQueueMeasurement(r.name,t,void 0,!0)),this.preQueueTimeByCorrelationId.set(t,{name:e,time:window.performance.now()})}addQueueMeasurement(e,t,r,n){if(!Cc())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to add queue measurement`);const o=super.getPreQueueTime(e,t);if(!o)return;const i=window.performance.now(),s=r||super.calculateQueuedTime(o,i);return super.addQueueMeasurement(e,t,s,n)}},t.BrowserPerformanceMeasurement=wc,t.BrowserUtils=Ns,t.CacheLookupPolicy=Ni,t.ClientAuthError=Oe,t.ClientAuthErrorCodes=_e,t.ClientAuthErrorMessage=Me,t.ClientConfigurationError=Ot,t.ClientConfigurationErrorCodes=_t,t.ClientConfigurationErrorMessage=Mt,t.DEFAULT_IFRAME_TIMEOUT_MS=Hs,t.EventHandler=ma,t.EventMessageUtils=class{static getInteractionStatusFromEvent(e,r){switch(e.eventType){case oa.LOGIN_START:return _i.Login;case oa.SSO_SILENT_START:return _i.SsoSilent;case oa.ACQUIRE_TOKEN_START:if(e.interactionType===t.InteractionType.Redirect||e.interactionType===t.InteractionType.Popup)return _i.AcquireToken;break;case oa.HANDLE_REDIRECT_START:return _i.HandleRedirect;case oa.LOGOUT_START:return _i.Logout;case oa.SSO_SILENT_SUCCESS:case oa.SSO_SILENT_FAILURE:if(r&&r!==_i.SsoSilent)break;return _i.None;case oa.LOGOUT_END:if(r&&r!==_i.Logout)break;return _i.None;case oa.HANDLE_REDIRECT_END:if(r&&r!==_i.HandleRedirect)break;return _i.None;case oa.LOGIN_SUCCESS:case oa.LOGIN_FAILURE:case oa.ACQUIRE_TOKEN_SUCCESS:case oa.ACQUIRE_TOKEN_FAILURE:case oa.RESTORE_FROM_BFCACHE:if(e.interactionType===t.InteractionType.Redirect||e.interactionType===t.InteractionType.Popup){if(r&&r!==_i.Login&&r!==_i.AcquireToken)break;return _i.None}}return null}},t.EventType=oa,t.InteractionRequiredAuthError=Mn,t.InteractionRequiredAuthErrorCodes=bn,t.InteractionRequiredAuthErrorMessage=Pn,t.InteractionStatus=_i,t.JsonWebTokenTypes=M,t.LocalStorage=ra,t.Logger=Ue,t.MemoryStorage=js,t.NavigationClient=qs,t.OIDC_DEFAULT_SCOPES=n,t.PerformanceEvents=sr,t.PromptValue=m,t.ProtocolMode=zt,t.PublicClientApplication=dc,t.PublicClientNext=mc,t.ServerError=un,t.ServerResponseType=y,t.SessionStorage=na,t.SignedHttpRequest=class{constructor(e,t){const r=t&&t.loggerOptions||{};this.logger=new Ue(r,Ds,Bs),this.cryptoOps=new Vs(this.logger),this.popTokenGenerator=new Ln(this.cryptoOps),this.shrParameters=e}async generatePublicKeyThumbprint(){const{kid:e}=await this.popTokenGenerator.generateKid(this.shrParameters);return e}async signRequest(e,t,r){return this.popTokenGenerator.signPayload(e,t,this.shrParameters,r)}async removeKeys(e){return this.cryptoOps.removeTokenBindingKey(e).then(()=>!0).catch(e=>{if(e instanceof Oe&&e.errorCode===Ie)return!1;throw e})}},t.StringUtils=qt,t.StubPerformanceClient=hr,t.UrlString=jt,t.WrapperSKU={React:"@azure/msal-react",Angular:"@azure/msal-angular"},t.createNestablePublicClientApplication=async function(e){const t=new Gs(e);if(await t.initialize(),t.isAvailable()){const r=new lc(t),n=new dc(e,r);return await n.initialize(),n}return uc(e)},t.createStandardPublicClientApplication=uc,t.isPlatformBrokerAvailable=async function(e,t,r){const n=new Ue(e||{},Ds,Bs);n.trace("isPlatformBrokerAvailable called");const o=t||new hr;return"undefined"==typeof window?(n.trace("Non-browser environment detected, returning false"),!1):!!await Ba(n,o,r||es())},t.stubbedPublicClientApplication=fc,t.version=Bs},973:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(o,i){function s(e){try{c(n.next(e))}catch(e){i(e)}}function a(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r(function(e){e(t)})).then(s,a)}c((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=r(201);class i{constructor(){this.conversationStartTimes={},this.callerNumbers={},this.msalInstance=null,this.dataverseUrl="https://kolapg.crm.dynamics.com",this.accessToken="",this.tokenExpiry=null,this.initializeMSAL()}initializeMSAL(){const e={auth:{clientId:"276c5d8a-9bab-4dab-a2c3-7ac438c6ba2b",authority:"https://login.microsoftonline.com/c87f36f7-fc65-453c-9019-0d724f21bc42",redirectUri:window.location.origin},cache:{cacheLocation:"sessionStorage",storeAuthStateInCookie:!1}};this.msalInstance=new o.PublicClientApplication(e)}initialize(){return n(this,void 0,void 0,function*(){try{this.msalInstance&&(yield this.msalInstance.initialize(),yield this.getAccessToken())}catch(e){console.warn("MSAL initialization failed:",e)}if(void 0===window.sforce||void 0===window.sforce.opencti){const e="/support/api/54.0/lightning/opencti.js",t=`${new URL(document.referrer).origin}${e}`;return i.loadScript(t)}return Promise.resolve(!0)})}getAccessToken(){return n(this,void 0,void 0,function*(){if(!this.msalInstance)throw new Error("MSAL not initialized");if(this.accessToken&&this.tokenExpiry&&new Date<this.tokenExpiry)return this.accessToken;const e={scopes:[`${this.dataverseUrl}/.default`],account:this.msalInstance.getActiveAccount()};try{const t=yield this.msalInstance.acquireTokenSilent(e);return this.accessToken=t.accessToken,this.tokenExpiry=t.expiresOn||null,this.accessToken}catch(t){const r=yield this.msalInstance.acquireTokenPopup(e);return this.accessToken=r.accessToken,this.tokenExpiry=r.expiresOn||null,this.accessToken}})}bindEvents(){var e,t;const r=null===(t=null===(e=window.Microsoft)||void 0===e?void 0:e.CCaaS)||void 0===t?void 0:t.EmbedSDK;r&&(r.conversation.onConversationLoaded(e=>{console.log("Conversation loaded:",e),console.log("Available properties:",Object.keys(e)),console.log("customerPhoneNumber:",e.customerPhoneNumber),console.log("customerName:",e.customerName);const{liveWorkItemId:t,customerPhoneNumber:r}=e;console.log(e),this.conversationStartTimes[t]=new Date,this.callerNumbers[t]=r||"",console.log("Stored phone number:",this.callerNumbers[t])}),r.conversation.onStatusChange(e=>n(this,void 0,void 0,function*(){const{liveWorkItemId:t,statusCode:r}=e;if(console.log("Status update received:",e),5===r||4===r){const e=this.conversationStartTimes[t],r=new Date,n=Math.floor((r.getTime()-e.getTime())/1e3),o=this.callerNumbers[t];let i=null,s="Unknown";if(o)try{const e=yield this.findContactByPhone(o);e?(i=e.Id,s=e.Name,console.log(`Found existing contact: ${s} (${i})`)):console.log(`No contact found for phone number: ${o}`)}catch(e){console.error("Error searching for contact:",e)}const a=Object.assign(Object.assign({Subject:`Call with ${s}`,TaskSubtype:"Call",CallType:"Inbound",CallDurationInSeconds:n,Phone:o,ActivityDate:(new Date).toISOString().split("T")[0],Status:"Completed",Priority:"Normal"},i&&{WhoId:i}),{Call_Start_Time__c:e.toISOString(),Call_End_Time__c:r.toISOString(),Description:`Inbound call from ${s} (${o||"Unknown number"})\nDuration: ${Math.floor(n/60)}:${(n%60).toString().padStart(2,"0")}\nStart: ${e.toLocaleString()}\nEnd: ${r.toLocaleString()}\n`+(i?"Linked to existing contact":"No existing contact found"),entityApiName:"Task"});console.log("Enhanced Task log data to be saved:",a),window.sforce.opencti.saveLog({value:a,callback:e=>{e.success?console.log(`Task logged successfully and ${i?"linked to contact "+i:"created without contact link"}:`,e):console.error("Failed to save task:",e.errors||"An unknown error occurred.")}})}})),r.presence.onPresenceChange(e=>n(this,void 0,void 0,function*(){console.log("Presence changed:",e),"OFFLINE"!==e.presenceText&&"AWAY"!==e.presenceText||(yield this.closeOpenConversationsOnPresenceChange())})))}static loadScript(e){return new Promise((t,r)=>{const n=document.createElement("script");n.type="text/javascript",n.async=!0,n.src=e,n.onload=function(){t(!0)},n.onerror=function(){r(new Error(`Error in loading ${e}`))},document.getElementsByTagName("head")[0].appendChild(n)})}findContactByPhone(e){return n(this,void 0,void 0,function*(){if(!e||""===e.trim())return null;const t=this.cleanPhoneNumber(e);return new Promise(e=>{window.sforce.opencti.searchAndScreenPop({searchParams:t,queryParams:"Contact",callType:window.sforce.opencti.CALL_TYPE.INBOUND,callback:t=>{var r;if(console.log("=== FULL SEARCH RESULT DEBUG ==="),console.log("result.success:",t.success),console.log("result.returnValue type:",typeof t.returnValue),console.log("result.returnValue:",JSON.stringify(t.returnValue,null,2)),console.log("result.returnValue keys:",Object.keys(t.returnValue||{})),t.success&&t.returnValue){let n=t.returnValue;const o=this.parseContactSearchResults(n);if(o&&o.length>0)return console.log("Found contact via parsing:",o[0]),void e(o[0]);if("Contact"===n.RecordType||n.attributes&&"Contact"===n.attributes.type)return console.log("Found single Contact record via direct access"),void e({Id:n.Id,Name:n.Name||(null===(r=n.attributes)||void 0===r?void 0:r.name)||"Unknown Contact"});console.log("No Contact records found in results"),e(null)}else console.log("No contacts found or search failed:",t),e(null)}})})})}cleanPhoneNumber(e){return e.replace(/[^\d+]/g,"")}parseContactSearchResults(e){try{if(console.log("=== PARSING SEARCH RESULTS ==="),console.log("searchResults type:",typeof e),console.log("searchResults:",e),console.log("searchResults keys:",Object.keys(e||{})),!e||"object"!=typeof e)return console.log("No valid search results to parse"),null;const t=Object.values(e);if(console.log("Converted to records array:",t),0===t.length)return console.log("No records found in search results"),null;console.log("Processing",t.length,"records");const r=t.map((e,t)=>(console.log(`Record ${t}:`,e),console.log(`Record ${t} RecordType:`,e.RecordType),console.log(`Record ${t} Id:`,e.Id),console.log(`Record ${t} Name:`,e.Name),e)).filter(e=>{const t="Contact"===e.RecordType;return console.log(`Record ${e.Id} is Contact:`,t),t}).map(e=>{const t={Id:e.Id,Name:e.Name||"Unknown Contact"};return console.log("Mapped contact:",t),t});return console.log("Final contacts array:",r),r.length>0?r:null}catch(t){return console.error("Error parsing contact search results:",t),console.error("searchResults that caused error:",e),null}}closeOpenConversationsOnPresenceChange(){return n(this,void 0,void 0,function*(){var e,t;try{const r=null===(t=null===(e=window.Microsoft)||void 0===e?void 0:e.CCaaS)||void 0===t?void 0:t.EmbedSDK,n=yield r.conversation.getAssignedConversationsList(2);if(n&&n.length>0){console.log(`Found ${n.length} active conversations to close`);const e=n.map(e=>e.liveWorkItemId);yield this.closeMultipleConversations(e),console.log("All active conversations closed due to presence change")}}catch(e){console.error("Error closing conversations on presence change:",e)}})}closeMultipleConversations(e){return n(this,void 0,void 0,function*(){for(const t of e)try{yield this.closeConversation(t)}catch(e){console.error(`Failed to close conversation ${t}:`,e)}})}closeConversation(e){return n(this,void 0,void 0,function*(){try{yield this.getAccessToken();const t=`${this.dataverseUrl}/api/data/v9.2/msdyn_ocliveworkitems(${e})`,r={statuscode:4,statecode:1,msdyn_closedon:(new Date).toISOString()},n=yield fetch(t,{method:"PATCH",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json","OData-MaxVersion":"4.0","OData-Version":"4.0","If-Match":"*"},body:JSON.stringify(r)});if(!n.ok)throw new Error(`Failed to close conversation: ${n.status}`);console.log(`Conversation ${e} closed successfully`)}catch(t){console.error(`Error closing conversation ${e}:`,t)}})}}window.CCaaS=window.CCaaS||{},window.CCaaS.CTIDriver||(window.CCaaS.CTIDriver=i),t.default=i}},t={};!function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}(973)})();
